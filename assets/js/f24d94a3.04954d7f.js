"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[27468],{9313:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/graph-migration-result-80aeb59ea4b66177f3921398f086f2b4.png"},14025:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/execute-data-migration-statements-fbb21468a47b0bd335c8d7d31cf0b70e.png"},28453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>s});var r=a(96540);const i={},n=r.createContext(i);function o(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(n.Provider,{value:t},e.children)}},53911:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var r=a(74848),i=a(28453);const n={},o="Data Migration",s={id:"best-practices/data_migration",title:"Data Migration",description:"1 Introduction",source:"@site/versions/version-4.5.2/en-US/source/13.best-practices/3.data_migration.md",sourceDirName:"13.best-practices",slug:"/best-practices/data_migration",permalink:"/tugraph-db/en/4.5.2/best-practices/data_migration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using TuGraph Graph Learning Module for Node Classification",permalink:"/tugraph-db/en/4.5.2/best-practices/learn_practices"},next:{title:"Environment and version selection",permalink:"/tugraph-db/en/4.5.2/best-practices/selection"}},d={},c=[{value:"1 Introduction",id:"1-introduction",level:2},{value:"2. Compatible Migration",id:"2-compatible-migration",level:2},{value:"2.1. Backup data",id:"21-backup-data",level:3},{value:"2.2. Start a new service",id:"22-start-a-new-service",level:3},{value:"2.3. Stop the original service",id:"23-stop-the-original-service",level:3},{value:"3. Upgrade migration",id:"3-upgrade-migration",level:2},{value:"3.1. Export data",id:"31-export-data",level:3},{value:"3.2. Import data",id:"32-import-data",level:3},{value:"3.3. Start a new service",id:"33-start-a-new-service",level:3},{value:"3.4. Stop the original service",id:"34-stop-the-original-service",level:3},{value:"4. Online Migration",id:"4-online-migration",level:2},{value:"4.1. Copy data",id:"41-copy-data",level:3},{value:"4.2. Starting a new node",id:"42-starting-a-new-node",level:3},{value:"4.3. Stop the original node",id:"43-stop-the-original-node",level:3},{value:"5. Graph Project-Level Data Migration",id:"5-graph-project-level-data-migration",level:2},{value:"5.1. TuGraph Data Directory Description",id:"51-tugraph-data-directory-description",level:3},{value:"5.2. Graph Project Data Migration",id:"52-graph-project-data-migration",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"data-migration",children:"Data Migration"})}),"\n",(0,r.jsx)(t.h2,{id:"1-introduction",children:"1 Introduction"}),"\n",(0,r.jsx)(t.p,{children:"Data migration refers to the process of moving data from one system, storage medium, or application to another system, storage medium, or application. When TuGraph needs to be upgraded or the system hardware environment changes,\nThe data in the original TuGraph service needs to be migrated. Based on the system hardware environment and software version, this paper divides data migration into three schemes:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Compatible migration: When the system environment before and after the migration is consistent and the TuGraph software is compatible, you can directly use the backup and recovery method to migrate data;"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Upgrade and migration: When the system environment before and after the migration is inconsistent or the TuGraph software is not compatible, it is necessary to migrate the data by first exporting the data and then re-importing;"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Online migration: When data migration is performed on a high-availability cluster and the network environment of the cluster is good, the original cluster can be smoothly switched to the new cluster by adding or deleting nodes."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Graph project-level data migration : It includes the migration of subgraph data within the same TuGraph service as well as between different TuGraph services."}),"\n",(0,r.jsx)(t.p,{children:"Please note that the incompatibility of TuGraph software is mainly reflected in storage methods when transitioning across major versions. The following sections will provide a detailed introduction to these four solutions."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"2-compatible-migration",children:"2. Compatible Migration"}),"\n",(0,r.jsxs)(t.p,{children:["Compatible migration means that when the system environment remains unchanged and the TuGraph software version is compatible, the data and stored procedures of the original service can be used in the new service, so it can be directly migrated.\nUsers can first use the ",(0,r.jsx)(t.code,{children:"lgraph_backup"})," tool to back up the data, then transfer the data to a new machine and restart the service. The specific migration steps are as follows:"]}),"\n",(0,r.jsx)(t.h3,{id:"21-backup-data",children:"2.1. Backup data"}),"\n",(0,r.jsxs)(t.p,{children:["Backup data using ",(0,r.jsx)(t.code,{children:"lgraph_backup"})," tool"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   lgraph_backup -s db -d db.bck\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You can also directly use the ",(0,r.jsx)(t.code,{children:"cp"})," command in this step, but the ",(0,r.jsx)(t.code,{children:"cp"})," command will copy some redundant metadata, and the raft metadata will also be copied in the HA mode, causing the cluster to fail to restart after migration.\nTherefore, it is recommended to use the ",(0,r.jsx)(t.code,{children:"lgraph_backup"})," tool instead of the ",(0,r.jsx)(t.code,{children:"cp"})," command during data migration."]}),"\n",(0,r.jsx)(t.h3,{id:"22-start-a-new-service",children:"2.2. Start a new service"}),"\n",(0,r.jsx)(t.p,{children:"Use the following command to start the new service, and the stored procedure will be automatically loaded into the new service"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   lgraph_server -c /usr/local/etc/lgraph.json --directory db.bck -d start\n"})}),"\n",(0,r.jsx)(t.h3,{id:"23-stop-the-original-service",children:"2.3. Stop the original service"}),"\n",(0,r.jsx)(t.p,{children:"Use the following command to stop the original service"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   lgraph_server -c /usr/local/etc/lgraph.json --directory db.bck -d stop\n"})}),"\n",(0,r.jsx)(t.h2,{id:"3-upgrade-migration",children:"3. Upgrade migration"}),"\n",(0,r.jsxs)(t.p,{children:["When the user wants to migrate the original service to a differentiated environment (such as migrating from centos7 to ubuntu18.04), or when the version of TuGraph changes greatly and is incompatible (such as 3.4.0 and 3.6.0),\nUsers can first use the ",(0,r.jsx)(t.code,{children:"lgraph_export"})," tool to export the data into a file, transfer it to a new machine, and then use the ",(0,r.jsx)(t.code,{children:"lgraph_import"})," tool to re-import and restart the cluster.\nThis can ensure that it can be used in the new environment, but the efficiency is low, and the stored procedure needs to be reloaded. The specific migration steps are as follows:"]}),"\n",(0,r.jsx)(t.h3,{id:"31-export-data",children:"3.1. Export data"}),"\n",(0,r.jsxs)(t.p,{children:["Use the ",(0,r.jsx)(t.code,{children:"lgraph_export"})," tool to export the data and transfer the data to the new machine"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   lgraph_export -d db -e db.export\n"})}),"\n",(0,r.jsx)(t.h3,{id:"32-import-data",children:"3.2. Import data"}),"\n",(0,r.jsxs)(t.p,{children:["Use the ",(0,r.jsx)(t.code,{children:"lgraph_import"})," tool to import data and manually load the stored procedure (see ",(0,r.jsx)(t.a,{href:"/tugraph-db/en/4.5.2/client-tools/cpp-client",children:"client operation steps"})," for details)"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   lgraph_import -c db.export/import.config -d db\n"})}),"\n",(0,r.jsx)(t.h3,{id:"33-start-a-new-service",children:"3.3. Start a new service"}),"\n",(0,r.jsx)(t.p,{children:"Start the new service with the following command"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"    lgraph_server -c /usr/local/etc/lgraph.json --directory db.export -d start\n"})}),"\n",(0,r.jsx)(t.h3,{id:"34-stop-the-original-service",children:"3.4. Stop the original service"}),"\n",(0,r.jsx)(t.p,{children:"Use the following command to stop the original service"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"    lgraph_server -c /usr/local/etc/lgraph.json --directory db.export -d stop\n"})}),"\n",(0,r.jsx)(t.h2,{id:"4-online-migration",children:"4. Online Migration"}),"\n",(0,r.jsx)(t.p,{children:"When performing data migration on the server cluster deployed by the high-availability version of TuGraph, if the network bandwidth is sufficient, you can directly migrate the service online by adding or deleting nodes. The specific migration steps are as follows:"}),"\n",(0,r.jsx)(t.h3,{id:"41-copy-data",children:"4.1. Copy data"}),"\n",(0,r.jsx)(t.p,{children:"Use the following commands to copy the data on the leader node and transfer it to the machine nodes of the new cluster. Since the leader node has the most complete raft log, copying the leader's data can minimize\nThe time for the log to catch up."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   cp -r db db.cp\n"})}),"\n",(0,r.jsx)(t.h3,{id:"42-starting-a-new-node",children:"4.2. Starting a new node"}),"\n",(0,r.jsx)(t.p,{children:"Use the following command to join the new node to the cluster. After joining the cluster, the incremental data will be automatically synchronized to the new node"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   lgraph_server -c /usr/local/etc/lgraph_ha.json --directory db.cp --ha_conf 192.168.0.1:9090,192.168.0.2:9090,192.168.0.3:9090 -d start\n"})}),"\n",(0,r.jsx)(t.h3,{id:"43-stop-the-original-node",children:"4.3. Stop the original node"}),"\n",(0,r.jsx)(t.p,{children:"Stop the original node service, and send subsequent application requests directly to the new cluster"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"   lgraph_server -c /usr/local/etc/lgraph_ha.json --directory db.cp --ha_conf 192.168.0.1:9090,192.168.0.2:9090,192.168.0.3:9090 -d stop\n"})}),"\n",(0,r.jsx)(t.h2,{id:"5-graph-project-level-data-migration",children:"5. Graph Project-Level Data Migration"}),"\n",(0,r.jsx)(t.p,{children:"Graph project-level data migration includes subgraph data migration within the same TuGraph service as well as subgraph data migration between different TuGraph services. For subgraph data migration within the same TuGraph service, you can migrate a graph project from the current service to a new project. The new project will be completely consistent with the migrated project in terms of models, nodes, and edges data. For subgraph data migration between different TuGraph services, you can migrate a graph project from another TuGraph service to the current TuGraph service. The models and data will remain consistent before and after the migration."}),"\n",(0,r.jsx)(t.h3,{id:"51-tugraph-data-directory-description",children:"5.1. TuGraph Data Directory Description"}),"\n",(0,r.jsxs)(t.p,{children:["As shown in the figure, data is by default located in the ",(0,r.jsx)(t.code,{children:"/var/lib/lgraph/data"})," directory. Within this path, each directory named with a long string represents the data storage location of a specific graph project. By entering one of these directories, you can find the data.mdb file, which stores the specific models and data for that graph project.The data storage directory for graph projects currently does not support naming by project names, so different projects can be distinguished by their creation time."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"dataPath",src:a(69132).A+"",width:"753",height:"356"})}),"\n",(0,r.jsx)(t.h3,{id:"52-graph-project-data-migration",children:"5.2. Graph Project Data Migration"}),"\n",(0,r.jsx)(t.p,{children:"Execute the following statement in the graph query of any graph project to perform the migration:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'   CALL db.importor.fullFileImportor("${newGraphName}","data.mdb",false)\n'})}),"\n",(0,r.jsx)(t.p,{children:"Parameter Description:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"The first parameter is the name of the new subgraph."}),"\n",(0,r.jsx)(t.li,{children:'The second parameter is the absolute file path of the graph project to be migrated on the server. For path details, please refer to the "TuGraph Data Directory Description".'}),"\n",(0,r.jsx)(t.li,{children:"The third parameter specifies whether the file is a remote file. If it is a local file on the server, set this parameter to false or leave it unset."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Note:\nIf the name of the new subgraph specified in the first parameter already exists in an existing graph project, the original subgraph data will be overwritten by the migrated data. If the subgraph does not exist, a new subgraph will be created. It is advisable to avoid using duplicate names to prevent data loss due to overwriting."}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'CALL db.importor.fullFileImportor("test","/var/lib/lgraph/data/9DF16A038435BBAAE36E53D1E09DED17/data.mdb",false)\n'})}),"\n",(0,r.jsx)(t.p,{children:"Execute the migration statement within the graph query of any graph project."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"execute-data-migration-statements",src:a(14025).A+"",width:"1157",height:"660"})}),"\n",(0,r.jsx)(t.p,{children:"After executing the migration statement, check the new subgraph."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"graph-migration-result",src:a(9313).A+"",width:"1549",height:"791"})}),"\n",(0,r.jsx)(t.p,{children:"To achieve cross-TuGraph service data migration, you can first copy the target data directory to the current TuGraph server. By executing the aforementioned migration steps, you can perform seamless data and model migration while the service remains operational."})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},69132:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/dataPath-c65eab4c53eb5b6985dea79fdc6c55d0.png"}}]);