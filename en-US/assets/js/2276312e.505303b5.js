"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[56563],{68824:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=r(74848),t=r(28453);const i={},s="TuGraph DataX",o={id:"utility-tools/tugraph-datax",title:"TuGraph DataX",description:"This document mainly introduces the installation, compilation and usage examples of TuGraph DataX",source:"@site/versions/version-4.5.1/en-US/source/6.utility-tools/7.tugraph-datax.md",sourceDirName:"6.utility-tools",slug:"/utility-tools/tugraph-datax",permalink:"/tugraph-db/en-US/en/4.5.1/utility-tools/tugraph-datax",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tugraph CLI",permalink:"/tugraph-db/en-US/en/4.5.1/utility-tools/tugraph-cli"},next:{title:"TuGraph Explorer",permalink:"/tugraph-db/en-US/en/4.5.1/utility-tools/tugraph-explorer"}},l={},d=[{value:"1.Introduction",id:"1introduction",level:2},{value:"2.Compile and Install",id:"2compile-and-install",level:2},{value:"3.Import TuGraph",id:"3import-tugraph",level:2},{value:"3.1.Text data imported into TuGraph with DataX",id:"31text-data-imported-into-tugraph-with-datax",level:3},{value:"3.2.MySQL&#39;s data imported into TuGraph with DataX",id:"32mysqls-data-imported-into-tugraph-with-datax",level:3},{value:"4.Export TuGraph",id:"4export-tugraph",level:2},{value:"4.1. Configuration example",id:"41-configuration-example",level:3},{value:"4.2. Parameter Description",id:"42-parameter-description",level:3}];function h(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"tugraph-datax",children:"TuGraph DataX"})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"This document mainly introduces the installation, compilation and usage examples of TuGraph DataX"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"1introduction",children:"1.Introduction"}),"\n",(0,a.jsxs)(e.p,{children:["On the basis of Ali's open source DataX, TuGraph implements the support of writing plug-ins and jsonline data format, and other data sources can write data into TuGraph through DataX.\nTuGraph DataX introduces ",(0,a.jsx)(e.a,{href:"https://github.com/TuGraph-family/DataX",children:"https://github.com/TuGraph-family/DataX"}),", Supported features include:"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"Import TuGraph from various heterogeneous data sources such as MySQL, SQL Server,Oracle, PostgreSQL, HDFS, Hive, HBase, OTS, ODPS, Kafka and so on."}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"Import TuGraph to the corresponding target source (to be developed)."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Reference for DataX Original Project Introduction ",(0,a.jsx)(e.a,{href:"https://github.com/alibaba/DataX",children:"https://github.com/alibaba/DataX"})]}),"\n",(0,a.jsx)(e.h2,{id:"2compile-and-install",children:"2.Compile and Install"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/TuGraph-family/DataX.git\nyum install maven\nmvn -U clean package assembly:assembly -Dmaven.test.skip=true\n"})}),"\n",(0,a.jsx)(e.p,{children:"The compiled DataX file is in the target directory"}),"\n",(0,a.jsx)(e.h2,{id:"3import-tugraph",children:"3.Import TuGraph"}),"\n",(0,a.jsx)(e.h3,{id:"31text-data-imported-into-tugraph-with-datax",children:"3.1.Text data imported into TuGraph with DataX"}),"\n",(0,a.jsxs)(e.p,{children:["Using the data from the lgraph_import section of the TuGraph manual as an example, we have three csv data files, as follows:\n",(0,a.jsx)(e.code,{children:"actors.csv"})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"\nnm015950,Stephen Chow\nnm0628806,Man-Tat Ng\nnm0156444,Cecilia Cheung\nnm2514879,Yuqi Zhang\n\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.code,{children:"movies.csv"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"\ntt0188766,King of Comedy,1999,7.3\ntt0286112,Shaolin Soccer,2001,7.3\ntt4701660,The Mermaid,2016,6.3\n\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.code,{children:"roles.csv"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"\nnm015950,Tianchou Yin,tt0188766\nnm015950,Steel Leg,tt0286112\nnm0628806,,tt0188766\nnm0628806,coach,tt0286112\nnm0156444,PiaoPiao Liu,tt0188766\nnm2514879,Ruolan Li,tt4701660\n\n"})}),"\n",(0,a.jsxs)(e.p,{children:["Then create three DataX job profiles:\n",(0,a.jsx)(e.code,{children:"job_actors.json"})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "job": {\n    "setting": {\n      "speed": {\n        "channel": 1\n      }\n    },\n    "content": [\n      {\n        "reader": {\n          "name": "txtfilereader",\n          "parameter": {\n            "path": ["actors.csv"],\n            "encoding": "UTF-8",\n            "column": [\n              {\n                "index": 0,\n                "type": "string"\n              },\n              {\n                "index": 1,\n                "type": "string"\n              }\n            ],\n            "fieldDelimiter": ","\n          }\n        },\n        "writer": {\n          "name": "tugraphwriter",\n          "parameter": {\n            "host": "127.0.0.1",\n            "port": 7071,\n            "username": "admin",\n            "password": "73@TuGraph",\n            "graphName": "default",\n            "schema": [\n              {\n                "label": "actor",\n                "type": "VERTEX",\n                "properties": [\n                  { "name": "aid", "type": "STRING" },\n                  { "name": "name", "type": "STRING" }\n                ],\n                "primary": "aid"\n              }\n            ],\n            "files": [\n              {\n                "label": "actor",\n                "format": "JSON",\n                "columns": ["aid", "name"]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.code,{children:"job_movies.json"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "job": {\n    "setting": {\n      "speed": {\n        "channel": 1\n      }\n    },\n    "content": [\n      {\n        "reader": {\n          "name": "txtfilereader",\n          "parameter": {\n            "path": ["movies.csv"],\n            "encoding": "UTF-8",\n            "column": [\n              {\n                "index": 0,\n                "type": "string"\n              },\n              {\n                "index": 1,\n                "type": "string"\n              },\n              {\n                "index": 2,\n                "type": "string"\n              },\n              {\n                "index": 3,\n                "type": "string"\n              }\n            ],\n            "fieldDelimiter": ","\n          }\n        },\n        "writer": {\n          "name": "tugraphwriter",\n          "parameter": {\n            "host": "127.0.0.1",\n            "port": 7071,\n            "username": "admin",\n            "password": "73@TuGraph",\n            "graphName": "default",\n            "schema": [\n              {\n                "label": "movie",\n                "type": "VERTEX",\n                "properties": [\n                  { "name": "mid", "type": "STRING" },\n                  { "name": "name", "type": "STRING" },\n                  { "name": "year", "type": "STRING" },\n                  { "name": "rate", "type": "FLOAT", "optional": true }\n                ],\n                "primary": "mid"\n              }\n            ],\n            "files": [\n              {\n                "label": "movie",\n                "format": "JSON",\n                "columns": ["mid", "name", "year", "rate"]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.code,{children:"job_roles.json"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "job": {\n    "setting": {\n      "speed": {\n        "channel": 1\n      }\n    },\n    "content": [\n      {\n        "reader": {\n          "name": "txtfilereader",\n          "parameter": {\n            "path": ["roles.csv"],\n            "encoding": "UTF-8",\n            "column": [\n              {\n                "index": 0,\n                "type": "string"\n              },\n              {\n                "index": 1,\n                "type": "string"\n              },\n              {\n                "index": 2,\n                "type": "string"\n              }\n            ],\n            "fieldDelimiter": ","\n          }\n        },\n        "writer": {\n          "name": "tugraphwriter",\n          "parameter": {\n            "host": "127.0.0.1",\n            "port": 7071,\n            "username": "admin",\n            "password": "73@TuGraph",\n            "graphName": "default",\n            "schema": [\n              {\n                "label": "play_in",\n                "type": "EDGE",\n                "properties": [{ "name": "role", "type": "STRING" }]\n              }\n            ],\n            "files": [\n              {\n                "label": "play_in",\n                "format": "JSON",\n                "SRC_ID": "actor",\n                "DST_ID": "movie",\n                "columns": ["SRC_ID", "role", "DST_ID"]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"/lgraph_server -c lgraph_standalone.json -d 'run'"})," 'Start TuGraph and run the following commands in sequence:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"python3 datax/bin/datax.py  job_actors.json\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"python3 datax/bin/datax.py  job_movies.json\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"python3 datax/bin/datax.py  job_roles.json\n"})}),"\n",(0,a.jsx)(e.h3,{id:"32mysqls-data-imported-into-tugraph-with-datax",children:"3.2.MySQL's data imported into TuGraph with DataX"}),"\n",(0,a.jsx)(e.p,{children:"We create the following table of movies under 'test' database"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE `movies` (\n  `mid`  varchar(200) NOT NULL,\n  `name` varchar(100) NOT NULL,\n  `year` int(11) NOT NULL,\n  `rate` float(5,2) unsigned NOT NULL,\n  PRIMARY KEY (`mid`)\n);\n"})}),"\n",(0,a.jsx)(e.p,{children:"Insert some data into the table"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",children:"insert into\ntest.movies (mid, name, year, rate)\nvalues\n('tt0188766', 'King of Comedy', 1999, 7.3),\n('tt0286112', 'Shaolin Soccer', 2001, 7.3),\n('tt4701660', 'The Mermaid',   2016,  6.3);\n"})}),"\n",(0,a.jsx)(e.p,{children:"Create a DataX job configuration file"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.code,{children:"job_mysql_to_tugraph.json"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Configuring Field"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "job": {\n    "setting": {\n      "speed": {\n        "channel": 1\n      }\n    },\n    "content": [\n      {\n        "reader": {\n          "name": "mysqlreader",\n          "parameter": {\n            "username": "root",\n            "password": "root",\n            "column": ["mid", "name", "year", "rate"],\n            "splitPk": "mid",\n            "connection": [\n              {\n                "table": ["movies"],\n                "jdbcUrl": ["jdbc:mysql://127.0.0.1:3306/test?useSSL=false"]\n              }\n            ]\n          }\n        },\n        "writer": {\n          "name": "tugraphwriter",\n          "parameter": {\n            "host": "127.0.0.1",\n            "port": 7071,\n            "username": "admin",\n            "password": "73@TuGraph",\n            "graphName": "default",\n            "schema": [\n              {\n                "label": "movie",\n                "type": "VERTEX",\n                "properties": [\n                  { "name": "mid", "type": "STRING" },\n                  { "name": "name", "type": "STRING" },\n                  { "name": "year", "type": "STRING" },\n                  { "name": "rate", "type": "FLOAT", "optional": true }\n                ],\n                "primary": "mid"\n              }\n            ],\n            "files": [\n              {\n                "label": "movie",\n                "format": "JSON",\n                "columns": ["mid", "name", "year", "rate"]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Write simple sql"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "job": {\n    "setting": {\n      "speed": {\n        "channel": 1\n      }\n    },\n    "content": [\n      {\n        "reader": {\n          "name": "mysqlreader",\n          "parameter": {\n            "username": "root",\n            "password": "root",\n            "connection": [\n              {\n                "querySql": [\n                  "select mid, name, year, rate from test.movies where year > 2000;"\n                ],\n                "jdbcUrl": ["jdbc:mysql://127.0.0.1:3306/test?useSSL=false"]\n              }\n            ]\n          }\n        },\n        "writer": {\n          "name": "tugraphwriter",\n          "parameter": {\n            "host": "127.0.0.1",\n            "port": 7071,\n            "username": "admin",\n            "password": "73@TuGraph",\n            "graphName": "default",\n            "schema": [\n              {\n                "label": "movie",\n                "type": "VERTEX",\n                "properties": [\n                  { "name": "mid", "type": "STRING" },\n                  { "name": "name", "type": "STRING" },\n                  { "name": "year", "type": "STRING" },\n                  { "name": "rate", "type": "FLOAT", "optional": true }\n                ],\n                "primary": "mid"\n              }\n            ],\n            "files": [\n              {\n                "label": "movie",\n                "format": "JSON",\n                "columns": ["mid", "name", "year", "rate"]\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"./lgraph_server -c lgraph_standalone.json -d 'run'"})," Start TuGraph and run the following command\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-shell",children:"python3 datax/bin/datax.py  job_mysql_to_tugraph.json\n"})}),"\n",(0,a.jsx)(e.h2,{id:"4export-tugraph",children:"4.Export TuGraph"}),"\n",(0,a.jsx)(e.h3,{id:"41-configuration-example",children:"4.1. Configuration example"}),"\n",(0,a.jsx)(e.p,{children:"TuGraph supports exporting data using DataX. Use the following configuration to export data to text data"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "job": {\n    "setting": {\n      "speed": {\n        "channel": 1\n      }\n    },\n    "content": [\n      {\n        "reader": {\n          "name": "tugraphreader",\n          "parameter": {\n            "username": "admin",\n            "password": "73@TuGraph",\n            "graphName": "Movie_8C5C",\n            "queryCypher": "match (n:person) return n.id,n.name,n.born;",\n            "url": "bolt://100.83.30.35:27687"\n          }\n        },\n        "writer": {\n          "name": "txtfilewriter",\n          "parameter": {\n            "path": "./result",\n            "fileName": "luohw",\n            "writeMode": "truncate"\n          }\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"Using this configuration file, you can export all the id, name and born attributes of the person node in the TuGraph Movie_8C5C subgraph,\nexport them to the result directory under the current directory, and the file name is luohw+random suffix."}),"\n",(0,a.jsx)(e.h3,{id:"42-parameter-description",children:"4.2. Parameter Description"}),"\n",(0,a.jsx)(e.p,{children:"When using DataX to export TuGraph data, you need to set the reader to tugraphreader and configure the following 5 parameters:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"url"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Description: TuGraph's bolt server address ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Required: Yes ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Default value: None ",(0,a.jsx)(e.br,{})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"username"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Description: TuGraph's username ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Required: Yes ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Default value: None ",(0,a.jsx)(e.br,{})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"password"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Description: TuGraph's password ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Required: Yes ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Default value: None ",(0,a.jsx)(e.br,{})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"graphName"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Description: The selected TuGraph subgraph to be synchronized ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Required: Yes ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Default value: None ",(0,a.jsx)(e.br,{})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"queryCypher"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Description: Read data in TuGraph through cypher statements ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Required: No ",(0,a.jsx)(e.br,{})]}),"\n",(0,a.jsxs)(e.li,{children:["Default value: None ",(0,a.jsx)(e.br,{})]}),"\n"]}),"\n"]}),"\n"]})]})}function c(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(h,{...n})}):h(n)}},28453:(n,e,r)=>{r.d(e,{R:()=>s,x:()=>o});var a=r(96540);const t={},i=a.createContext(t);function s(n){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);