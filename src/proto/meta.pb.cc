// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

#include "meta.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace meta {
class VertexPropertyIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VertexPropertyIndex>
      _instance;
} _VertexPropertyIndex_default_instance_;
class VertexFullTextIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VertexFullTextIndex>
      _instance;
} _VertexFullTextIndex_default_instance_;
class VertexVectorIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VertexVectorIndex>
      _instance;
} _VertexVectorIndex_default_instance_;
class GraphDBMetaInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphDBMetaInfo>
      _instance;
} _GraphDBMetaInfo_default_instance_;
}  // namespace meta
namespace protobuf_meta_2eproto {
static void InitDefaultsVertexPropertyIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::meta::_VertexPropertyIndex_default_instance_;
    new (ptr) ::meta::VertexPropertyIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::meta::VertexPropertyIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VertexPropertyIndex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVertexPropertyIndex}, {}};

static void InitDefaultsVertexFullTextIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::meta::_VertexFullTextIndex_default_instance_;
    new (ptr) ::meta::VertexFullTextIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::meta::VertexFullTextIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VertexFullTextIndex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVertexFullTextIndex}, {}};

static void InitDefaultsVertexVectorIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::meta::_VertexVectorIndex_default_instance_;
    new (ptr) ::meta::VertexVectorIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::meta::VertexVectorIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VertexVectorIndex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVertexVectorIndex}, {}};

static void InitDefaultsGraphDBMetaInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::meta::_GraphDBMetaInfo_default_instance_;
    new (ptr) ::meta::GraphDBMetaInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::meta::GraphDBMetaInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GraphDBMetaInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGraphDBMetaInfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VertexPropertyIndex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VertexFullTextIndex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VertexVectorIndex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphDBMetaInfo.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, is_unique_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, label_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, property_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexPropertyIndex, cf_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexFullTextIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexFullTextIndex, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexFullTextIndex, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexFullTextIndex, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexFullTextIndex, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexFullTextIndex, label_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexFullTextIndex, property_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, label_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, property_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, sharding_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, distance_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, hnsw_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::VertexVectorIndex, hnsw_ef_construction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::GraphDBMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::GraphDBMetaInfo, graph_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::meta::GraphDBMetaInfo, graph_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::meta::VertexPropertyIndex)},
  { 12, -1, sizeof(::meta::VertexFullTextIndex)},
  { 23, -1, sizeof(::meta::VertexVectorIndex)},
  { 38, -1, sizeof(::meta::GraphDBMetaInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::meta::_VertexPropertyIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::meta::_VertexFullTextIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::meta::_VertexVectorIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::meta::_GraphDBMetaInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "meta.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nmeta.proto\022\004meta\"\217\001\n\023VertexPropertyInd"
      "ex\022\014\n\004name\030\001 \001(\t\022\021\n\tis_unique\030\002 \001(\010\022\r\n\005l"
      "abel\030\003 \001(\t\022\020\n\010label_id\030\004 \001(\r\022\020\n\010property"
      "\030\005 \001(\t\022\023\n\013property_id\030\006 \001(\r\022\017\n\007cf_name\030\007"
      " \001(\t\"~\n\023VertexFullTextIndex\022\014\n\004name\030\001 \001("
      "\t\022\014\n\004path\030\002 \001(\t\022\016\n\006labels\030\003 \003(\t\022\022\n\nprope"
      "rties\030\004 \003(\t\022\021\n\tlabel_ids\030\005 \003(\r\022\024\n\014proper"
      "ty_ids\030\006 \003(\r\"\330\001\n\021VertexVectorIndex\022\014\n\004na"
      "me\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\020\n\010label_id\030\003 \001("
      "\r\022\020\n\010property\030\004 \001(\t\022\023\n\013property_id\030\005 \001(\r"
      "\022\024\n\014sharding_num\030\006 \001(\r\022\022\n\ndimensions\030\007 \001"
      "(\r\022\025\n\rdistance_type\030\010 \001(\t\022\016\n\006hnsw_m\030\t \001("
      "\r\022\034\n\024hnsw_ef_construction\030\n \001(\r\"7\n\017Graph"
      "DBMetaInfo\022\022\n\ngraph_name\030\001 \001(\t\022\020\n\010graph_"
      "id\030\002 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 576);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "meta.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_meta_2eproto
namespace meta {

// ===================================================================

void VertexPropertyIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VertexPropertyIndex::kNameFieldNumber;
const int VertexPropertyIndex::kIsUniqueFieldNumber;
const int VertexPropertyIndex::kLabelFieldNumber;
const int VertexPropertyIndex::kLabelIdFieldNumber;
const int VertexPropertyIndex::kPropertyFieldNumber;
const int VertexPropertyIndex::kPropertyIdFieldNumber;
const int VertexPropertyIndex::kCfNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VertexPropertyIndex::VertexPropertyIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_meta_2eproto::scc_info_VertexPropertyIndex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:meta.VertexPropertyIndex)
}
VertexPropertyIndex::VertexPropertyIndex(const VertexPropertyIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property().size() > 0) {
    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
  cf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf_name().size() > 0) {
    cf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_name_);
  }
  ::memcpy(&is_unique_, &from.is_unique_,
    static_cast<size_t>(reinterpret_cast<char*>(&property_id_) -
    reinterpret_cast<char*>(&is_unique_)) + sizeof(property_id_));
  // @@protoc_insertion_point(copy_constructor:meta.VertexPropertyIndex)
}

void VertexPropertyIndex::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_unique_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&property_id_) -
      reinterpret_cast<char*>(&is_unique_)) + sizeof(property_id_));
}

VertexPropertyIndex::~VertexPropertyIndex() {
  // @@protoc_insertion_point(destructor:meta.VertexPropertyIndex)
  SharedDtor();
}

void VertexPropertyIndex::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VertexPropertyIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VertexPropertyIndex::descriptor() {
  ::protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VertexPropertyIndex& VertexPropertyIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_meta_2eproto::scc_info_VertexPropertyIndex.base);
  return *internal_default_instance();
}


void VertexPropertyIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:meta.VertexPropertyIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_unique_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&property_id_) -
      reinterpret_cast<char*>(&is_unique_)) + sizeof(property_id_));
  _internal_metadata_.Clear();
}

bool VertexPropertyIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:meta.VertexPropertyIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexPropertyIndex.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_unique = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unique_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexPropertyIndex.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 label_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &label_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string property = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->property().data(), static_cast<int>(this->property().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexPropertyIndex.property"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 property_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &property_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf_name().data(), static_cast<int>(this->cf_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexPropertyIndex.cf_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:meta.VertexPropertyIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:meta.VertexPropertyIndex)
  return false;
#undef DO_
}

void VertexPropertyIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:meta.VertexPropertyIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool is_unique = 2;
  if (this->is_unique() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_unique(), output);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->label(), output);
  }

  // uint32 label_id = 4;
  if (this->label_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->label_id(), output);
  }

  // string property = 5;
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property().data(), static_cast<int>(this->property().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.property");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->property(), output);
  }

  // uint32 property_id = 6;
  if (this->property_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->property_id(), output);
  }

  // string cf_name = 7;
  if (this->cf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf_name().data(), static_cast<int>(this->cf_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.cf_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cf_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:meta.VertexPropertyIndex)
}

::google::protobuf::uint8* VertexPropertyIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:meta.VertexPropertyIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool is_unique = 2;
  if (this->is_unique() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_unique(), target);
  }

  // string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->label(), target);
  }

  // uint32 label_id = 4;
  if (this->label_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->label_id(), target);
  }

  // string property = 5;
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property().data(), static_cast<int>(this->property().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.property");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->property(), target);
  }

  // uint32 property_id = 6;
  if (this->property_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->property_id(), target);
  }

  // string cf_name = 7;
  if (this->cf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf_name().data(), static_cast<int>(this->cf_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexPropertyIndex.cf_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cf_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meta.VertexPropertyIndex)
  return target;
}

size_t VertexPropertyIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:meta.VertexPropertyIndex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string label = 3;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string property = 5;
  if (this->property().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->property());
  }

  // string cf_name = 7;
  if (this->cf_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf_name());
  }

  // bool is_unique = 2;
  if (this->is_unique() != 0) {
    total_size += 1 + 1;
  }

  // uint32 label_id = 4;
  if (this->label_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->label_id());
  }

  // uint32 property_id = 6;
  if (this->property_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->property_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VertexPropertyIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:meta.VertexPropertyIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const VertexPropertyIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VertexPropertyIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:meta.VertexPropertyIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:meta.VertexPropertyIndex)
    MergeFrom(*source);
  }
}

void VertexPropertyIndex::MergeFrom(const VertexPropertyIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:meta.VertexPropertyIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.property().size() > 0) {

    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
  if (from.cf_name().size() > 0) {

    cf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_name_);
  }
  if (from.is_unique() != 0) {
    set_is_unique(from.is_unique());
  }
  if (from.label_id() != 0) {
    set_label_id(from.label_id());
  }
  if (from.property_id() != 0) {
    set_property_id(from.property_id());
  }
}

void VertexPropertyIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:meta.VertexPropertyIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VertexPropertyIndex::CopyFrom(const VertexPropertyIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meta.VertexPropertyIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VertexPropertyIndex::IsInitialized() const {
  return true;
}

void VertexPropertyIndex::Swap(VertexPropertyIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VertexPropertyIndex::InternalSwap(VertexPropertyIndex* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  property_.Swap(&other->property_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cf_name_.Swap(&other->cf_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_unique_, other->is_unique_);
  swap(label_id_, other->label_id_);
  swap(property_id_, other->property_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VertexPropertyIndex::GetMetadata() const {
  protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VertexFullTextIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VertexFullTextIndex::kNameFieldNumber;
const int VertexFullTextIndex::kPathFieldNumber;
const int VertexFullTextIndex::kLabelsFieldNumber;
const int VertexFullTextIndex::kPropertiesFieldNumber;
const int VertexFullTextIndex::kLabelIdsFieldNumber;
const int VertexFullTextIndex::kPropertyIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VertexFullTextIndex::VertexFullTextIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_meta_2eproto::scc_info_VertexFullTextIndex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:meta.VertexFullTextIndex)
}
VertexFullTextIndex::VertexFullTextIndex(const VertexFullTextIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      labels_(from.labels_),
      properties_(from.properties_),
      label_ids_(from.label_ids_),
      property_ids_(from.property_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:meta.VertexFullTextIndex)
}

void VertexFullTextIndex::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VertexFullTextIndex::~VertexFullTextIndex() {
  // @@protoc_insertion_point(destructor:meta.VertexFullTextIndex)
  SharedDtor();
}

void VertexFullTextIndex::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VertexFullTextIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VertexFullTextIndex::descriptor() {
  ::protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VertexFullTextIndex& VertexFullTextIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_meta_2eproto::scc_info_VertexFullTextIndex.base);
  return *internal_default_instance();
}


void VertexFullTextIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:meta.VertexFullTextIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  properties_.Clear();
  label_ids_.Clear();
  property_ids_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VertexFullTextIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:meta.VertexFullTextIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexFullTextIndex.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexFullTextIndex.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string labels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labels()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->labels(this->labels_size() - 1).data(),
            static_cast<int>(this->labels(this->labels_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexFullTextIndex.labels"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string properties = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_properties()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->properties(this->properties_size() - 1).data(),
            static_cast<int>(this->properties(this->properties_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexFullTextIndex.properties"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 label_ids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_label_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_label_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 property_ids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_property_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_property_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:meta.VertexFullTextIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:meta.VertexFullTextIndex)
  return false;
#undef DO_
}

void VertexFullTextIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:meta.VertexFullTextIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // repeated string labels = 3;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.labels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->labels(i), output);
  }

  // repeated string properties = 4;
  for (int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->properties(i).data(), static_cast<int>(this->properties(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.properties");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->properties(i), output);
  }

  // repeated uint32 label_ids = 5;
  if (this->label_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _label_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->label_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->label_ids(i), output);
  }

  // repeated uint32 property_ids = 6;
  if (this->property_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _property_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->property_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->property_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:meta.VertexFullTextIndex)
}

::google::protobuf::uint8* VertexFullTextIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:meta.VertexFullTextIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // repeated string labels = 3;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.labels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->labels(i), target);
  }

  // repeated string properties = 4;
  for (int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->properties(i).data(), static_cast<int>(this->properties(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexFullTextIndex.properties");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->properties(i), target);
  }

  // repeated uint32 label_ids = 5;
  if (this->label_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _label_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->label_ids_, target);
  }

  // repeated uint32 property_ids = 6;
  if (this->property_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _property_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->property_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meta.VertexFullTextIndex)
  return target;
}

size_t VertexFullTextIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:meta.VertexFullTextIndex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string labels = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labels(i));
  }

  // repeated string properties = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  for (int i = 0, n = this->properties_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->properties(i));
  }

  // repeated uint32 label_ids = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->label_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _label_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 property_ids = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->property_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _property_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VertexFullTextIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:meta.VertexFullTextIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const VertexFullTextIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VertexFullTextIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:meta.VertexFullTextIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:meta.VertexFullTextIndex)
    MergeFrom(*source);
  }
}

void VertexFullTextIndex::MergeFrom(const VertexFullTextIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:meta.VertexFullTextIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  properties_.MergeFrom(from.properties_);
  label_ids_.MergeFrom(from.label_ids_);
  property_ids_.MergeFrom(from.property_ids_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void VertexFullTextIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:meta.VertexFullTextIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VertexFullTextIndex::CopyFrom(const VertexFullTextIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meta.VertexFullTextIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VertexFullTextIndex::IsInitialized() const {
  return true;
}

void VertexFullTextIndex::Swap(VertexFullTextIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VertexFullTextIndex::InternalSwap(VertexFullTextIndex* other) {
  using std::swap;
  labels_.InternalSwap(CastToBase(&other->labels_));
  properties_.InternalSwap(CastToBase(&other->properties_));
  label_ids_.InternalSwap(&other->label_ids_);
  property_ids_.InternalSwap(&other->property_ids_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VertexFullTextIndex::GetMetadata() const {
  protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VertexVectorIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VertexVectorIndex::kNameFieldNumber;
const int VertexVectorIndex::kLabelFieldNumber;
const int VertexVectorIndex::kLabelIdFieldNumber;
const int VertexVectorIndex::kPropertyFieldNumber;
const int VertexVectorIndex::kPropertyIdFieldNumber;
const int VertexVectorIndex::kShardingNumFieldNumber;
const int VertexVectorIndex::kDimensionsFieldNumber;
const int VertexVectorIndex::kDistanceTypeFieldNumber;
const int VertexVectorIndex::kHnswMFieldNumber;
const int VertexVectorIndex::kHnswEfConstructionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VertexVectorIndex::VertexVectorIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_meta_2eproto::scc_info_VertexVectorIndex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:meta.VertexVectorIndex)
}
VertexVectorIndex::VertexVectorIndex(const VertexVectorIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property().size() > 0) {
    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
  distance_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.distance_type().size() > 0) {
    distance_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distance_type_);
  }
  ::memcpy(&label_id_, &from.label_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&hnsw_ef_construction_) -
    reinterpret_cast<char*>(&label_id_)) + sizeof(hnsw_ef_construction_));
  // @@protoc_insertion_point(copy_constructor:meta.VertexVectorIndex)
}

void VertexVectorIndex::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&label_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hnsw_ef_construction_) -
      reinterpret_cast<char*>(&label_id_)) + sizeof(hnsw_ef_construction_));
}

VertexVectorIndex::~VertexVectorIndex() {
  // @@protoc_insertion_point(destructor:meta.VertexVectorIndex)
  SharedDtor();
}

void VertexVectorIndex::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VertexVectorIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VertexVectorIndex::descriptor() {
  ::protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VertexVectorIndex& VertexVectorIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_meta_2eproto::scc_info_VertexVectorIndex.base);
  return *internal_default_instance();
}


void VertexVectorIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:meta.VertexVectorIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&label_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hnsw_ef_construction_) -
      reinterpret_cast<char*>(&label_id_)) + sizeof(hnsw_ef_construction_));
  _internal_metadata_.Clear();
}

bool VertexVectorIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:meta.VertexVectorIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexVectorIndex.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexVectorIndex.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 label_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &label_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string property = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->property().data(), static_cast<int>(this->property().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexVectorIndex.property"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 property_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &property_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sharding_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sharding_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dimensions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dimensions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string distance_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_distance_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->distance_type().data(), static_cast<int>(this->distance_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.VertexVectorIndex.distance_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hnsw_m = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hnsw_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hnsw_ef_construction = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hnsw_ef_construction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:meta.VertexVectorIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:meta.VertexVectorIndex)
  return false;
#undef DO_
}

void VertexVectorIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:meta.VertexVectorIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // uint32 label_id = 3;
  if (this->label_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->label_id(), output);
  }

  // string property = 4;
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property().data(), static_cast<int>(this->property().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.property");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->property(), output);
  }

  // uint32 property_id = 5;
  if (this->property_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->property_id(), output);
  }

  // uint32 sharding_num = 6;
  if (this->sharding_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sharding_num(), output);
  }

  // uint32 dimensions = 7;
  if (this->dimensions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->dimensions(), output);
  }

  // string distance_type = 8;
  if (this->distance_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->distance_type().data(), static_cast<int>(this->distance_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.distance_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->distance_type(), output);
  }

  // uint32 hnsw_m = 9;
  if (this->hnsw_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hnsw_m(), output);
  }

  // uint32 hnsw_ef_construction = 10;
  if (this->hnsw_ef_construction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->hnsw_ef_construction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:meta.VertexVectorIndex)
}

::google::protobuf::uint8* VertexVectorIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:meta.VertexVectorIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // uint32 label_id = 3;
  if (this->label_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->label_id(), target);
  }

  // string property = 4;
  if (this->property().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->property().data(), static_cast<int>(this->property().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.property");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->property(), target);
  }

  // uint32 property_id = 5;
  if (this->property_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->property_id(), target);
  }

  // uint32 sharding_num = 6;
  if (this->sharding_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sharding_num(), target);
  }

  // uint32 dimensions = 7;
  if (this->dimensions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->dimensions(), target);
  }

  // string distance_type = 8;
  if (this->distance_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->distance_type().data(), static_cast<int>(this->distance_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.VertexVectorIndex.distance_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->distance_type(), target);
  }

  // uint32 hnsw_m = 9;
  if (this->hnsw_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hnsw_m(), target);
  }

  // uint32 hnsw_ef_construction = 10;
  if (this->hnsw_ef_construction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->hnsw_ef_construction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meta.VertexVectorIndex)
  return target;
}

size_t VertexVectorIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:meta.VertexVectorIndex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string property = 4;
  if (this->property().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->property());
  }

  // string distance_type = 8;
  if (this->distance_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->distance_type());
  }

  // uint32 label_id = 3;
  if (this->label_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->label_id());
  }

  // uint32 property_id = 5;
  if (this->property_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->property_id());
  }

  // uint32 sharding_num = 6;
  if (this->sharding_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sharding_num());
  }

  // uint32 dimensions = 7;
  if (this->dimensions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dimensions());
  }

  // uint32 hnsw_m = 9;
  if (this->hnsw_m() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hnsw_m());
  }

  // uint32 hnsw_ef_construction = 10;
  if (this->hnsw_ef_construction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hnsw_ef_construction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VertexVectorIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:meta.VertexVectorIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const VertexVectorIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VertexVectorIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:meta.VertexVectorIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:meta.VertexVectorIndex)
    MergeFrom(*source);
  }
}

void VertexVectorIndex::MergeFrom(const VertexVectorIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:meta.VertexVectorIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.property().size() > 0) {

    property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
  }
  if (from.distance_type().size() > 0) {

    distance_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distance_type_);
  }
  if (from.label_id() != 0) {
    set_label_id(from.label_id());
  }
  if (from.property_id() != 0) {
    set_property_id(from.property_id());
  }
  if (from.sharding_num() != 0) {
    set_sharding_num(from.sharding_num());
  }
  if (from.dimensions() != 0) {
    set_dimensions(from.dimensions());
  }
  if (from.hnsw_m() != 0) {
    set_hnsw_m(from.hnsw_m());
  }
  if (from.hnsw_ef_construction() != 0) {
    set_hnsw_ef_construction(from.hnsw_ef_construction());
  }
}

void VertexVectorIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:meta.VertexVectorIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VertexVectorIndex::CopyFrom(const VertexVectorIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meta.VertexVectorIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VertexVectorIndex::IsInitialized() const {
  return true;
}

void VertexVectorIndex::Swap(VertexVectorIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VertexVectorIndex::InternalSwap(VertexVectorIndex* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  property_.Swap(&other->property_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  distance_type_.Swap(&other->distance_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(label_id_, other->label_id_);
  swap(property_id_, other->property_id_);
  swap(sharding_num_, other->sharding_num_);
  swap(dimensions_, other->dimensions_);
  swap(hnsw_m_, other->hnsw_m_);
  swap(hnsw_ef_construction_, other->hnsw_ef_construction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VertexVectorIndex::GetMetadata() const {
  protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphDBMetaInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphDBMetaInfo::kGraphNameFieldNumber;
const int GraphDBMetaInfo::kGraphIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphDBMetaInfo::GraphDBMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_meta_2eproto::scc_info_GraphDBMetaInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:meta.GraphDBMetaInfo)
}
GraphDBMetaInfo::GraphDBMetaInfo(const GraphDBMetaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  graph_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.graph_name().size() > 0) {
    graph_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_name_);
  }
  graph_id_ = from.graph_id_;
  // @@protoc_insertion_point(copy_constructor:meta.GraphDBMetaInfo)
}

void GraphDBMetaInfo::SharedCtor() {
  graph_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_id_ = 0u;
}

GraphDBMetaInfo::~GraphDBMetaInfo() {
  // @@protoc_insertion_point(destructor:meta.GraphDBMetaInfo)
  SharedDtor();
}

void GraphDBMetaInfo::SharedDtor() {
  graph_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GraphDBMetaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphDBMetaInfo::descriptor() {
  ::protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphDBMetaInfo& GraphDBMetaInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_meta_2eproto::scc_info_GraphDBMetaInfo.base);
  return *internal_default_instance();
}


void GraphDBMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:meta.GraphDBMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  graph_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GraphDBMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:meta.GraphDBMetaInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string graph_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graph_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graph_name().data(), static_cast<int>(this->graph_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "meta.GraphDBMetaInfo.graph_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 graph_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &graph_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:meta.GraphDBMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:meta.GraphDBMetaInfo)
  return false;
#undef DO_
}

void GraphDBMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:meta.GraphDBMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_name = 1;
  if (this->graph_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_name().data(), static_cast<int>(this->graph_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.GraphDBMetaInfo.graph_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->graph_name(), output);
  }

  // uint32 graph_id = 2;
  if (this->graph_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->graph_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:meta.GraphDBMetaInfo)
}

::google::protobuf::uint8* GraphDBMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:meta.GraphDBMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_name = 1;
  if (this->graph_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graph_name().data(), static_cast<int>(this->graph_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "meta.GraphDBMetaInfo.graph_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->graph_name(), target);
  }

  // uint32 graph_id = 2;
  if (this->graph_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->graph_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:meta.GraphDBMetaInfo)
  return target;
}

size_t GraphDBMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:meta.GraphDBMetaInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string graph_name = 1;
  if (this->graph_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graph_name());
  }

  // uint32 graph_id = 2;
  if (this->graph_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->graph_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphDBMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:meta.GraphDBMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphDBMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphDBMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:meta.GraphDBMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:meta.GraphDBMetaInfo)
    MergeFrom(*source);
  }
}

void GraphDBMetaInfo::MergeFrom(const GraphDBMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:meta.GraphDBMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.graph_name().size() > 0) {

    graph_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graph_name_);
  }
  if (from.graph_id() != 0) {
    set_graph_id(from.graph_id());
  }
}

void GraphDBMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:meta.GraphDBMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphDBMetaInfo::CopyFrom(const GraphDBMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:meta.GraphDBMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphDBMetaInfo::IsInitialized() const {
  return true;
}

void GraphDBMetaInfo::Swap(GraphDBMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphDBMetaInfo::InternalSwap(GraphDBMetaInfo* other) {
  using std::swap;
  graph_name_.Swap(&other->graph_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(graph_id_, other->graph_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphDBMetaInfo::GetMetadata() const {
  protobuf_meta_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_meta_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace meta
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::meta::VertexPropertyIndex* Arena::CreateMaybeMessage< ::meta::VertexPropertyIndex >(Arena* arena) {
  return Arena::CreateInternal< ::meta::VertexPropertyIndex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::meta::VertexFullTextIndex* Arena::CreateMaybeMessage< ::meta::VertexFullTextIndex >(Arena* arena) {
  return Arena::CreateInternal< ::meta::VertexFullTextIndex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::meta::VertexVectorIndex* Arena::CreateMaybeMessage< ::meta::VertexVectorIndex >(Arena* arena) {
  return Arena::CreateInternal< ::meta::VertexVectorIndex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::meta::GraphDBMetaInfo* Arena::CreateMaybeMessage< ::meta::GraphDBMetaInfo >(Arena* arena) {
  return Arena::CreateInternal< ::meta::GraphDBMetaInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
