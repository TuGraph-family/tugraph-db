
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string UNION DISTINCT MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string UNION DISTINCT MATCH (m:node1 {@id:2}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.p_long,n.p_double,n.p_string UNION DISTINCT MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.p_long,n.p_double,n.p_string UNION DISTINCT MATCH (m:node1 {@id:2}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string UNION ALL MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.@id UNION MATCH (m:node1 {@id:3}) RETURN m.@id UNION DISTINCT MATCH (k:node1 {@id:4}) RETURN k.@id;
MATCH (n:node1 {@id:1}) RETURN n.@id UNION MATCH (m:node1 {@id:2}) RETURN m.@id UNION DISTINCT MATCH (k:node1 {@id:3}) RETURN k.@id UNION MATCH (q:node1 {@id:4}) RETURN q.@id;
MATCH (n:node1 {@id:1}) RETURN n.@id UNION MATCH (m:node1 {@id:2}) RETURN m.@id UNION DISTINCT MATCH (k:node1 {@id:3}) RETURN k.@id UNION MATCH (q:node1 {@id:4}) RETURN q.@id UNION ALL MATCH (d:node1 {@id:1}) RETURN d.@id;
MATCH (n:node1 {@id:1}) RETURN n.p_long, n.p_double, n.p_string UNION ALL MATCH (m:node1 {@id:1}) RETURN m.p_long, m.p_double, m.p_string UNION ALL MATCH (k:node1 {@id:1}) RETURN k.p_long,k.p_double,k.p_string UNION ALL MATCH (d:node1 {@id:1}) RETURN d.p_long,d.p_double,d.p_string;
MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id UNION MATCH (n1:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001))-[e:edge_n1_n2]->(n2:node2{@id:100}) RETURN e.@src_id, e.p_long, e.p_double, e.p_string ORDER BY e.@src_id;
MATCH (n1:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001))-[e:edge_n1_n2]->(n2:node2{@id:100}) RETURN e.@src_id, e.p_long, e.p_double, e.p_string ORDER BY e.@src_id UNION MATCH (n:node1 where @id in (10001,10002,10003))  RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id;
MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id UNION MATCH (m:node1 where @id in (20001,20002,20003)) RETURN m.@id, m.p_long, m.p_double, m.p_string ORDER BY m.@id UNION MATCH (k:node1 where @id in (30001,30002,30003)) RETURN k.@id, k.p_long, k.p_double, k.p_string ORDER BY k.@id UNION MATCH (l:node1{@id:40001}) RETURN l.@id, l.p_long, l.p_double, l.p_string;
MATCH (n:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id UNION MATCH (n1:node1 where @id in (10001,10002,10003)) RETURN n1.@id, n1.p_long, n1.p_double, n1.p_string;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id UNION MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.@src_id, e22.p_long, e22.p_string ORDER BY e22.@src_id;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id UNION MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.p_long, e22.p_string, e22.@src_id ORDER BY e22.p_long;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id UNION ALL MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.p_string, e22.@src_id, e22.p_long ORDER BY e22.p_string UNION MATCH (n2:node1 {@id:1})-[e31:edge_n1_n2]->(m2:node2)-[e32:edge_n2_n3]->(k2:node3) RETURN m2.p_long, m2.p_string, m2.@id ORDER BY m2.p_long;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id UNION MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id UNION ALL MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id UNION DISTINCT MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n:node1 {@id:1}) RETURN n.p_long as A, n.p_double as B, n.p_string as C UNION DISTINCT MATCH (n1:node1 {@id:1}) RETURN n1.p_long as D, n1.p_double as E, n1.p_string as F;
RETURN 1,2 UNION ALL MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.p_long,n.p_string;
RETURN 1,2 UNION ALL MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.p_long,n.p_string UNION ALL RETURN true, false;

MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string EXCEPT DISTINCT MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string EXCEPT DISTINCT MATCH (m:node1 {@id:2}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.p_long,n.p_double,n.p_string EXCEPT DISTINCT MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.p_long,n.p_double,n.p_string EXCEPT DISTINCT MATCH (m:node1 {@id:2}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string EXCEPT ALL MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.@id EXCEPT MATCH (m:node1 {@id:3}) RETURN m.@id EXCEPT DISTINCT MATCH (k:node1 {@id:4}) RETURN k.@id;
MATCH (n:node1 {@id:1}) RETURN n.@id EXCEPT MATCH (m:node1 {@id:2}) RETURN m.@id EXCEPT DISTINCT MATCH (k:node1 {@id:3}) RETURN k.@id EXCEPT MATCH (q:node1 {@id:4}) RETURN q.@id;
MATCH (n:node1 {@id:1}) RETURN n.@id EXCEPT MATCH (m:node1 {@id:2}) RETURN m.@id EXCEPT DISTINCT MATCH (k:node1 {@id:3}) RETURN k.@id EXCEPT MATCH (q:node1 {@id:4}) RETURN q.@id EXCEPT ALL MATCH (d:node1 {@id:1}) RETURN d.@id;
MATCH (n:node1 {@id:1}) RETURN n.p_long, n.p_double, n.p_string EXCEPT ALL MATCH (m:node1 {@id:1}) RETURN m.p_long, m.p_double, m.p_string EXCEPT ALL MATCH (k:node1 {@id:1}) RETURN k.p_long,k.p_double,k.p_string EXCEPT ALL MATCH (d:node1 {@id:1}) RETURN d.p_long,d.p_double,d.p_string;
MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id EXCEPT MATCH (n1:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001))-[e:edge_n1_n2]->(n2:node2{@id:100}) RETURN e.@src_id, e.p_long, e.p_double, e.p_string ORDER BY e.@src_id;
MATCH (n1:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001))-[e:edge_n1_n2]->(n2:node2{@id:100}) RETURN e.@src_id, e.p_long, e.p_double, e.p_string ORDER BY e.@src_id EXCEPT MATCH (n:node1 where @id in (10001,10002,10003))  RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id;
MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id EXCEPT MATCH (m:node1 where @id in (20001,20002,20003)) RETURN m.@id, m.p_long, m.p_double, m.p_string ORDER BY m.@id EXCEPT MATCH (k:node1 where @id in (30001,30002,30003)) RETURN k.@id, k.p_long, k.p_double, k.p_string ORDER BY k.@id EXCEPT MATCH (l:node1{@id:40001}) RETURN l.@id, l.p_long, l.p_double, l.p_string;
MATCH (n:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id EXCEPT MATCH (n1:node1 where @id in (10001,10002,10003)) RETURN n1.@id, n1.p_long, n1.p_double, n1.p_string;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id EXCEPT MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.@src_id, e22.p_long, e22.p_string ORDER BY e22.@src_id;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id EXCEPT MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.p_long, e22.p_string, e22.@src_id ORDER BY e22.p_long;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id EXCEPT ALL MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.p_string, e22.@src_id, e22.p_long ORDER BY e22.p_string EXCEPT MATCH (n2:node1 {@id:1})-[e31:edge_n1_n2]->(m2:node2)-[e32:edge_n2_n3]->(k2:node3) RETURN m2.p_long, m2.p_string, m2.@id ORDER BY m2.p_long;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id EXCEPT MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id EXCEPT ALL MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id EXCEPT DISTINCT MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n:node1 {@id:1}) RETURN n.p_long as A, n.p_double as B, n.p_string as C EXCEPT DISTINCT MATCH (n1:node1 {@id:1}) RETURN n1.p_long as D, n1.p_double as E, n1.p_string as F;
RETURN 1,2 EXCEPT ALL MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.p_long,n.p_string;
RETURN 1,2 EXCEPT ALL MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.p_long,n.p_string EXCEPT ALL RETURN true, false;

MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string INTERSECT DISTINCT MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string INTERSECT DISTINCT MATCH (m:node1 {@id:2}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.p_long,n.p_double,n.p_string INTERSECT DISTINCT MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.p_long,n.p_double,n.p_string INTERSECT DISTINCT MATCH (m:node1 {@id:2}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string INTERSECT ALL MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string;
MATCH (n:node1 {@id:2}) RETURN n.@id INTERSECT MATCH (m:node1 {@id:3}) RETURN m.@id INTERSECT DISTINCT MATCH (k:node1 {@id:4}) RETURN k.@id;
MATCH (n:node1 {@id:1}) RETURN n.@id INTERSECT MATCH (m:node1 {@id:2}) RETURN m.@id INTERSECT DISTINCT MATCH (k:node1 {@id:3}) RETURN k.@id INTERSECT MATCH (q:node1 {@id:4}) RETURN q.@id;
MATCH (n:node1 {@id:1}) RETURN n.@id INTERSECT MATCH (m:node1 {@id:2}) RETURN m.@id INTERSECT DISTINCT MATCH (k:node1 {@id:3}) RETURN k.@id INTERSECT MATCH (q:node1 {@id:4}) RETURN q.@id INTERSECT ALL MATCH (d:node1 {@id:1}) RETURN d.@id;
MATCH (n:node1 {@id:1}) RETURN n.p_long, n.p_double, n.p_string INTERSECT ALL MATCH (m:node1 {@id:1}) RETURN m.p_long, m.p_double, m.p_string INTERSECT ALL MATCH (k:node1 {@id:1}) RETURN k.p_long,k.p_double,k.p_string INTERSECT ALL MATCH (d:node1 {@id:1}) RETURN d.p_long,d.p_double,d.p_string;
MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id INTERSECT MATCH (n1:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001))-[e:edge_n1_n2]->(n2:node2{@id:100}) RETURN e.@src_id, e.p_long, e.p_double, e.p_string ORDER BY e.@src_id;
MATCH (n1:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001))-[e:edge_n1_n2]->(n2:node2{@id:100}) RETURN e.@src_id, e.p_long, e.p_double, e.p_string ORDER BY e.@src_id INTERSECT MATCH (n:node1 where @id in (10001,10002,10003))  RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id;
MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id INTERSECT MATCH (m:node1 where @id in (20001,20002,20003)) RETURN m.@id, m.p_long, m.p_double, m.p_string ORDER BY m.@id INTERSECT MATCH (k:node1 where @id in (30001,30002,30003)) RETURN k.@id, k.p_long, k.p_double, k.p_string ORDER BY k.@id INTERSECT MATCH (l:node1{@id:40001}) RETURN l.@id, l.p_long, l.p_double, l.p_string;
MATCH (n:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id INTERSECT MATCH (n1:node1 where @id in (10001,10002,10003)) RETURN n1.@id, n1.p_long, n1.p_double, n1.p_string;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id INTERSECT MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.@src_id, e22.p_long, e22.p_string ORDER BY e22.@src_id;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id INTERSECT MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.p_long, e22.p_string, e22.@src_id ORDER BY e22.p_long;
MATCH (n:node1 {@id:1})-[e11:edge_n1_n2]->(m:node2)-[e12:edge_n2_n3]->(k:node3) RETURN k.@id, k.p_long, k.p_string ORDER BY k.@id INTERSECT ALL MATCH (n1:node1 {@id:1})-[e21:edge_n1_n2]->(m1:node2)-[e22:edge_n2_n3]->(k1:node3) RETURN e22.p_string, e22.@src_id, e22.p_long ORDER BY e22.p_string INTERSECT MATCH (n2:node1 {@id:1})-[e31:edge_n1_n2]->(m2:node2)-[e32:edge_n2_n3]->(k2:node3) RETURN m2.p_long, m2.p_string, m2.@id ORDER BY m2.p_long;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id INTERSECT MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id INTERSECT ALL MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n1:node1 where @id in (10001,10002,10003))-[e11:edge_n1_n2]->(n2:node2{@id:100}) RETURN e11.@dst_id ORDER BY e11.@src_id INTERSECT DISTINCT MATCH (n11:node1 where @id in (20001,20002,20003))-[e21:edge_n1_n2]->(n12:node2{@id:100}) RETURN e21.@dst_id;
MATCH (n:node1 {@id:1}) RETURN n.p_long as A, n.p_double as B, n.p_string as C INTERSECT DISTINCT MATCH (n1:node1 {@id:1}) RETURN n1.p_long as D, n1.p_double as E, n1.p_string as F;
RETURN 1,2 INTERSECT ALL MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.p_long,n.p_string;
RETURN 1,2 INTERSECT ALL MATCH (n:node1 where @id in (10001,10002,10003)) RETURN n.p_long,n.p_string INTERSECT ALL RETURN true, false;

MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string UNION ALL MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string INTERSECT MATCH (k:node1 {@id:1}) RETURN k.p_long,k.p_double,k.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string UNION ALL MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string INTERSECT MATCH (k:node1 {@id:1}) RETURN k.p_long,k.p_double,k.p_string EXCEPT MATCH (l:node1 {@id:4}) RETURN l.p_long,l.p_double,l.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string UNION ALL MATCH (m:node1 {@id:1}) RETURN m.p_long,m.p_double,m.p_string INTERSECT MATCH (k:node1 {@id:1}) RETURN k.p_long,k.p_double,k.p_string EXCEPT MATCH (l:node1 {@id:1}) RETURN l.p_long,l.p_double,l.p_string;
MATCH (n:node1 where @id in (10001,10002,10003))   RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id UNION ALL MATCH (m:node1 where @id in (20001,20002,20003))  RETURN m.@id, m.p_long, m.p_double, m.p_string ORDER BY m.@id UNION ALL MATCH (k:node1 where @id in (30001,30002,30003)) RETURN k.@id, k.p_long, k.p_double, k.p_string ORDER BY k.@id UNION ALL MATCH (l:node1{@id:40001})   RETURN l.@id, l.p_long, l.p_double, l.p_string EXCEPT MATCH (d:node1 where @id in (10001,10002,10003))   RETURN d.@id, d.p_long, d.p_double, d.p_string EXCEPT MATCH (c:node1 where @id in (20001,20002,20003)) RETURN c.@id, c.p_long, c.p_double, c.p_string EXCEPT MATCH (x:node1 where @id in (30001,30002,30003)) RETURN x.@id, x.p_long, x.p_double, x.p_string EXCEPT MATCH (y:node1{@id:40001}) RETURN y.@id, y.p_long, y.p_double, y.p_string;
MATCH (n:node1 where @id in (10001,10002,10003))   RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id UNION ALL MATCH (m:node1 where @id in (20001,20002,20003))  RETURN m.@id, m.p_long, m.p_double, m.p_string ORDER BY m.@id UNION ALL MATCH (k:node1 where @id in (30001,30002,30003)) RETURN k.@id, k.p_long, k.p_double, k.p_string ORDER BY k.@id UNION ALL MATCH (l:node1{@id:40001})   RETURN l.@id, l.p_long, l.p_double, l.p_string EXCEPT MATCH (d:node1 where @id in (10001,20001,30001,40001)) RETURN d.@id, d.p_long, d.p_double, d.p_string;
MATCH (n:node1 where @id in (10001,10002,10003,20001,20002,20003,30001,30002,30003,40001)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id INTERSECT MATCH (m:node1 where @id in (20001,20002,20003,30001,30002,30003,40001))  RETURN m.@id, m.p_long, m.p_double, m.p_string INTERSECT MATCH (k:node1 where @id in (30001,30002,30003,40001))  RETURN k.@id, k.p_long, k.p_double, k.p_string INTERSECT MATCH (l:node1 where @id in (30003,40001))   RETURN l.@id, l.p_long, l.p_double, l.p_string;
MATCH (n:node1 where @id in (10001,10002,10003,20001,20002,20003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id UNION ALL MATCH (m:node1 where @id in (20001,20002,20003,30001,30002,30003)) RETURN m.@id, m.p_long, m.p_double, m.p_string ORDER BY m.@id UNION ALL MATCH (k:node1 where @id in (30001,30002,30003,40001))  RETURN k.@id, k.p_long, k.p_double, k.p_string ORDER BY k.@id INTERSECT MATCH (l:node1 where @id in (10002,20002,30002)) RETURN l.@id, l.p_long, l.p_double, l.p_string EXCEPT MATCH (d:node1 where @id in (10002,30002)) RETURN d.@id, d.p_long, d.p_double, d.p_string;
MATCH (n:node1 where @id in (10001,10002,10003,20001,20002,20003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id INTERSECT MATCH (m:node1 where @id in (20001,20002,20003,30001,30002,30003)) RETURN m.@id, m.p_long, m.p_double, m.p_string EXCEPT MATCH (k:node1 where @id in (20001,20003))  RETURN k.@id, k.p_long, k.p_double, k.p_string;
MATCH (n:node1 where @id in (20001,20002,20003,30001,30002,30003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id INTERSECT MATCH (m:node1 where @id in (30001,30002,30003,40001)) RETURN m.@id, m.p_long, m.p_double, m.p_string EXCEPT MATCH (k:node1 where @id in (20001,20003))  RETURN k.@id, k.p_long, k.p_double, k.p_string;
MATCH (n:node1 where @id in (20001,20002,20003,30001,30002,30003)) RETURN n.@id, n.p_long, n.p_double, n.p_string ORDER BY n.@id INTERSECT MATCH (m:node1 where @id in (30001,30002,30003,40001)) RETURN m.@id, m.p_long, m.p_double, m.p_string EXCEPT MATCH (k:node1 where @id in (30001,30003))  RETURN k.@id, k.p_long, k.p_double, k.p_string;
MATCH (n where @id in [10001])-[r]->(m) RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id INTERSECT MATCH (n where @id in [10001])-[r]->(m) RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id;
MATCH (n where @id in [10001])-[r]->(m) RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id INTERSECT MATCH (n where @id in [10002])-[r]->(m) RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id;
MATCH (n:node1 {@id:2}) RETURN n.@id INTERSECT MATCH (n:node1 {@id:3}) RETURN n.@id INTERSECT DISTINCT MATCH (n:node1 {@id:4}) RETURN n.@id;
MATCH (n:node1 {@id:1}) RETURN n.p_long, n.p_double, n.p_string INTERSECT MATCH (n:node1 {@id:1}) RETURN n.p_long, n.p_double, n.p_string INTERSECT MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string INTERSECT MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string EXCEPT DISTINCT MATCH (n:node1 {@id:2}) RETURN n.p_long,n.p_double,n.p_string;
MATCH (n where @id = 10001) RETURN n.p_long UNION MATCH (n where @id = 10001) RETURN n.p_long;
MATCH (n where @id = 10001) RETURN n.p_long UNION MATCH (n where @id = 10002) RETURN n.p_string;
MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string UNION ALL MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string INTERSECT MATCH (n:node1 {@id:1}) RETURN n.p_long,n.p_double,n.p_string;
MATCH (n where @id = 10001) RETURN n UNION MATCH (n where @id = 10001) RETURN n;
MATCH (n where @id = 10001) RETURN n UNION ALL MATCH (n where @id = 10001) RETURN n;
MATCH (n where @id = 10001) RETURN n, n.p_long UNION MATCH (n where @id = 10001) RETURN n, n.p_long;
MATCH (n where @id = 10001) RETURN n, n.p_long UNION ALL MATCH (n where @id = 10001) RETURN n, n.p_long;