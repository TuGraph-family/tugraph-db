RETURN 1 & 1;
+-------+
| 1 & 1 |
+-------+
|     1 |
+-------+

RETURN 1 & 0;
+-------+
| 1 & 0 |
+-------+
|     0 |
+-------+

RETURN 0 & 1;
+-------+
| 0 & 1 |
+-------+
|     0 |
+-------+

RETURN 0 & 0;
+-------+
| 0 & 0 |
+-------+
|     0 |
+-------+

RETURN 1 & 1, 1 & 0, 0 & 1, 0 & 0;
+-------+-------+-------+-------+
| 1 & 1 | 1 & 0 | 0 & 1 | 0 & 0 |
+-------+-------+-------+-------+
|     1 |     0 |     0 |     0 |
+-------+-------+-------+-------+

RETURN 1 | 1;
+-------+
| 1 | 1 |
+-------+
|     1 |
+-------+

RETURN 1 | 0;
+-------+
| 1 | 0 |
+-------+
|     1 |
+-------+

RETURN 0 | 1;
+-------+
| 0 | 1 |
+-------+
|     1 |
+-------+

RETURN 0 | 0;
+-------+
| 0 | 0 |
+-------+
|     0 |
+-------+

RETURN 1 | 1, 1 | 0, 0 | 1, 0 | 0;
+-------+-------+-------+-------+
| 1 | 1 | 1 | 0 | 0 | 1 | 0 | 0 |
+-------+-------+-------+-------+
|     1 |     1 |     1 |     0 |
+-------+-------+-------+-------+

RETURN 1 ^ 1;
+-------+
| 1 ^ 1 |
+-------+
|     0 |
+-------+

RETURN 1 ^ 0;
+-------+
| 1 ^ 0 |
+-------+
|     1 |
+-------+

RETURN 0 ^ 1;
+-------+
| 0 ^ 1 |
+-------+
|     1 |
+-------+

RETURN 0 ^ 0;
+-------+
| 0 ^ 0 |
+-------+
|     0 |
+-------+

RETURN 1 ^ 1, 1 ^ 0, 0 ^ 1, 0 ^ 0;
+-------+-------+-------+-------+
| 1 ^ 1 | 1 ^ 0 | 0 ^ 1 | 0 ^ 0 |
+-------+-------+-------+-------+
|     0 |     1 |     1 |     0 |
+-------+-------+-------+-------+

RETURN 1 << 1;
+--------+
| 1 << 1 |
+--------+
|      2 |
+--------+

RETURN 1 << 0;
+--------+
| 1 << 0 |
+--------+
|      1 |
+--------+

RETURN 1 << 63;
+----------------------+
|              1 << 63 |
+----------------------+
| -9223372036854775808 |
+----------------------+

RETURN 1 >> 1;
+--------+
| 1 >> 1 |
+--------+
|      0 |
+--------+

RETURN 1 >> 0;
+--------+
| 1 >> 0 |
+--------+
|      1 |
+--------+

RETURN 1  >>    0, 1  , 0^1 , 0 ^0,1,2;
+------------+---+-----+------+---+---+
| 1  >>    0 | 1 | 0^1 | 0 ^0 | 1 | 2 |
+------------+---+-----+------+---+---+
|          1 | 1 |   1 |    0 | 1 | 2 |
+------------+---+-----+------+---+---+

RETURN 1 >> 0 AS result;
+--------+
| result |
+--------+
|      1 |
+--------+

RETURN CASE WHEN true THEN 5 ELSE 0 END;
+----------------------------------+
| CASE WHEN true THEN 5 ELSE 0 END |
+----------------------------------+
|                                5 |
+----------------------------------+

RETURN CASE WHEN false THEN 5 ELSE 0 END;
+-----------------------------------+
| CASE WHEN false THEN 5 ELSE 0 END |
+-----------------------------------+
|                                 0 |
+-----------------------------------+

RETURN CASE WHEN false THEN 5 END;
+----------------------------+
| CASE WHEN false THEN 5 END |
+----------------------------+
|                       null |
+----------------------------+

RETURN CASE WHEN true THEN 5 END;
+---------------------------+
| CASE WHEN true THEN 5 END |
+---------------------------+
|                         5 |
+---------------------------+

RETURN CASE WHEN true THEN 6 ELSE 0 END AS result;
+--------+
| result |
+--------+
|      6 |
+--------+

RETURN CASE WHEN true THEN 6 ELSE 0 END AS result, 1, 5;
+--------+---+---+
| result | 1 | 5 |
+--------+---+---+
|      6 | 1 | 5 |
+--------+---+---+

RETURN CASE WHEN true THEN 6 ELSE 0 END, 1, 5;
+----------------------------------+---+---+
| CASE WHEN true THEN 6 ELSE 0 END | 1 | 5 |
+----------------------------------+---+---+
|                                6 | 1 | 5 |
+----------------------------------+---+---+

RETURN CASE WHEN false THEN 6 WHEN true THEN 5 WHEN false THEN 3 END AS result;
+--------+
| result |
+--------+
|      5 |
+--------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_long WHEN 12 THEN 0 ELSE 1 end, n.p_string;
+------------+-----------------------------------------+------------+
| n.p_double | CASE n.p_long WHEN 12 THEN 0 ELSE 1 end | n.p_string |
+------------+-----------------------------------------+------------+
|        6.0 |                                       0 |         12 |
+------------+-----------------------------------------+------------+

MATCH (n where @id = 12) RETURN CASE true WHEN true THEN 1 ELSE 0 END AS code, CASE false WHEN false THEN 0 ELSE 1 END AS code2;
+------+-------+
| code | code2 |
+------+-------+
|    1 |     0 |
+------+-------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_double WHEN 6.0 THEN "true" ELSE "false" END  AS equal_to_6;
+------------+------------+
| n.p_double | equal_to_6 |
+------------+------------+
|        6.0 |       true |
+------------+------------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_double WHEN 3.0 THEN "true" ELSE "false" END, n.p_long;
+------------+-------------------------------------------------------+----------+
| n.p_double | CASE n.p_double WHEN 3.0 THEN "true" ELSE "false" END | n.p_long |
+------------+-------------------------------------------------------+----------+
|        6.0 |                                                 false |       12 |
+------------+-------------------------------------------------------+----------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_double WHEN 3.0 THEN "true" END AS equal_to_3;
+------------+------------+
| n.p_double | equal_to_3 |
+------------+------------+
|        6.0 |       null |
+------------+------------+

MATCH (n where @id = 12) RETURN n.not_exist_p, CASE n.not_exist_p WHEN 1 THEN "equal_to_1" ELSE "other_value" END AS not_exist_p_code;
+---------------+------------------+
| n.not_exist_p | not_exist_p_code |
+---------------+------------------+
|          null |      other_value |
+---------------+------------------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_double WHEN 6 THEN "true" ELSE "false" END AS diffrent_data_type;
+------------+--------------------+
| n.p_double | diffrent_data_type |
+------------+--------------------+
|        6.0 |              false |
+------------+--------------------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_double WHEN true THEN true ELSE false END AS diffrent_data_type;
+------------+--------------------+
| n.p_double | diffrent_data_type |
+------------+--------------------+
|        6.0 |              false |
+------------+--------------------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_double WHEN 6.0 THEN true ELSE 6 END;
+------------+-----------------------------------------------+
| n.p_double | CASE n.p_double WHEN 6.0 THEN true ELSE 6 END |
+------------+-----------------------------------------------+
|        6.0 |                                          true |
+------------+-----------------------------------------------+

MATCH (n where @id = 12) RETURN n.p_double, CASE n.p_double WHEN n.p_double THEN n.p_long ELSE n.p_string END;
+------------+-------------------------------------------------------------------+
| n.p_double | CASE n.p_double WHEN n.p_double THEN n.p_long ELSE n.p_string END |
+------------+-------------------------------------------------------------------+
|        6.0 |                                                                12 |
+------------+-------------------------------------------------------------------+

MATCH (n where @id = 12) RETURN n.p_double, CASE CASE n.p_double WHEN n.p_double THEN n.p_long ELSE n.p_string END WHEN 12 THEN "equal_to_12" ELSE "not_equal_to_12" END;
+------------+------------------------------------------------------------------------------------------------------------------------------+
| n.p_double | CASE CASE n.p_double WHEN n.p_double THEN n.p_long ELSE n.p_string END WHEN 12 THEN "equal_to_12" ELSE "not_equal_to_12" END |
+------------+------------------------------------------------------------------------------------------------------------------------------+
|        6.0 |                                                                                                                  equal_to_12 |
+------------+------------------------------------------------------------------------------------------------------------------------------+

MATCH (n where @id = 12) RETURN n.p_double, CASE CASE n.p_double WHEN n.p_double THEN n.p_long ELSE n.p_string END WHEN 12 THEN "equal_to_12" ELSE "not_equal_to_12" END  AS code;
+------------+-------------+
| n.p_double |        code |
+------------+-------------+
|        6.0 | equal_to_12 |
+------------+-------------+

MATCH (n where @id in [12,1]) RETURN n.p_double, n.p_long, CASE 12 WHEN n.p_long THEN CASE n.p_double WHEN 6.0 THEN "p_long_12_p_double_6.0" ELSE "p_long_12_p_double_not_6.0" END ELSE "p_long_not_12" END  AS code;
+------------+----------+------------------------+
| n.p_double | n.p_long |                   code |
+------------+----------+------------------------+
|        6.0 |       12 | p_long_12_p_double_6.0 |
|        0.5 |        1 |          p_long_not_12 |
+------------+----------+------------------------+

MATCH (n where @id in [12,1]) RETURN n.p_double, n.p_long, CASE 12 WHEN n.p_long THEN "p_long_12" ELSE CASE n.p_double WHEN 6.0 THEN "p_long_not_12_p_double_6.0" ELSE "p_long_not_12_p_double_not_6.0" END END  AS code;
+------------+----------+--------------------------------+
| n.p_double | n.p_long |                           code |
+------------+----------+--------------------------------+
|        6.0 |       12 |                      p_long_12 |
|        0.5 |        1 | p_long_not_12_p_double_not_6.0 |
+------------+----------+--------------------------------+

MATCH (n where @id in [12,1,3]) RETURN n.p_double, n.p_long, CASE n.p_long WHEN CASE 5 WHEN 5 THEN 12 END THEN "p_long_12" ELSE "p_long_not_12" END AS code;
+------------+----------+---------------+
| n.p_double | n.p_long |          code |
+------------+----------+---------------+
|        6.0 |       12 |     p_long_12 |
|        0.5 |        1 | p_long_not_12 |
+------------+----------+---------------+

MATCH (n where @id = 12) RETURN n.p_long, CASE n.p_long WHEN 10, 12 THEN "true" ELSE "false" END AS equal_to_10_or_12;
+----------+-------------------+
| n.p_long | equal_to_10_or_12 |
+----------+-------------------+
|       12 |              true |
+----------+-------------------+

MATCH (n where @id = 12) RETURN n.p_long, CASE n.p_long WHEN 10, 11 THEN "true" ELSE "false" END AS equal_to_10_or_11;
+----------+-------------------+
| n.p_long | equal_to_10_or_11 |
+----------+-------------------+
|       12 |             false |
+----------+-------------------+

RETURN ABS(2);
+--------+
| ABS(2) |
+--------+
|      2 |
+--------+

RETURN ABS(1.2-2.0), 1.2-2.0;
+--------------+---------+
| ABS(1.2-2.0) | 1.2-2.0 |
+--------------+---------+
|          0.8 |    -0.8 |
+--------------+---------+

RETURN ABS(2.1);
+----------+
| ABS(2.1) |
+----------+
|      2.1 |
+----------+

RETURN ABS(2.0);
+----------+
| ABS(2.0) |
+----------+
|      2.0 |
+----------+

RETURN ABS(2), ABS(2.0), ABS(1-2), ABS(2.0), 2-5;
+--------+----------+----------+----------+-----+
| ABS(2) | ABS(2.0) | ABS(1-2) | ABS(2.0) | 2-5 |
+--------+----------+----------+----------+-----+
|      2 |      2.0 |        1 |      2.0 |  -3 |
+--------+----------+----------+----------+-----+

RETURN LOG(1);
+--------+
| LOG(1) |
+--------+
|    0.0 |
+--------+

RETURN LOG(1.0);
+----------+
| LOG(1.0) |
+----------+
|      0.0 |
+----------+

RETURN LOG(2);
+---------+
|  LOG(2) |
+---------+
| 0.69315 |
+---------+

RETURN LOG(1 - 2);
+------------+
| LOG(1 - 2) |
+------------+
|       null |
+------------+

RETURN LOG(1), LOG(1.0), LOG(2), LOG(1 - 2);
+--------+----------+---------+------------+
| LOG(1) | LOG(1.0) |  LOG(2) | LOG(1 - 2) |
+--------+----------+---------+------------+
|    0.0 |      0.0 | 0.69315 |       null |
+--------+----------+---------+------------+

RETURN ROUND(1.1);
+------------+
| ROUND(1.1) |
+------------+
|          1 |
+------------+

RETURN ROUND(1.5);
+------------+
| ROUND(1.5) |
+------------+
|          2 |
+------------+

RETURN ROUND(1.7);
+------------+
| ROUND(1.7) |
+------------+
|          2 |
+------------+

RETURN ROUND(0.0);
+------------+
| ROUND(0.0) |
+------------+
|          0 |
+------------+

RETURN ROUND(0);
+----------+
| ROUND(0) |
+----------+
|        0 |
+----------+

RETURN ROUND(0-1.1);
+--------------+
| ROUND(0-1.1) |
+--------------+
|           -1 |
+--------------+

RETURN ROUND(0-1.5);
+--------------+
| ROUND(0-1.5) |
+--------------+
|           -2 |
+--------------+

RETURN ROUND(0-1.7);
+--------------+
| ROUND(0-1.7) |
+--------------+
|           -2 |
+--------------+

RETURN ROUND(0-0.0);
+--------------+
| ROUND(0-0.0) |
+--------------+
|            0 |
+--------------+

RETURN ROUND(0-0);
+------------+
| ROUND(0-0) |
+------------+
|          0 |
+------------+

RETURN ROUND(1.1), ROUND(1.5), ROUND(1.7), ROUND(0.0), ROUND(0), ROUND(0-1.1), ROUND(0-1.5), ROUND(0-1.7), ROUND(0-0.0), ROUND(0-0);
+------------+------------+------------+------------+----------+--------------+--------------+--------------+--------------+------------+
| ROUND(1.1) | ROUND(1.5) | ROUND(1.7) | ROUND(0.0) | ROUND(0) | ROUND(0-1.1) | ROUND(0-1.5) | ROUND(0-1.7) | ROUND(0-0.0) | ROUND(0-0) |
+------------+------------+------------+------------+----------+--------------+--------------+--------------+--------------+------------+
|          1 |          2 |          2 |          0 |        0 |           -1 |           -2 |           -2 |            0 |          0 |
+------------+------------+------------+------------+----------+--------------+--------------+--------------+--------------+------------+

RETURN CEIL(1.1);
+-----------+
| CEIL(1.1) |
+-----------+
|         2 |
+-----------+

RETURN CEIL(1.5);
+-----------+
| CEIL(1.5) |
+-----------+
|         2 |
+-----------+

RETURN CEIL(1.7);
+-----------+
| CEIL(1.7) |
+-----------+
|         2 |
+-----------+

RETURN CEIL(0.0);
+-----------+
| CEIL(0.0) |
+-----------+
|         0 |
+-----------+

RETURN CEIL(0);
+---------+
| CEIL(0) |
+---------+
|       0 |
+---------+

RETURN CEIL(0-1.1);
+-------------+
| CEIL(0-1.1) |
+-------------+
|          -1 |
+-------------+

RETURN CEIL(0-1.5);
+-------------+
| CEIL(0-1.5) |
+-------------+
|          -1 |
+-------------+

RETURN CEIL(0-1.7);
+-------------+
| CEIL(0-1.7) |
+-------------+
|          -1 |
+-------------+

RETURN CEIL(0-0.0);
+-------------+
| CEIL(0-0.0) |
+-------------+
|           0 |
+-------------+

RETURN CEIL(0-0);
+-----------+
| CEIL(0-0) |
+-----------+
|         0 |
+-----------+

RETURN CEIL(1.1), CEIL(1.5), CEIL(1.7), CEIL(0.0), CEIL(0), CEIL(0-1.1), CEIL(0-1.5), CEIL(0-1.7), CEIL(0-0.0), CEIL(0-0);
+-----------+-----------+-----------+-----------+---------+-------------+-------------+-------------+-------------+-----------+
| CEIL(1.1) | CEIL(1.5) | CEIL(1.7) | CEIL(0.0) | CEIL(0) | CEIL(0-1.1) | CEIL(0-1.5) | CEIL(0-1.7) | CEIL(0-0.0) | CEIL(0-0) |
+-----------+-----------+-----------+-----------+---------+-------------+-------------+-------------+-------------+-----------+
|         2 |         2 |         2 |         0 |       0 |          -1 |          -1 |          -1 |           0 |         0 |
+-----------+-----------+-----------+-----------+---------+-------------+-------------+-------------+-------------+-----------+

RETURN FLOOR(1.1);
+------------+
| FLOOR(1.1) |
+------------+
|          1 |
+------------+

RETURN FLOOR(1.5);
+------------+
| FLOOR(1.5) |
+------------+
|          1 |
+------------+

RETURN FLOOR(1.7);
+------------+
| FLOOR(1.7) |
+------------+
|          1 |
+------------+

RETURN FLOOR(0.0);
+------------+
| FLOOR(0.0) |
+------------+
|          0 |
+------------+

RETURN FLOOR(0);
+----------+
| FLOOR(0) |
+----------+
|        0 |
+----------+

RETURN FLOOR(0-1.1);
+--------------+
| FLOOR(0-1.1) |
+--------------+
|           -2 |
+--------------+

RETURN FLOOR(0-1.5);
+--------------+
| FLOOR(0-1.5) |
+--------------+
|           -2 |
+--------------+

RETURN FLOOR(0-1.7);
+--------------+
| FLOOR(0-1.7) |
+--------------+
|           -2 |
+--------------+

RETURN FLOOR(0-0.0);
+--------------+
| FLOOR(0-0.0) |
+--------------+
|            0 |
+--------------+

RETURN FLOOR(0-0);
+------------+
| FLOOR(0-0) |
+------------+
|          0 |
+------------+

RETURN FLOOR(1.1), FLOOR(1.5), FLOOR(1.7), FLOOR(0.0), FLOOR(0), FLOOR(0-1.1), FLOOR(0-1.5), FLOOR(0-1.7), FLOOR(0-0.0), FLOOR(0-0);
+------------+------------+------------+------------+----------+--------------+--------------+--------------+--------------+------------+
| FLOOR(1.1) | FLOOR(1.5) | FLOOR(1.7) | FLOOR(0.0) | FLOOR(0) | FLOOR(0-1.1) | FLOOR(0-1.5) | FLOOR(0-1.7) | FLOOR(0-0.0) | FLOOR(0-0) |
+------------+------------+------------+------------+----------+--------------+--------------+--------------+--------------+------------+
|          1 |          1 |          1 |          0 |        0 |           -2 |           -2 |           -2 |            0 |          0 |
+------------+------------+------------+------------+----------+--------------+--------------+--------------+--------------+------------+

RETURN range(1, 10);
+------------------------+
|           range(1, 10) |
+------------------------+
| [1,2,3,4,5,6,7,8,9,10] |
+------------------------+

RETURN range(0-10, 1);
+--------------------------------------+
|                       range(0-10, 1) |
+--------------------------------------+
| [-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1] |
+--------------------------------------+

RETURN range(10, 10);
+---------------+
| range(10, 10) |
+---------------+
|          [10] |
+---------------+

RETURN range(0-10, 10, 2);
+--------------------------------+
|             range(0-10, 10, 2) |
+--------------------------------+
| [-10,-8,-6,-4,-2,0,2,4,6,8,10] |
+--------------------------------+

RETURN range(1, 10, 1000);
+--------------------+
| range(1, 10, 1000) |
+--------------------+
|                [1] |
+--------------------+

RETURN head(range(0,10));
+-------------------+
| head(range(0,10)) |
+-------------------+
|                 0 |
+-------------------+

RETURN last(range(0,10));
+-------------------+
| last(range(0,10)) |
+-------------------+
|                10 |
+-------------------+

RETURN size(range(0,10));
+-------------------+
| size(range(0,10)) |
+-------------------+
|                11 |
+-------------------+

RETURN tail(range(0,10));
+------------------------+
|      tail(range(0,10)) |
+------------------------+
| [1,2,3,4,5,6,7,8,9,10] |
+------------------------+

RETURN reverse(range(0,10));
+--------------------------+
|     reverse(range(0,10)) |
+--------------------------+
| [10,9,8,7,6,5,4,3,2,1,0] |
+--------------------------+

RETURN range(1,4) + [4,5,6];
+----------------------+
| range(1,4) + [4,5,6] |
+----------------------+
|      [1,2,3,4,4,5,6] |
+----------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN m;
+------------+
|          m |
+------------+
| (10:node2) |
| (11:node2) |
| (12:node2) |
+------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN e;
+---------------------------+
|                         e |
+---------------------------+
| (1)-[:edge_n1_n2|0]->(10) |
| (1)-[:edge_n1_n2|0]->(11) |
| (1)-[:edge_n1_n2|0]->(12) |
+---------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN keys(m);
+----------------------------------------+
|                                keys(m) |
+----------------------------------------+
| [biz_node_id,p_long,p_double,p_string] |
| [biz_node_id,p_long,p_double,p_string] |
| [biz_node_id,p_long,p_double,p_string] |
+----------------------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN labels(m);
+-----------+
| labels(m) |
+-----------+
|     node2 |
|     node2 |
|     node2 |
+-----------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN label(m);
+----------+
| label(m) |
+----------+
|    node2 |
|    node2 |
|    node2 |
+----------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN keys(e);
+----------------------------+
|                    keys(e) |
+----------------------------+
| [p_long,p_double,p_string] |
| [p_long,p_double,p_string] |
| [p_long,p_double,p_string] |
+----------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN labels(e);
+------------+
|  labels(e) |
+------------+
| edge_n1_n2 |
| edge_n1_n2 |
| edge_n1_n2 |
+------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN label(e);
+------------+
|   label(e) |
+------------+
| edge_n1_n2 |
| edge_n1_n2 |
| edge_n1_n2 |
+------------+

RETURN UPPER("abc");
+--------------+
| UPPER("abc") |
+--------------+
|          ABC |
+--------------+

RETURN UPPER("");
+-----------+
| UPPER("") |
+-----------+
|           |
+-----------+

RETURN LOWER("ABC");
+--------------+
| LOWER("ABC") |
+--------------+
|          abc |
+--------------+

RETURN LOWER("");
+-----------+
| LOWER("") |
+-----------+
|           |
+-----------+

RETURN LOWER(UPPER("aBc"));
+---------------------+
| LOWER(UPPER("aBc")) |
+---------------------+
|                 abc |
+---------------------+

RETURN CHARACTER_LENGTH("1234567");
+-----------------------------+
| CHARACTER_LENGTH("1234567") |
+-----------------------------+
|                           7 |
+-----------------------------+

RETURN CHARACTER_LENGTH("");
+----------------------+
| CHARACTER_LENGTH("") |
+----------------------+
|                    0 |
+----------------------+

RETURN SUBSTRING("abc1234", 5);
+-------------------------+
| SUBSTRING("abc1234", 5) |
+-------------------------+
|                     234 |
+-------------------------+

RETURN SUBSTRING("abc1234", 5, 2);
+----------------------------+
| SUBSTRING("abc1234", 5, 2) |
+----------------------------+
|                         23 |
+----------------------------+

RETURN SUBSTR("abc1234", 5);
+----------------------+
| SUBSTR("abc1234", 5) |
+----------------------+
|                  234 |
+----------------------+

RETURN SUBSTR("abc1234", 5, 2);
+-------------------------+
| SUBSTR("abc1234", 5, 2) |
+-------------------------+
|                      23 |
+-------------------------+

RETURN SUBSTRING("", 5);
+------------------+
| SUBSTRING("", 5) |
+------------------+
|                  |
+------------------+

RETURN SUBSTRING("", 5, 2);
+---------------------+
| SUBSTRING("", 5, 2) |
+---------------------+
|                     |
+---------------------+

RETURN SUBSTRING("abc1234", 8);
+-------------------------+
| SUBSTRING("abc1234", 8) |
+-------------------------+
|                         |
+-------------------------+

RETURN SUBSTRING("abc1234", 8, 2);
+----------------------------+
| SUBSTRING("abc1234", 8, 2) |
+----------------------------+
|                            |
+----------------------------+

RETURN SUBSTRING("abc1234", 5, 100);
+------------------------------+
| SUBSTRING("abc1234", 5, 100) |
+------------------------------+
|                          234 |
+------------------------------+

RETURN SUBSTRING("abc1234", 5, 0);
+----------------------------+
| SUBSTRING("abc1234", 5, 0) |
+----------------------------+
|                            |
+----------------------------+

RETURN SUBSTR("abc1234", -5);
+-----------------------+
| SUBSTR("abc1234", -5) |
+-----------------------+
|                 c1234 |
+-----------------------+

RETURN SUBSTR("abc1234", -5, 2);
+--------------------------+
| SUBSTR("abc1234", -5, 2) |
+--------------------------+
|                       c1 |
+--------------------------+

RETURN SUBSTR("abc1234", -8);
+-----------------------+
| SUBSTR("abc1234", -8) |
+-----------------------+
|                       |
+-----------------------+

RETURN SUBSTR("abc1234", -8, 2);
+--------------------------+
| SUBSTR("abc1234", -8, 2) |
+--------------------------+
|                          |
+--------------------------+

RETURN SUBSTR("abc1234", -5, 100);
+----------------------------+
| SUBSTR("abc1234", -5, 100) |
+----------------------------+
|                      c1234 |
+----------------------------+

RETURN SUBSTR("abc1234", 5, -1);
+--------------------------+
| SUBSTR("abc1234", 5, -1) |
+--------------------------+
|                          |
+--------------------------+

RETURN TRIM("  abc   ");
+------------------+
| TRIM("  abc   ") |
+------------------+
|              abc |
+------------------+

RETURN TRIM("abc");
+-------------+
| TRIM("abc") |
+-------------+
|         abc |
+-------------+

RETURN TRIM("  ");
+------------+
| TRIM("  ") |
+------------+
|            |
+------------+

RETURN TRIM("");
+----------+
| TRIM("") |
+----------+
|          |
+----------+

RETURN TRIM(" abc ", BOTH);
+---------------------+
| TRIM(" abc ", BOTH) |
+---------------------+
|                 abc |
+---------------------+

RETURN TRIM("abc", BOTH);
+-------------------+
| TRIM("abc", BOTH) |
+-------------------+
|               abc |
+-------------------+

RETURN TRIM("  ", BOTH);
+------------------+
| TRIM("  ", BOTH) |
+------------------+
|                  |
+------------------+

RETURN TRIM("", BOTH);
+----------------+
| TRIM("", BOTH) |
+----------------+
|                |
+----------------+

RETURN CONCAT("a", "b", "c");
+-----------------------+
| CONCAT("a", "b", "c") |
+-----------------------+
|                   abc |
+-----------------------+

RETURN CONCAT("a");
+-------------+
| CONCAT("a") |
+-------------+
|           a |
+-------------+

RETURN CONCAT("", "a", "");
+---------------------+
| CONCAT("", "a", "") |
+---------------------+
|                   a |
+---------------------+

RETURN CONCAT("", "", "");
+--------------------+
| CONCAT("", "", "") |
+--------------------+
|                    |
+--------------------+

RETURN CONCAT_WS(",", "a", "b", "c");
+-------------------------------+
| CONCAT_WS(",", "a", "b", "c") |
+-------------------------------+
|                         a,b,c |
+-------------------------------+

RETURN CONCAT_WS(",", "a");
+---------------------+
| CONCAT_WS(",", "a") |
+---------------------+
|                   a |
+---------------------+

RETURN CONCAT_WS(",", "a", "", "b");
+------------------------------+
| CONCAT_WS(",", "a", "", "b") |
+------------------------------+
|                         a,,b |
+------------------------------+

RETURN CONCAT_WS("", "a", "b");
+-------------------------+
| CONCAT_WS("", "a", "b") |
+-------------------------+
|                      ab |
+-------------------------+

RETURN CONCAT_WS("", "a", "");
+------------------------+
| CONCAT_WS("", "a", "") |
+------------------------+
|                      a |
+------------------------+

RETURN CONCAT_WS("", "", "b");
+------------------------+
| CONCAT_WS("", "", "b") |
+------------------------+
|                      b |
+------------------------+

RETURN CONCAT_WS("", "", "");
+-----------------------+
| CONCAT_WS("", "", "") |
+-----------------------+
|                       |
+-----------------------+

RETURN INSTR("abcbc", "bc", 3);
+-------------------------+
| INSTR("abcbc", "bc", 3) |
+-------------------------+
|                       4 |
+-------------------------+

RETURN INSTR("abcbc", "bc");
+----------------------+
| INSTR("abcbc", "bc") |
+----------------------+
|                    2 |
+----------------------+

RETURN INSTR("", "bc", 3);
+--------------------+
| INSTR("", "bc", 3) |
+--------------------+
|                  0 |
+--------------------+

RETURN INSTR("", "bc");
+-----------------+
| INSTR("", "bc") |
+-----------------+
|               0 |
+-----------------+

RETURN INSTR("abcbc", "", 3);
+-----------------------+
| INSTR("abcbc", "", 3) |
+-----------------------+
|                     3 |
+-----------------------+

RETURN INSTR("abcbc", "");
+--------------------+
| INSTR("abcbc", "") |
+--------------------+
|                  1 |
+--------------------+

RETURN INSTR("", "");
+---------------+
| INSTR("", "") |
+---------------+
|             1 |
+---------------+

RETURN FINDSTR("abcbc", "BC", false);
+-------------------------------+
| FINDSTR("abcbc", "BC", false) |
+-------------------------------+
|                             1 |
+-------------------------------+

RETURN FINDSTR("abcbc", "BC");
+------------------------+
| FINDSTR("abcbc", "BC") |
+------------------------+
|                     -1 |
+------------------------+

MATCH (n:node1 {@id: 1}) RETURN isBlank(n.non_exist);
+----------------------+
| isBlank(n.non_exist) |
+----------------------+
|                 true |
+----------------------+

RETURN isBlank("");
+-------------+
| isBlank("") |
+-------------+
|        true |
+-------------+

RETURN isBlank("   ");
+----------------+
| isBlank("   ") |
+----------------+
|           true |
+----------------+

RETURN isBlank(" \t \n \f \r  ");
+---------------------------+
| isBlank(" \t \n \f \r  ") |
+---------------------------+
|                      true |
+---------------------------+

RETURN isBlank("\t\n\f\r");
+---------------------+
| isBlank("\t\n\f\r") |
+---------------------+
|                true |
+---------------------+

RETURN isBlank("\t");
+---------------+
| isBlank("\t") |
+---------------+
|          true |
+---------------+

RETURN isBlank("\n");
+---------------+
| isBlank("\n") |
+---------------+
|          true |
+---------------+

RETURN isBlank("\f");
+---------------+
| isBlank("\f") |
+---------------+
|          true |
+---------------+

RETURN isBlank("\r");
+---------------+
| isBlank("\r") |
+---------------+
|          true |
+---------------+

RETURN isBlank("\b");
+---------------+
| isBlank("\b") |
+---------------+
|         false |
+---------------+

RETURN isBlank(" \t\n\f\rabc\t\n\f\r");
+---------------------------------+
| isBlank(" \t\n\f\rabc\t\n\f\r") |
+---------------------------------+
|                           false |
+---------------------------------+

RETURN isBlank("abc");
+----------------+
| isBlank("abc") |
+----------------+
|          false |
+----------------+

RETURN isBlank("abc ");
+-----------------+
| isBlank("abc ") |
+-----------------+
|           false |
+-----------------+

RETURN isBlank(" abc");
+-----------------+
| isBlank(" abc") |
+-----------------+
|           false |
+-----------------+

MATCH (n:node1 {@id: 1}) RETURN isNotBlank(n.non_exist);
+-------------------------+
| isNotBlank(n.non_exist) |
+-------------------------+
|                   false |
+-------------------------+

RETURN isNotBlank("");
+----------------+
| isNotBlank("") |
+----------------+
|          false |
+----------------+

RETURN isNotBlank("   ");
+-------------------+
| isNotBlank("   ") |
+-------------------+
|             false |
+-------------------+

RETURN isNotBlank(" \t \n \f \r  ");
+------------------------------+
| isNotBlank(" \t \n \f \r  ") |
+------------------------------+
|                        false |
+------------------------------+

RETURN isNotBlank("\t\n\f\r");
+------------------------+
| isNotBlank("\t\n\f\r") |
+------------------------+
|                  false |
+------------------------+

RETURN isNotBlank("\t");
+------------------+
| isNotBlank("\t") |
+------------------+
|            false |
+------------------+

RETURN isNotBlank("\n");
+------------------+
| isNotBlank("\n") |
+------------------+
|            false |
+------------------+

RETURN isNotBlank("\f");
+------------------+
| isNotBlank("\f") |
+------------------+
|            false |
+------------------+

RETURN isNotBlank("\r");
+------------------+
| isNotBlank("\r") |
+------------------+
|            false |
+------------------+

RETURN isNotBlank("\b");
+------------------+
| isNotBlank("\b") |
+------------------+
|             true |
+------------------+

RETURN isNotBlank(" \t\n\f\rabc\t\n\f\r");
+------------------------------------+
| isNotBlank(" \t\n\f\rabc\t\n\f\r") |
+------------------------------------+
|                               true |
+------------------------------------+

RETURN isNotBlank("abc");
+-------------------+
| isNotBlank("abc") |
+-------------------+
|              true |
+-------------------+

RETURN isNotBlank("abc ");
+--------------------+
| isNotBlank("abc ") |
+--------------------+
|               true |
+--------------------+

RETURN isNotBlank(" abc");
+--------------------+
| isNotBlank(" abc") |
+--------------------+
|               true |
+--------------------+

--error 105
RETURN TRIM("", "");

RETURN TOINTEGER("1");
+----------------+
| TOINTEGER("1") |
+----------------+
|              1 |
+----------------+

RETURN TODOUBLE("1");
+---------------+
| TODOUBLE("1") |
+---------------+
|           1.0 |
+---------------+

RETURN TOSTRING("1");
+---------------+
| TOSTRING("1") |
+---------------+
|             1 |
+---------------+

RETURN TOBOOL("1");
+-------------+
| TOBOOL("1") |
+-------------+
|        true |
+-------------+

RETURN TODATE("2001-01-01");
+----------------------+
| TODATE("2001-01-01") |
+----------------------+
|           2001-01-01 |
+----------------------+

RETURN TODATETIME("2001-01-01 10:30:00");
+-----------------------------------+
| TODATETIME("2001-01-01 10:30:00") |
+-----------------------------------+
|               2001-01-01 10:30:00 |
+-----------------------------------+

RETURN TOINTEGER(0);
+--------------+
| TOINTEGER(0) |
+--------------+
|            0 |
+--------------+

RETURN TODOUBLE(0);
+-------------+
| TODOUBLE(0) |
+-------------+
|         0.0 |
+-------------+

RETURN TOSTRING(0);
+-------------+
| TOSTRING(0) |
+-------------+
|           0 |
+-------------+

RETURN TOBOOL(0);
+-----------+
| TOBOOL(0) |
+-----------+
|     false |
+-----------+

RETURN TOINTEGER(1.0);
+----------------+
| TOINTEGER(1.0) |
+----------------+
|              1 |
+----------------+

RETURN TODOUBLE(1.0);
+---------------+
| TODOUBLE(1.0) |
+---------------+
|           1.0 |
+---------------+

RETURN TOSTRING(1.0);
+---------------+
| TOSTRING(1.0) |
+---------------+
|      1.000000 |
+---------------+

RETURN TOBOOL(1.0);
+-------------+
| TOBOOL(1.0) |
+-------------+
|        true |
+-------------+

RETURN TOINTEGER(true);
+-----------------+
| TOINTEGER(true) |
+-----------------+
|               1 |
+-----------------+

RETURN TODOUBLE(true);
+----------------+
| TODOUBLE(true) |
+----------------+
|            1.0 |
+----------------+

RETURN TOSTRING(true);
+----------------+
| TOSTRING(true) |
+----------------+
|           true |
+----------------+

RETURN TOBOOL(true);
+--------------+
| TOBOOL(true) |
+--------------+
|         true |
+--------------+

RETURN TODATE(TODATE("2001-01-01"));
+------------------------------+
| TODATE(TODATE("2001-01-01")) |
+------------------------------+
|                   2001-01-01 |
+------------------------------+

RETURN TODATETIME(TODATE("2001-01-01"));
+----------------------------------+
| TODATETIME(TODATE("2001-01-01")) |
+----------------------------------+
|              2001-01-01 00:00:00 |
+----------------------------------+

RETURN TOSTRING(TODATE("2001-01-01"));
+--------------------------------+
| TOSTRING(TODATE("2001-01-01")) |
+--------------------------------+
|                     2001-01-01 |
+--------------------------------+

RETURN TODATE(TODATETIME("2001-01-01 10:30:00"));
+-------------------------------------------+
| TODATE(TODATETIME("2001-01-01 10:30:00")) |
+-------------------------------------------+
|                                2001-01-01 |
+-------------------------------------------+

RETURN TODATETIME(TODATETIME("2001-01-01 10:30:00"));
+-----------------------------------------------+
| TODATETIME(TODATETIME("2001-01-01 10:30:00")) |
+-----------------------------------------------+
|                           2001-01-01 10:30:00 |
+-----------------------------------------------+

RETURN TOSTRING(TODATETIME("2001-01-01 10:30:00"));
+---------------------------------------------+
| TOSTRING(TODATETIME("2001-01-01 10:30:00")) |
+---------------------------------------------+
|                         2001-01-01 10:30:00 |
+---------------------------------------------+

INSERT (n:node1{@id:1000, p_long:1000, p_double:1000, p_string:"123abc"});

match(n where @id = 1000 and p_string like '123_') RETURN n.p_string;

match(n where @id = 1000 and p_string like '123%') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string like '123ab_') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string like '123ab%') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string like '123_bc') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string like '123%bc') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string like '_23abc') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string like '%23abc') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string not like '123_') RETURN n.p_string;
+------------+
| n.p_string |
+------------+
|     123abc |
+------------+

match(n where @id = 1000 and p_string not like '123%') RETURN n.p_string;

match(n where @id = 1000 and p_string not like '123ab_') RETURN n.p_string;

match(n where @id = 1000 and p_string not like '123ab%') RETURN n.p_string;

match(n where @id = 1000 and p_string not like '123_bc') RETURN n.p_string;

match(n where @id = 1000 and p_string not like '123%bc') RETURN n.p_string;

match(n where @id = 1000 and p_string not like '_23abc') RETURN n.p_string;

match(n where @id = 1000 and p_string not like '%23abc') RETURN n.p_string;

MATCH (where @id=1)-[]-(a) WHERE a LIKE '%node1%' RETURN a;

MATCH (where @id=1)-[]-(a) WHERE a NOT LIKE '%node1%' RETURN a;
+------------+
|          a |
+------------+
| (10:node2) |
| (11:node2) |
| (12:node2) |
+------------+

MATCH (where @id=1)-[]-(a) WHERE a LIKE '%node2%' RETURN a;
+------------+
|          a |
+------------+
| (10:node2) |
| (11:node2) |
| (12:node2) |
+------------+

MATCH (a where @id=1)-[]-() WHERE a LIKE '%node1%' RETURN a;
+-----------+
|         a |
+-----------+
| (1:node1) |
| (1:node1) |
| (1:node1) |
+-----------+

DELETE n MATCH (n:node1{@id:1000});

RETURN -1;
+----+
| -1 |
+----+
| -1 |
+----+

RETURN - 1;
+-----+
| - 1 |
+-----+
|  -1 |
+-----+

RETURN -1, - 1;
+----+-----+
| -1 | - 1 |
+----+-----+
| -1 |  -1 |
+----+-----+

RETURN ! true;
+--------+
| ! true |
+--------+
|  false |
+--------+

RETURN !true;
+-------+
| !true |
+-------+
| false |
+-------+

RETURN !(1 = 2);
+----------+
| !(1 = 2) |
+----------+
|     true |
+----------+

RETURN !(1 != 2);
+-----------+
| !(1 != 2) |
+-----------+
|     false |
+-----------+

RETURN ! true, !true, !(1 = 2), NOT(1 != 2);
+--------+-------+----------+-------------+
| ! true | !true | !(1 = 2) | NOT(1 != 2) |
+--------+-------+----------+-------------+
|  false | false |     true |       false |
+--------+-------+----------+-------------+

RETURN NOT true;
+----------+
| NOT true |
+----------+
|    false |
+----------+

RETURN NOT true;
+----------+
| NOT true |
+----------+
|    false |
+----------+

RETURN NOT(1 = 2);
+------------+
| NOT(1 = 2) |
+------------+
|       true |
+------------+

RETURN NOT(1 != 2);
+-------------+
| NOT(1 != 2) |
+-------------+
|       false |
+-------------+

RETURN NOT true, NOT true, !(1 = 2), NOT(1 != 2);
+----------+----------+----------+-------------+
| NOT true | NOT true | !(1 = 2) | NOT(1 != 2) |
+----------+----------+----------+-------------+
|    false |    false |     true |       false |
+----------+----------+----------+-------------+

RETURN ~1;
+----+
| ~1 |
+----+
| -2 |
+----+

RETURN ~ 1;
+-----+
| ~ 1 |
+-----+
|  -2 |
+-----+

RETURN ~ 1, ~1;
+-----+----+
| ~ 1 | ~1 |
+-----+----+
|  -2 | -2 |
+-----+----+

RETURN +1;
+----+
| +1 |
+----+
|  1 |
+----+

RETURN (+1);
+------+
| (+1) |
+------+
|    1 |
+------+

RETURN + 2;
+-----+
| + 2 |
+-----+
|   2 |
+-----+

RETURN +1 + 2;
+--------+
| +1 + 2 |
+--------+
|      3 |
+--------+

RETURN 1 + 2;
+-------+
| 1 + 2 |
+-------+
|     3 |
+-------+

INSERT (n:node6{@id:500001, p_bool:true, p_boolean:false, p_tinyint:0, p_smallint:1, p_int:2147483647, p_integer:1, p_long:2, p_bigint:3, p_float:1.0, p_double:1.0, p_string:"0", p_varchar:"1", p_date:"1970-01-01", p_datetime:"1970-01-02 00:00:00"});

RETURN CAST(1 AS STRING);
+-------------------+
| CAST(1 AS STRING) |
+-------------------+
|                 1 |
+-------------------+

RETURN CAST(1 AS VARCHAR);
+--------------------+
| CAST(1 AS VARCHAR) |
+--------------------+
|                  1 |
+--------------------+

RETURN CAST(1 AS INTEGER);
+--------------------+
| CAST(1 AS INTEGER) |
+--------------------+
|                  1 |
+--------------------+

RETURN CAST(1 AS BOOL);
+-----------------+
| CAST(1 AS BOOL) |
+-----------------+
|            true |
+-----------------+

RETURN CAST(1 AS BOOLEAN);
+--------------------+
| CAST(1 AS BOOLEAN) |
+--------------------+
|               true |
+--------------------+

RETURN CAST(1 AS DOUBLE);
+-------------------+
| CAST(1 AS DOUBLE) |
+-------------------+
|               1.0 |
+-------------------+

RETURN CAST(1 AS FLOAT);
+------------------+
| CAST(1 AS FLOAT) |
+------------------+
|              1.0 |
+------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_int AS STRING);
+-------------------------+
| CAST(n.p_int AS STRING) |
+-------------------------+
|              2147483647 |
+-------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_int AS VARCHAR);
+--------------------------+
| CAST(n.p_int AS VARCHAR) |
+--------------------------+
|               2147483647 |
+--------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_int AS INTEGER);
+--------------------------+
| CAST(n.p_int AS INTEGER) |
+--------------------------+
|               2147483647 |
+--------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_int AS BOOL);
+-----------------------+
| CAST(n.p_int AS BOOL) |
+-----------------------+
|                  true |
+-----------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_int AS BOOLEAN);
+--------------------------+
| CAST(n.p_int AS BOOLEAN) |
+--------------------------+
|                     true |
+--------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_int AS DOUBLE);
+-------------------------+
| CAST(n.p_int AS DOUBLE) |
+-------------------------+
|            2147483647.0 |
+-------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_int AS FLOAT);
+------------------------+
| CAST(n.p_int AS FLOAT) |
+------------------------+
|           2147483647.0 |
+------------------------+

RETURN CAST(1.0 AS STRING);
+---------------------+
| CAST(1.0 AS STRING) |
+---------------------+
|            1.000000 |
+---------------------+

RETURN CAST(1.0 AS INTEGER);
+----------------------+
| CAST(1.0 AS INTEGER) |
+----------------------+
|                    1 |
+----------------------+

RETURN CAST(1.0 AS LONG);
+-------------------+
| CAST(1.0 AS LONG) |
+-------------------+
|                 1 |
+-------------------+

RETURN CAST(1.0 AS BOOL);
+-------------------+
| CAST(1.0 AS BOOL) |
+-------------------+
|              true |
+-------------------+

RETURN CAST(1.0 AS DOUBLE);
+---------------------+
| CAST(1.0 AS DOUBLE) |
+---------------------+
|                 1.0 |
+---------------------+

RETURN CAST(1.0 AS FLOAT);
+--------------------+
| CAST(1.0 AS FLOAT) |
+--------------------+
|                1.0 |
+--------------------+

RETURN CAST('123' AS STRING);
+-----------------------+
| CAST('123' AS STRING) |
+-----------------------+
|                   123 |
+-----------------------+

RETURN CAST('123' AS INTEGER);
+------------------------+
| CAST('123' AS INTEGER) |
+------------------------+
|                    123 |
+------------------------+

RETURN CAST('123' AS LONG);
+---------------------+
| CAST('123' AS LONG) |
+---------------------+
|                 123 |
+---------------------+

RETURN CAST('123' AS BOOL);
+---------------------+
| CAST('123' AS BOOL) |
+---------------------+
|                true |
+---------------------+

RETURN CAST('123' AS DOUBLE);
+-----------------------+
| CAST('123' AS DOUBLE) |
+-----------------------+
|                 123.0 |
+-----------------------+

RETURN CAST('123' AS FLOAT);
+----------------------+
| CAST('123' AS FLOAT) |
+----------------------+
|                123.0 |
+----------------------+

RETURN CAST('2000-01-01' AS DATE);
+----------------------------+
| CAST('2000-01-01' AS DATE) |
+----------------------------+
|                 2000-01-01 |
+----------------------------+

RETURN CAST('2000-01-01 10:00:00' AS DATETIME);
+-----------------------------------------+
| CAST('2000-01-01 10:00:00' AS DATETIME) |
+-----------------------------------------+
|                     2000-01-01 10:00:00 |
+-----------------------------------------+

RETURN CAST('1' AS DATETIME);
+-----------------------+
| CAST('1' AS DATETIME) |
+-----------------------+
|                  null |
+-----------------------+

RETURN CAST(true AS STRING);
+----------------------+
| CAST(true AS STRING) |
+----------------------+
|                 true |
+----------------------+

RETURN CAST(true AS INTEGER);
+-----------------------+
| CAST(true AS INTEGER) |
+-----------------------+
|                     1 |
+-----------------------+

RETURN CAST(true AS LONG);
+--------------------+
| CAST(true AS LONG) |
+--------------------+
|                  1 |
+--------------------+

RETURN CAST(true AS BOOL);
+--------------------+
| CAST(true AS BOOL) |
+--------------------+
|               true |
+--------------------+

RETURN CAST(true AS DOUBLE);
+----------------------+
| CAST(true AS DOUBLE) |
+----------------------+
|                  1.0 |
+----------------------+

RETURN CAST(true AS FLOAT);
+---------------------+
| CAST(true AS FLOAT) |
+---------------------+
|                 1.0 |
+---------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_date AS STRING);
+--------------------------+
| CAST(n.p_date AS STRING) |
+--------------------------+
|               1970-01-01 |
+--------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_date AS DATE);
+------------------------+
| CAST(n.p_date AS DATE) |
+------------------------+
|             1970-01-01 |
+------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_date AS DATETIME);
+----------------------------+
| CAST(n.p_date AS DATETIME) |
+----------------------------+
|        1970-01-01 00:00:00 |
+----------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_datetime AS STRING);
+------------------------------+
| CAST(n.p_datetime AS STRING) |
+------------------------------+
|          1970-01-02 00:00:00 |
+------------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_datetime AS DATE);
+----------------------------+
| CAST(n.p_datetime AS DATE) |
+----------------------------+
|                 1970-01-02 |
+----------------------------+

MATCH (n:node6 {@id: 500001}) RETURN CAST(n.p_datetime AS DATETIME);
+--------------------------------+
| CAST(n.p_datetime AS DATETIME) |
+--------------------------------+
|            1970-01-02 00:00:00 |
+--------------------------------+

DELETE n MATCH (n:node6{@id:500001});

INSERT (n:node6{@id:300002, p_bool:true, p_boolean:false, p_tinyint:0, p_smallint:1, p_int:1, p_integer:1, p_long:2, p_bigint:3, p_float:1.0, p_double:1.0, p_string:"0", p_varchar:"1", p_date:"1970-01-01", p_datetime:"1970-01-02 00:00:00"});

RETURN TO_DATE("2017-09-25 10:00:00");
+--------------------------------+
| TO_DATE("2017-09-25 10:00:00") |
+--------------------------------+
|                     2017-09-25 |
+--------------------------------+

RETURN TO_DATE('2017-09-25');
+-----------------------+
| TO_DATE('2017-09-25') |
+-----------------------+
|            2017-09-25 |
+-----------------------+

RETURN TO_DATE('I am not a date');
+----------------------------+
| TO_DATE('I am not a date') |
+----------------------------+
|                       null |
+----------------------------+

RETURN TO_DATE('1998-03-90');
+-----------------------+
| TO_DATE('1998-03-90') |
+-----------------------+
|                  null |
+-----------------------+

MATCH(n:node6{@id:300002}) RETURN TO_DATE(n.p_varchar);
+----------------------+
| TO_DATE(n.p_varchar) |
+----------------------+
|                 null |
+----------------------+

MATCH(n:node6{@id:300002}) RETURN TO_DATE(n.p_string);
+---------------------+
| TO_DATE(n.p_string) |
+---------------------+
|                null |
+---------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd HH:mm:ss");
+-----------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd HH:mm:ss") |
+-----------------------------------------------------------+
|                                       1998-07-21 10:30:25 |
+-----------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd HH:mm:ss");
+-----------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd HH:mm:ss") |
+-----------------------------------------------------------+
|                                       1998/07/21 10:30:25 |
+-----------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd HH:mm:ss");
+---------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd HH:mm:ss") |
+---------------------------------------------------------+
|                                       19980721 10:30:25 |
+---------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd HH:mm");
+--------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd HH:mm") |
+--------------------------------------------------------+
|                                       1998-07-21 10:30 |
+--------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd HH:mm");
+--------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd HH:mm") |
+--------------------------------------------------------+
|                                       1998/07/21 10:30 |
+--------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd HH:mm");
+------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd HH:mm") |
+------------------------------------------------------+
|                                       19980721 10:30 |
+------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd HH");
+-----------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd HH") |
+-----------------------------------------------------+
|                                       1998-07-21 10 |
+-----------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd HH");
+-----------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd HH") |
+-----------------------------------------------------+
|                                       1998/07/21 10 |
+-----------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd HH");
+---------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd HH") |
+---------------------------------------------------+
|                                       19980721 10 |
+---------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd");
+--------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM-dd") |
+--------------------------------------------------+
|                                       1998-07-21 |
+--------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd");
+--------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM/dd") |
+--------------------------------------------------+
|                                       1998/07/21 |
+--------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd");
+------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyyMMdd") |
+------------------------------------------------+
|                                       19980721 |
+------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM");
+-----------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy-MM") |
+-----------------------------------------------+
|                                       1998-07 |
+-----------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM");
+-----------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyy/MM") |
+-----------------------------------------------+
|                                       1998/07 |
+-----------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "yyyyMM");
+----------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "yyyyMM") |
+----------------------------------------------+
|                                       199807 |
+----------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy-MM-dd HH:mm:ss");
+--------------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy-MM-dd HH:mm:ss") |
+--------------------------------------------------+
|                              1998-07-21 00:00:00 |
+--------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy/MM/dd HH:mm:ss");
+--------------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy/MM/dd HH:mm:ss") |
+--------------------------------------------------+
|                              1998/07/21 00:00:00 |
+--------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyyMMdd HH:mm:ss");
+------------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyyMMdd HH:mm:ss") |
+------------------------------------------------+
|                              19980721 00:00:00 |
+------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy-MM-dd HH:mm");
+-----------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy-MM-dd HH:mm") |
+-----------------------------------------------+
|                              1998-07-21 00:00 |
+-----------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy/MM/dd HH:mm");
+-----------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy/MM/dd HH:mm") |
+-----------------------------------------------+
|                              1998/07/21 00:00 |
+-----------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyyMMdd HH:mm");
+---------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyyMMdd HH:mm") |
+---------------------------------------------+
|                              19980721 00:00 |
+---------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy-MM-dd HH");
+--------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy-MM-dd HH") |
+--------------------------------------------+
|                              1998-07-21 00 |
+--------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy/MM/dd HH");
+--------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy/MM/dd HH") |
+--------------------------------------------+
|                              1998/07/21 00 |
+--------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyyMMdd HH");
+------------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyyMMdd HH") |
+------------------------------------------+
|                              19980721 00 |
+------------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy-MM-dd");
+-----------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy-MM-dd") |
+-----------------------------------------+
|                              1998-07-21 |
+-----------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy/MM/dd");
+-----------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy/MM/dd") |
+-----------------------------------------+
|                              1998/07/21 |
+-----------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyyMMdd");
+---------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyyMMdd") |
+---------------------------------------+
|                              19980721 |
+---------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy-MM");
+--------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy-MM") |
+--------------------------------------+
|                              1998-07 |
+--------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyy/MM");
+--------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyy/MM") |
+--------------------------------------+
|                              1998/07 |
+--------------------------------------+

RETURN DATE_FORMAT("1998-07-21", "yyyyMM");
+-------------------------------------+
| DATE_FORMAT("1998-07-21", "yyyyMM") |
+-------------------------------------+
|                              199807 |
+-------------------------------------+

RETURN DATE_FORMAT("I am not a datetime", "yyyy-MM-dd HH:mm:ss");
+-----------------------------------------------------------+
| DATE_FORMAT("I am not a datetime", "yyyy-MM-dd HH:mm:ss") |
+-----------------------------------------------------------+
|                                                      null |
+-----------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "I am a datetime:yyyy-MM-dd HH:mm:ss");
+---------------------------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "I am a datetime:yyyy-MM-dd HH:mm:ss") |
+---------------------------------------------------------------------------+
|                                       I am a datetime:yyyy-MM-dd HH:mm:ss |
+---------------------------------------------------------------------------+

RETURN DATE_FORMAT("1998-07-21 10:30:25", "erroryyy-M-d HH:mm:ss");
+-------------------------------------------------------------+
| DATE_FORMAT("1998-07-21 10:30:25", "erroryyy-M-d HH:mm:ss") |
+-------------------------------------------------------------+
|                                       erroryyy-M-d HH:mm:ss |
+-------------------------------------------------------------+

match(n:node6{@id:300002}) RETURN FROM_UNIXTIME(n.p_tinyint);
+----------------------------+
| FROM_UNIXTIME(n.p_tinyint) |
+----------------------------+
|        1970-01-01 00:00:00 |
+----------------------------+

match(n:node6{@id:300002}) RETURN FROM_UNIXTIME(n.p_smallint);
+-----------------------------+
| FROM_UNIXTIME(n.p_smallint) |
+-----------------------------+
|         1970-01-01 00:00:01 |
+-----------------------------+

match(n:node6{@id:300002}) RETURN FROM_UNIXTIME(n.p_int);
+------------------------+
| FROM_UNIXTIME(n.p_int) |
+------------------------+
|    1970-01-01 00:00:01 |
+------------------------+

match(n:node6{@id:300002}) RETURN FROM_UNIXTIME(n.p_integer);
+----------------------------+
| FROM_UNIXTIME(n.p_integer) |
+----------------------------+
|        1970-01-01 00:00:01 |
+----------------------------+

match(n:node6{@id:300002}) RETURN FROM_UNIXTIME(n.p_long);
+-------------------------+
| FROM_UNIXTIME(n.p_long) |
+-------------------------+
|     1970-01-01 00:00:02 |
+-------------------------+

match(n:node6{@id:300002}) RETURN FROM_UNIXTIME(n.p_bigint);
+---------------------------+
| FROM_UNIXTIME(n.p_bigint) |
+---------------------------+
|       1970-01-01 00:00:03 |
+---------------------------+

RETURN FROM_UNIXTIME(1508234732);
+---------------------------+
| FROM_UNIXTIME(1508234732) |
+---------------------------+
|       2017-10-17 10:05:32 |
+---------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy-MM-dd HH:mm:ss");
+--------------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy-MM-dd HH:mm:ss") |
+--------------------------------------------------+
|                              2017-10-17 10:05:32 |
+--------------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy/MM/dd HH:mm:ss");
+--------------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy/MM/dd HH:mm:ss") |
+--------------------------------------------------+
|                              2017/10/17 10:05:32 |
+--------------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyyMMdd HH:mm:ss");
+------------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyyMMdd HH:mm:ss") |
+------------------------------------------------+
|                              20171017 10:05:32 |
+------------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy-MM-dd HH:mm");
+-----------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy-MM-dd HH:mm") |
+-----------------------------------------------+
|                              2017-10-17 10:05 |
+-----------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy/MM/dd HH:mm");
+-----------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy/MM/dd HH:mm") |
+-----------------------------------------------+
|                              2017/10/17 10:05 |
+-----------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyyMMdd HH:mm");
+---------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyyMMdd HH:mm") |
+---------------------------------------------+
|                              20171017 10:05 |
+---------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy-MM-dd HH");
+--------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy-MM-dd HH") |
+--------------------------------------------+
|                              2017-10-17 10 |
+--------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy/MM/dd HH");
+--------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy/MM/dd HH") |
+--------------------------------------------+
|                              2017/10/17 10 |
+--------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyyMMdd HH");
+------------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyyMMdd HH") |
+------------------------------------------+
|                              20171017 10 |
+------------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy-MM-dd");
+-----------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy-MM-dd") |
+-----------------------------------------+
|                              2017-10-17 |
+-----------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy/MM/dd");
+-----------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy/MM/dd") |
+-----------------------------------------+
|                              2017/10/17 |
+-----------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyyMMdd");
+---------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyyMMdd") |
+---------------------------------------+
|                              20171017 |
+---------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy-MM");
+--------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy-MM") |
+--------------------------------------+
|                              2017-10 |
+--------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyy/MM");
+--------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyy/MM") |
+--------------------------------------+
|                              2017/10 |
+--------------------------------------+

RETURN FROM_UNIXTIME(1508234732, "yyyyMM");
+-------------------------------------+
| FROM_UNIXTIME(1508234732, "yyyyMM") |
+-------------------------------------+
|                              201710 |
+-------------------------------------+

RETURN FROM_UNIXTIME(253402300799);
+-----------------------------+
| FROM_UNIXTIME(253402300799) |
+-----------------------------+
|         9999-12-31 23:59:59 |
+-----------------------------+

RETURN FROM_UNIXTIME(253402300800);
+-----------------------------+
| FROM_UNIXTIME(253402300800) |
+-----------------------------+
|                        null |
+-----------------------------+

RETURN UNIX_TIMESTAMP('2017-10-17 10:05:32');
+---------------------------------------+
| UNIX_TIMESTAMP('2017-10-17 10:05:32') |
+---------------------------------------+
|                            1508234732 |
+---------------------------------------+

RETURN UNIX_TIMESTAMP('2017-10-17');
+------------------------------+
| UNIX_TIMESTAMP('2017-10-17') |
+------------------------------+
|                   1508198400 |
+------------------------------+

RETURN UNIX_TIMESTAMP('2017-10-17 00:00:00');
+---------------------------------------+
| UNIX_TIMESTAMP('2017-10-17 00:00:00') |
+---------------------------------------+
|                            1508198400 |
+---------------------------------------+

match(n:node6{@id:300002}) RETURN UNIX_TIMESTAMP(n.p_varchar);
+-----------------------------+
| UNIX_TIMESTAMP(n.p_varchar) |
+-----------------------------+
|                        null |
+-----------------------------+

match(n:node6{@id:300002}) RETURN UNIX_TIMESTAMP(n.p_string);
+----------------------------+
| UNIX_TIMESTAMP(n.p_string) |
+----------------------------+
|                       null |
+----------------------------+

RETURN UNIX_TIMESTAMP('2017-10-17 80:00:00');
+---------------------------------------+
| UNIX_TIMESTAMP('2017-10-17 80:00:00') |
+---------------------------------------+
|                                  null |
+---------------------------------------+

RETURN UNIX_TIMESTAMP('9999-12-31 23:59:59');
+---------------------------------------+
| UNIX_TIMESTAMP('9999-12-31 23:59:59') |
+---------------------------------------+
|                          253402300799 |
+---------------------------------------+

RETURN DATE_DIFF("2017-09-10", "2017-09-25");
+---------------------------------------+
| DATE_DIFF("2017-09-10", "2017-09-25") |
+---------------------------------------+
|                                   -15 |
+---------------------------------------+

RETURN DATE_DIFF("2007-12-31", "1970-01-01");
+---------------------------------------+
| DATE_DIFF("2007-12-31", "1970-01-01") |
+---------------------------------------+
|                                 13878 |
+---------------------------------------+

RETURN DATE_DIFF("2010-11-30 23:59:59","2010-12-31");
+-----------------------------------------------+
| DATE_DIFF("2010-11-30 23:59:59","2010-12-31") |
+-----------------------------------------------+
|                                           -31 |
+-----------------------------------------------+

RETURN DATE_DIFF("2008-01-01", "2007-12-31 23:59:59");
+------------------------------------------------+
| DATE_DIFF("2008-01-01", "2007-12-31 23:59:59") |
+------------------------------------------------+
|                                              1 |
+------------------------------------------------+

RETURN DATE_DIFF("2007-12-31 01:01:01", "2007-12-31 23:59:59");
+---------------------------------------------------------+
| DATE_DIFF("2007-12-31 01:01:01", "2007-12-31 23:59:59") |
+---------------------------------------------------------+
|                                                       0 |
+---------------------------------------------------------+

RETURN DATE_ADD("2018-05-01", 1);
+---------------------------+
| DATE_ADD("2018-05-01", 1) |
+---------------------------+
|                2018-05-02 |
+---------------------------+

RETURN DATE_ADD("2018-05-01", -1);
+----------------------------+
| DATE_ADD("2018-05-01", -1) |
+----------------------------+
|                 2018-04-30 |
+----------------------------+

RETURN DATE_ADD("2018-05-01", 100);
+-----------------------------+
| DATE_ADD("2018-05-01", 100) |
+-----------------------------+
|                  2018-08-09 |
+-----------------------------+

RETURN DATE_ADD("2018-05-01", -100);
+------------------------------+
| DATE_ADD("2018-05-01", -100) |
+------------------------------+
|                   2018-01-21 |
+------------------------------+

RETURN DATE_ADD("2018-05-01", 2915244);
+---------------------------------+
| DATE_ADD("2018-05-01", 2915244) |
+---------------------------------+
|                      9999-12-31 |
+---------------------------------+

RETURN DATE_ADD("2018-05-01", 2915245);
+---------------------------------+
| DATE_ADD("2018-05-01", 2915245) |
+---------------------------------+
|                            null |
+---------------------------------+

RETURN DATE_ADD("2018-05-01 15:45:00", 1);
+------------------------------------+
| DATE_ADD("2018-05-01 15:45:00", 1) |
+------------------------------------+
|                2018-05-02 15:45:00 |
+------------------------------------+

RETURN DATE_ADD("2018-05-01 15:45:00", -1);
+-------------------------------------+
| DATE_ADD("2018-05-01 15:45:00", -1) |
+-------------------------------------+
|                 2018-04-30 15:45:00 |
+-------------------------------------+

RETURN DATE_ADD("2018-05-01 15:45:00", 100);
+--------------------------------------+
| DATE_ADD("2018-05-01 15:45:00", 100) |
+--------------------------------------+
|                  2018-08-09 15:45:00 |
+--------------------------------------+

RETURN DATE_ADD("2018-05-01 15:45:00", -100);
+---------------------------------------+
| DATE_ADD("2018-05-01 15:45:00", -100) |
+---------------------------------------+
|                   2018-01-21 15:45:00 |
+---------------------------------------+

RETURN DATE_ADD("2018-05-01 15:45:00", 2915244);
+------------------------------------------+
| DATE_ADD("2018-05-01 15:45:00", 2915244) |
+------------------------------------------+
|                      9999-12-31 15:45:00 |
+------------------------------------------+

RETURN DATE_ADD("2018-05-01 15:45:00", 2915245);
+------------------------------------------+
| DATE_ADD("2018-05-01 15:45:00", 2915245) |
+------------------------------------------+
|                                     null |
+------------------------------------------+

RETURN DATE_SUB("2018-05-01", 1);
+---------------------------+
| DATE_SUB("2018-05-01", 1) |
+---------------------------+
|                2018-04-30 |
+---------------------------+

RETURN DATE_SUB("2018-05-01", -1);
+----------------------------+
| DATE_SUB("2018-05-01", -1) |
+----------------------------+
|                 2018-05-02 |
+----------------------------+

RETURN DATE_SUB("2018-05-01", 100);
+-----------------------------+
| DATE_SUB("2018-05-01", 100) |
+-----------------------------+
|                  2018-01-21 |
+-----------------------------+

RETURN DATE_SUB("2018-05-01", -100);
+------------------------------+
| DATE_SUB("2018-05-01", -100) |
+------------------------------+
|                   2018-08-09 |
+------------------------------+

RETURN DATE_SUB("2018-05-01", 737180);
+--------------------------------+
| DATE_SUB("2018-05-01", 737180) |
+--------------------------------+
|                     0000-01-01 |
+--------------------------------+

RETURN DATE_SUB("2018-05-01", 737181);
+--------------------------------+
| DATE_SUB("2018-05-01", 737181) |
+--------------------------------+
|                           null |
+--------------------------------+

RETURN DATE_SUB("2018-05-01 15:45:00", 1);
+------------------------------------+
| DATE_SUB("2018-05-01 15:45:00", 1) |
+------------------------------------+
|                2018-04-30 15:45:00 |
+------------------------------------+

RETURN DATE_SUB("2018-05-01 15:45:00", -1);
+-------------------------------------+
| DATE_SUB("2018-05-01 15:45:00", -1) |
+-------------------------------------+
|                 2018-05-02 15:45:00 |
+-------------------------------------+

RETURN DATE_SUB("2018-05-01 15:45:00", 100);
+--------------------------------------+
| DATE_SUB("2018-05-01 15:45:00", 100) |
+--------------------------------------+
|                  2018-01-21 15:45:00 |
+--------------------------------------+

RETURN DATE_SUB("2018-05-01 15:45:00", -100);
+---------------------------------------+
| DATE_SUB("2018-05-01 15:45:00", -100) |
+---------------------------------------+
|                   2018-08-09 15:45:00 |
+---------------------------------------+

RETURN DATE_SUB("2018-05-01 15:45:00", 737180);
+-----------------------------------------+
| DATE_SUB("2018-05-01 15:45:00", 737180) |
+-----------------------------------------+
|                     0000-01-01 15:45:00 |
+-----------------------------------------+

RETURN DATE_SUB("2018-05-01 15:45:00", 737181);
+-----------------------------------------+
| DATE_SUB("2018-05-01 15:45:00", 737181) |
+-----------------------------------------+
|                                    null |
+-----------------------------------------+

DELETE n MATCH (n:node6{@id:300002});

MATCH (n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN id(m), m.@id, timestamp(r), r.@timestamp;
+-------+-------+--------------+--------------+
| id(m) | m.@id | timestamp(r) | r.@timestamp |
+-------+-------+--------------+--------------+
|    10 |    10 |            0 |            0 |
|    11 |    11 |            0 |            0 |
|    12 |    12 |            0 |            0 |
+-------+-------+--------------+--------------+

MATCH (n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN CAST(id(m) AS STRING), CAST(timestamp(r) AS STRING);
+-----------------------+------------------------------+
| CAST(id(m) AS STRING) | CAST(timestamp(r) AS STRING) |
+-----------------------+------------------------------+
|                    10 |                            0 |
|                    11 |                            0 |
|                    12 |                            0 |
+-----------------------+------------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN m.xxx;
+-------+
| m.xxx |
+-------+
|  null |
|  null |
|  null |
+-------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(m.xxx);
+-----------------+
| coalesce(m.xxx) |
+-----------------+
|            null |
|            null |
|            null |
+-----------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(m.xxx, 1);
+--------------------+
| coalesce(m.xxx, 1) |
+--------------------+
|                  1 |
|                  1 |
|                  1 |
+--------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(m.xxx, m.@id);
+------------------------+
| coalesce(m.xxx, m.@id) |
+------------------------+
|                     10 |
|                     11 |
|                     12 |
+------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(1, m.xxx);
+--------------------+
| coalesce(1, m.xxx) |
+--------------------+
|                  1 |
|                  1 |
|                  1 |
+--------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(m.@id, m.xxx);
+------------------------+
| coalesce(m.@id, m.xxx) |
+------------------------+
|                     10 |
|                     11 |
|                     12 |
+------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(m.xxx, m.yyy, m.zzz);
+-------------------------------+
| coalesce(m.xxx, m.yyy, m.zzz) |
+-------------------------------+
|                          null |
|                          null |
|                          null |
+-------------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(m.xxx, m.yyy, 1, m.zzz);
+----------------------------------+
| coalesce(m.xxx, m.yyy, 1, m.zzz) |
+----------------------------------+
|                                1 |
|                                1 |
|                                1 |
+----------------------------------+

match (n:node1 {@id:1})-[e:edge_n1_n2]->(m:node2) RETURN coalesce(m.xxx, m.yyy, m.@id, m.zzz);
+--------------------------------------+
| coalesce(m.xxx, m.yyy, m.@id, m.zzz) |
+--------------------------------------+
|                                   10 |
|                                   11 |
|                                   12 |
+--------------------------------------+

INSERT (n:node6{@id:300001, p_bool:true, p_boolean:true, p_tinyint:1, p_smallint:1, p_int:1, p_integer:1, p_long:1, p_bigint:1, p_float:1, p_double:1, p_string:"1", p_varchar:"1", p_date:"1970-01-01", p_datetime:"1970-01-01 00:00:00"});

RETURN NULLIF(5, 5);
+--------------+
| NULLIF(5, 5) |
+--------------+
|         null |
+--------------+

RETURN NULLIF(5, 0);
+--------------+
| NULLIF(5, 0) |
+--------------+
|            5 |
+--------------+

MATCH(n:node6{@id:300001}) RETURN NULLIF(n.p_bool, n.p_boolean);
+-------------------------------+
| NULLIF(n.p_bool, n.p_boolean) |
+-------------------------------+
|                          null |
+-------------------------------+

MATCH(n:node6{@id:300001}) RETURN NULLIF(n.p_bool, n.p_integer);
+-------------------------------+
| NULLIF(n.p_bool, n.p_integer) |
+-------------------------------+
|                          null |
+-------------------------------+

MATCH(n:node6{@id:300001}) RETURN NULLIF(n.p_bool, n.p_datetime);
+--------------------------------+
| NULLIF(n.p_bool, n.p_datetime) |
+--------------------------------+
|                              1 |
+--------------------------------+

MATCH(n:node6{@id:300001}) RETURN NULLIF(n.p_double, n.p_date);
+------------------------------+
| NULLIF(n.p_double, n.p_date) |
+------------------------------+
|                          1.0 |
+------------------------------+

MATCH(n:node6{@id:300001}) RETURN NULLIF(n.p_string, n.p_varchar);
+---------------------------------+
| NULLIF(n.p_string, n.p_varchar) |
+---------------------------------+
|                            null |
+---------------------------------+

MATCH(n:node6{@id:300001}) RETURN NULLIF(n.p_date, n.p_datetime);
+--------------------------------+
| NULLIF(n.p_date, n.p_datetime) |
+--------------------------------+
|                           null |
+--------------------------------+

RETURN NULLIF(toDate("1970-01-01"), toDateTime("1970-01-01 00:00:01"));
+-----------------------------------------------------------------+
| NULLIF(toDate("1970-01-01"), toDateTime("1970-01-01 00:00:01")) |
+-----------------------------------------------------------------+
|                                                      1970-01-01 |
+-----------------------------------------------------------------+

RETURN ISNULL(5);
+-----------+
| ISNULL(5) |
+-----------+
|     false |
+-----------+

MATCH(n:node6{@id:300001}) RETURN ISNULL(n.p_bool);
+------------------+
| ISNULL(n.p_bool) |
+------------------+
|            false |
+------------------+

MATCH(n:node6{@id:300001}) RETURN ISNULL(n.p_integer);
+---------------------+
| ISNULL(n.p_integer) |
+---------------------+
|               false |
+---------------------+

MATCH(n:node6{@id:300001}) RETURN ISNULL(n.not_exist);
+---------------------+
| ISNULL(n.not_exist) |
+---------------------+
|                true |
+---------------------+

MATCH(n:node6{@id:300001}) RETURN ISNULL(toDate("1970-01-01"));
+------------------------------+
| ISNULL(toDate("1970-01-01")) |
+------------------------------+
|                        false |
+------------------------------+

DELETE n MATCH (n:node6{@id:300001});

RETURN (1 <=> 1) <=> 1;
+-----------------+
| (1 <=> 1) <=> 1 |
+-----------------+
|            true |
+-----------------+

RETURN 1 <=> (1 <=> 1);
+-----------------+
| 1 <=> (1 <=> 1) |
+-----------------+
|            true |
+-----------------+

RETURN (1 <=> 1) <=> (1 <=> 1);
+-------------------------+
| (1 <=> 1) <=> (1 <=> 1) |
+-------------------------+
|                    true |
+-------------------------+

MATCH (n where @id = 1)
RETURN n, n.p_long, n.p_string, n.p_long = n.not_exist2, n.p_long <=> n.not_exist2, n.not_exist1 <=> n.not_exist2;
+-----------+----------+------------+-------------------------+---------------------------+-------------------------------+
|         n | n.p_long | n.p_string | n.p_long = n.not_exist2 | n.p_long <=> n.not_exist2 | n.not_exist1 <=> n.not_exist2 |
+-----------+----------+------------+-------------------------+---------------------------+-------------------------------+
| (1:node1) |        1 |          1 |                    null |                      null |                          true |
+-----------+----------+------------+-------------------------+---------------------------+-------------------------------+

MATCH (n where @id = 1) WHERE n.p_long = n.not_exist2
RETURN n, n.p_long, n.p_string;

MATCH (n where @id = 1) WHERE n.p_long <=> n.not_exist2
RETURN n, n.p_long, n.p_string;

MATCH (n where @id = 1) WHERE n.not_exist1 <=> n.not_exist2
RETURN n, n.p_long, n.p_string;
+-----------+----------+------------+
|         n | n.p_long | n.p_string |
+-----------+----------+------------+
| (1:node1) |        1 |          1 |
+-----------+----------+------------+

MATCH (n where @id = 1) WHERE n.p_string <=> "1"
RETURN n, n.p_long, n.p_string;
+-----------+----------+------------+
|         n | n.p_long | n.p_string |
+-----------+----------+------------+
| (1:node1) |        1 |          1 |
+-----------+----------+------------+

RETURN if(true, 5, 6);
+----------------+
| if(true, 5, 6) |
+----------------+
|              5 |
+----------------+

RETURN if(false, 5, 6);
+-----------------+
| if(false, 5, 6) |
+-----------------+
|               6 |
+-----------------+

MATCH (n where @id = 1)
RETURN n, n.p_long, n.p_double, n.p_string, if(n.p_long, n.p_double, n.p_string);
+-----------+----------+------------+------------+--------------------------------------+
|         n | n.p_long | n.p_double | n.p_string | if(n.p_long, n.p_double, n.p_string) |
+-----------+----------+------------+------------+--------------------------------------+
| (1:node1) |        1 |        0.5 |          1 |                                  0.5 |
+-----------+----------+------------+------------+--------------------------------------+

return 1 % 0;
+-------+
| 1 % 0 |
+-------+
|  null |
+-------+

return 1 MOD 0;
+---------+
| 1 MOD 0 |
+---------+
|    null |
+---------+

return true and false or true;
+------------------------+
| true and false or true |
+------------------------+
|                   true |
+------------------------+

return false and false or true;
+-------------------------+
| false and false or true |
+-------------------------+
|                    true |
+-------------------------+

return false or false and false;
+--------------------------+
| false or false and false |
+--------------------------+
|                    false |
+--------------------------+

return true or false and true;
+------------------------+
| true or false and true |
+------------------------+
|                   true |
+------------------------+

return true and false and true;
+-------------------------+
| true and false and true |
+-------------------------+
|                   false |
+-------------------------+

return 1 + 2 * 3;
+-----------+
| 1 + 2 * 3 |
+-----------+
|         7 |
+-----------+

return 1 - 2 - 3;
+-----------+
| 1 - 2 - 3 |
+-----------+
|        -4 |
+-----------+

return 1 - 2 + 3;
+-----------+
| 1 - 2 + 3 |
+-----------+
|         2 |
+-----------+

return 2 / 1 - 1;
+-----------+
| 2 / 1 - 1 |
+-----------+
|       1.0 |
+-----------+

return 2 / 1 * 2;
+-----------+
| 2 / 1 * 2 |
+-----------+
|       4.0 |
+-----------+

return 2 * 3 / 3;
+-----------+
| 2 * 3 / 3 |
+-----------+
|       2.0 |
+-----------+

return 1 != !1;
+---------+
| 1 != !1 |
+---------+
|    true |
+---------+

return 0 = !1;
+--------+
| 0 = !1 |
+--------+
|   true |
+--------+

return mod(1, 0);
+-----------+
| mod(1, 0) |
+-----------+
|      null |
+-----------+

return mod(7, 3);
+-----------+
| mod(7, 3) |
+-----------+
|         1 |
+-----------+

return mod(2.3, 1.2);
+---------------+
| mod(2.3, 1.2) |
+---------------+
|       1.10000 |
+---------------+

return mod(1.8, 0.000000001);
+-----------------------+
| mod(1.8, 0.000000001) |
+-----------------------+
|                  null |
+-----------------------+

return mod(1.8, 0);
+-------------+
| mod(1.8, 0) |
+-------------+
|        null |
+-------------+

return 1/null;
+--------+
| 1/null |
+--------+
|   null |
+--------+

return null / 0;
+----------+
| null / 0 |
+----------+
|     null |
+----------+

MATCH (a where @id in (1, 10, 11, 12))-[r]->(b) where a.@id not in(1, 11) RETURN a.@id,a.@node_type,r.p_string,b.@id;
+-------+--------------+------------+-------+
| a.@id | a.@node_type | r.p_string | b.@id |
+-------+--------------+------------+-------+
|    12 |        node2 |    12->120 |   120 |
|    12 |        node2 |    12->121 |   121 |
|    12 |        node2 |    12->122 |   122 |
|    10 |        node2 |    10->100 |   100 |
|    10 |        node2 |    10->101 |   101 |
|    10 |        node2 |    10->102 |   102 |
+-------+--------------+------------+-------+

MATCH (a where @id in (1, 10, 11, 12))-[r]->(b) where a.@id not in(1, 10, 11, 12) RETURN a.@id,a.@node_type,r.p_string,b.@id;

MATCH (a where @id in (1, 10, 11, 12))-[r]->(b) where a.@id not in(1, 12, 13, 14, 100, 110, 120) RETURN a.@id,a.@node_type,r.p_string,b.@id;
+-------+--------------+------------+-------+
| a.@id | a.@node_type | r.p_string | b.@id |
+-------+--------------+------------+-------+
|    10 |        node2 |    10->100 |   100 |
|    10 |        node2 |    10->101 |   101 |
|    10 |        node2 |    10->102 |   102 |
|    11 |        node2 |    11->110 |   110 |
|    11 |        node2 |    11->111 |   111 |
|    11 |        node2 |    11->112 |   112 |
+-------+--------------+------------+-------+

MATCH (n where @id in [-1]) RETURN n;

MATCH (n where @id in (-1)) RETURN n;

MATCH (n where @id in (-1, 1, ABS(-10))) RETURN n;
+------------+
|          n |
+------------+
| (10:node2) |
|  (1:node1) |
+------------+

MATCH (n where @id in [-1, 1, ABS(-10), -12]) RETURN n;
+------------+
|          n |
+------------+
| (10:node2) |
|  (1:node1) |
+------------+

MATCH (n where @id in [-1, 1, ABS(-10), -12])
RETURN n,
CASE n.@id
WHEN 1 THEN [-1, -2, n.p_string]
ELSE [-9, 10, 5, n.p_long]
END AS res;
+------------+--------------+
|          n |          res |
+------------+--------------+
| (10:node2) | [-9,10,5,10] |
|  (1:node1) |    [-1,-2,1] |
+------------+--------------+

return LIST[];
+--------+
| LIST[] |
+--------+
|     [] |
+--------+

return LIST[1];
+---------+
| LIST[1] |
+---------+
|     [1] |
+---------+

return LIST[1,2];
+-----------+
| LIST[1,2] |
+-----------+
|     [1,2] |
+-----------+

return LIST["hello", "world", 2.3, 100];
+----------------------------------+
| LIST["hello", "world", 2.3, 100] |
+----------------------------------+
|            [hello,world,2.3,100] |
+----------------------------------+

return LIST[2.3];
+-----------+
| LIST[2.3] |
+-----------+
|     [2.3] |
+-----------+

SELECT n MATCH (n where @id in (-1));

SELECT n MATCH (n where @id in (-1, 1, ABS(-10)));
+------------+
|          n |
+------------+
| (10:node2) |
|  (1:node1) |
+------------+

SELECT n MATCH (n where @id in (-1, 1, ABS(-10), -12));
+------------+
|          n |
+------------+
| (10:node2) |
|  (1:node1) |
+------------+

SELECT n, CASE n.@id WHEN 1 THEN [-1, -2, n.p_string] ELSE [-9, 10, 5, n.p_long] END AS res MATCH (n where @id in [-1, 1, ABS(-10), -12]);
+------------+--------------+
|          n |          res |
+------------+--------------+
| (10:node2) | [-9,10,5,10] |
|  (1:node1) |    [-1,-2,1] |
+------------+--------------+

--error 106
RETURN IF(NULL);

--error 106
RETURN IF(NULL), 1 + 2;

--error 106
RETURN IF(5);

--error 106
RETURN IF(5, 3, 3, 2);

--error 106
RETURN LENGTH();

--error 106
RETURN RANGE();

--error 106
RETURN NOW(3);

--error 106
RETURN COALESCE();

--error 106
RETURN FROM_UNIXTIME(1508234732, "yyyyMM", 2);

--error 106
RETURN FROM_UNIXTIME();

--error 106
RETURN NULLIF(NULL);

--error 106
RETURN LENGTH(NULL);

RETURN GeoDistance(116.45, 39.941, 116.451, 39.94);
+---------------------------------------------+
| GeoDistance(116.45, 39.941, 116.451, 39.94) |
+---------------------------------------------+
|                                   140.11652 |
+---------------------------------------------+

RETURN GeoDistance(-73.974122, 40.746924, -73.974122, 40.744924);
+-----------------------------------------------------------+
| GeoDistance(-73.974122, 40.746924, -73.974122, 40.744924) |
+-----------------------------------------------------------+
|                                                 222.38986 |
+-----------------------------------------------------------+

RETURN GeoDistance(115.392907, 23.062364, 115.392610, 23.061104);
+-----------------------------------------------------------+
| GeoDistance(115.392907, 23.062364, 115.392610, 23.061104) |
+-----------------------------------------------------------+
|                                                 143.36274 |
+-----------------------------------------------------------+

RETURN GeoDistance(116, 39, 116, 40);
+-------------------------------+
| GeoDistance(116, 39, 116, 40) |
+-------------------------------+
|                  111194.92664 |
+-------------------------------+
