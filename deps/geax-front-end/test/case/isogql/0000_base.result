MATCH (n:node1 {@id: 1})
RETURN n.p_long;
+----------+
| n.p_long |
+----------+
|        1 |
+----------+

MATCH(n:node1 where @id=1)
RETURN n.p_long;
+----------+
| n.p_long |
+----------+
|        1 |
+----------+

MATCH (node1 {@id:1}) RETURN node1.@id,node1.p_long;
+-----------+--------------+
| node1.@id | node1.p_long |
+-----------+--------------+
|         1 |            1 |
+-----------+--------------+

MATCH (node1 {@id:1,p_long:1}) RETURN node1.@id,node1.p_long;
+-----------+--------------+
| node1.@id | node1.p_long |
+-----------+--------------+
|         1 |            1 |
+-----------+--------------+

MATCH (node1 {@id:1,p_long:1,p_long:2}) RETURN node1.@id,node1.p_long;

MATCH(n:node1 where @id=1)
RETURN n.p_long, n;
+----------+-----------+
| n.p_long |         n |
+----------+-----------+
|        1 | (1:node1) |
+----------+-----------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
|        1 |    12 |
+----------+-------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN n.p_long, m.@id group by n.p_long;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
+----------+-------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN n.p_long, m.@id group by 1;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
+----------+-------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2 PER_NODE_LIMIT(2)]->(m)
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
+----------+-------+

MATCH(:node1 {@id: 1})-[r:edge_n1_n2]->(:node2 where @id = 12)
RETURN r.@src_id, r.@dst_id;
+-----------+-----------+
| r.@src_id | r.@dst_id |
+-----------+-----------+
|         1 |        12 |
+-----------+-----------+

MATCH(:node1 {@id: 1})-[:edge_n1_n2]->(:node2 where @id = 12)
RETURN 100;
+-----+
| 100 |
+-----+
| 100 |
+-----+

MATCH(:node1 {@id: 1})-[r:edge_n1_n2]->(:node2 where @id != 12)
RETURN r.@src_id, r.@dst_id;
+-----------+-----------+
| r.@src_id | r.@dst_id |
+-----------+-----------+
|         1 |        10 |
|         1 |        11 |
+-----------+-----------+

match (n where @id in (1, 10, 11,12, 13))
return n, n.p_long;
+------------+----------+
|          n | n.p_long |
+------------+----------+
| (12:node2) |       12 |
| (10:node2) |       10 |
| (11:node2) |       11 |
|  (1:node1) |        1 |
+------------+----------+

MATCH (n:node1 {@id: 1}) RETURN /*+ read_consistency( none ) */ 1, n.p_long;
+---+----------+
| 1 | n.p_long |
+---+----------+
| 1 |        1 |
+---+----------+

MATCH (n:node1 {@id: 1}) RETURN /*+ read_consistency( strong ) */ 1, n.p_long;
+---+----------+
| 1 | n.p_long |
+---+----------+
| 1 |        1 |
+---+----------+

MATCH (n:node1 {@id: 1}) RETURN /*+ read_consistency( weak ) */ 1, n.p_long;
+---+----------+
| 1 | n.p_long |
+---+----------+
| 1 |        1 |
+---+----------+

MATCH (n:node1 {@id: 1}) RETURN /*+ read_consistency( non_spread ) */ 1, n.p_long;
+---+----------+
| 1 | n.p_long |
+---+----------+
| 1 |        1 |
+---+----------+

MATCH (n:node1 {@id: 1})
RETURN /*+ read_consistency(none), read_consistency(strong) */ 1, n.p_long;
+---+----------+
| 1 | n.p_long |
+---+----------+
| 1 |        1 |
+---+----------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       11 |      1->10 |        5.5 |    10 |
|     1 |       12 |      1->11 |        6.0 |    11 |
|     1 |       13 |      1->12 |        6.5 |    12 |
+-------+----------+------------+------------+-------+

MATCH p = (n:node1 where @id = 1)-[r]->(m)
RETURN p;
+---------------------------------------+
|                                     p |
+---------------------------------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2) |
+---------------------------------------+

MATCH p = (n:node1 where @id = 1)-[r]->(m)
RETURN p, m;
+---------------------------------------+------------+
|                                     p |          m |
+---------------------------------------+------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2) | (10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2) | (11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2) | (12:node2) |
+---------------------------------------+------------+

MATCH p = (n:node1 where @id = 999)-[r]->(m) RETURN p;

MATCH p = (n:node1 where @id = 1)-[r]->(m) RETURN p, n;
+---------------------------------------+-----------+
|                                     p |         n |
+---------------------------------------+-----------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2) | (1:node1) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2) | (1:node1) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2) | (1:node1) |
+---------------------------------------+-----------+

MATCH p = (n:node1 where @id = 1)-[r]->(m) RETURN p, n, m;
+---------------------------------------+-----------+------------+
|                                     p |         n |          m |
+---------------------------------------+-----------+------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2) | (1:node1) | (10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2) | (1:node1) | (11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2) | (1:node1) | (12:node2) |
+---------------------------------------+-----------+------------+

MATCH p = (n:node1 where @id = 1)-[r]->(m) RETURN p, r;
+---------------------------------------+---------------------------+
|                                     p |                         r |
+---------------------------------------+---------------------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2) | (1)-[:edge_n1_n2|0]->(10) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2) | (1)-[:edge_n1_n2|0]->(11) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2) | (1)-[:edge_n1_n2|0]->(12) |
+---------------------------------------+---------------------------+

MATCH p = (n:node1 where @id = 1)-[r]->(m) RETURN p, n, r, m;
+---------------------------------------+-----------+---------------------------+------------+
|                                     p |         n |                         r |          m |
+---------------------------------------+-----------+---------------------------+------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2) | (1:node1) | (1)-[:edge_n1_n2|0]->(10) | (10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2) | (1:node1) | (1)-[:edge_n1_n2|0]->(11) | (11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2) | (1:node1) | (1)-[:edge_n1_n2|0]->(12) | (12:node2) |
+---------------------------------------+-----------+---------------------------+------------+

MATCH p = (n:node1 where @id = 1)-[r]->(m)
RETURN p, r.p_long, r.p_string, r.p_double, m.@id;
+---------------------------------------+----------+------------+------------+-------+
|                                     p | r.p_long | r.p_string | r.p_double | m.@id |
+---------------------------------------+----------+------------+------------+-------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2) |       11 |      1->10 |        5.5 |    10 |
| (1:node1)-[:edge_n1_n2|0]->(11:node2) |       12 |      1->11 |        6.0 |    11 |
| (1:node1)-[:edge_n1_n2|0]->(12:node2) |       13 |      1->12 |        6.5 |    12 |
+---------------------------------------+----------+------------+------------+-------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       11 |      1->10 |        5.5 |    10 |
|     1 |       12 |      1->11 |        6.0 |    11 |
|     1 |       13 |      1->12 |        6.5 |    12 |
+-------+----------+------------+------------+-------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id order by r.p_long DESC;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       13 |      1->12 |        6.5 |    12 |
|     1 |       12 |      1->11 |        6.0 |    11 |
|     1 |       11 |      1->10 |        5.5 |    10 |
+-------+----------+------------+------------+-------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id order by r.p_long DESC limit 1;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       13 |      1->12 |        6.5 |    12 |
+-------+----------+------------+------------+-------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id order by r.p_long DESC offset 1;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       12 |      1->11 |        6.0 |    11 |
|     1 |       11 |      1->10 |        5.5 |    10 |
+-------+----------+------------+------------+-------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id order by r.p_long DESC offset 3;

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id order by r.p_long DESC offset 1 limit 5;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       12 |      1->11 |        6.0 |    11 |
|     1 |       11 |      1->10 |        5.5 |    10 |
+-------+----------+------------+------------+-------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id limit 1;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       11 |      1->10 |        5.5 |    10 |
+-------+----------+------------+------------+-------+

MATCH (n:node1 where @id = 1)-[r]->(m)
RETURN n.@id, r.p_long, r.p_string, r.p_double, m.@id offset 1 limit 1;
+-------+----------+------------+------------+-------+
| n.@id | r.p_long | r.p_string | r.p_double | m.@id |
+-------+----------+------------+------------+-------+
|     1 |       12 |      1->11 |        6.0 |    11 |
+-------+----------+------------+------------+-------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN m.@id;
+-------+
| m.@id |
+-------+
|    10 |
|    11 |
|    12 |
+-------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN SUM(m.@id) GROUP BY n.p_long;
+------------+
| SUM(m.@id) |
+------------+
|         33 |
+------------+

--error 7021
MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN SUM(m.@id) AS SUMVAL GROUP BY SUMVAL;

--error 106
MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN n LIMIT 3, 3;

--error 106
MATCH (a where @id in (1,23,45,1,11,12,65,79))-[r]->(b) where ifnull(a.p_string,100)
RETURN a.@node_type, a.p_string, b.@id;

--error 106
MATCH (n where @id =1)-->(m)
RETURN n, m;

--error 106
MATCH (n where @id =1)--(m)
RETURN n, m;

--error 106
MATCH (n where @id =1)<--(m)
RETURN n, m;

--error 106
MATCH (a where @id in (1,23,45,1,11,12,65,79))-[r]->(b) where ifnull(a.p_string,0)
RETURN a.@node_type, a.p_string, b.@id;

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN m.@id, r.p_long, r.p_double, r.p_string, m.p_long, m.p_double, m.p_string;
+-------+----------+------------+------------+----------+------------+------------+
| m.@id | r.p_long | r.p_double | r.p_string | m.p_long | m.p_double | m.p_string |
+-------+----------+------------+------------+----------+------------+------------+
|    10 |       11 |        5.5 |      1->10 |       10 |        5.0 |         10 |
|    11 |       12 |        6.0 |      1->11 |       11 |        5.5 |         11 |
|    12 |       13 |        6.5 |      1->12 |       12 |        6.0 |         12 |
+-------+----------+------------+------------+----------+------------+------------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2 PER_NODE_LIMIT(1)]->(m)
RETURN m.@id, r.p_long, r.p_double, r.p_string, m.p_long, m.p_double, m.p_string;
+-------+----------+------------+------------+----------+------------+------------+
| m.@id | r.p_long | r.p_double | r.p_string | m.p_long | m.p_double | m.p_string |
+-------+----------+------------+------------+----------+------------+------------+
|    10 |       11 |        5.5 |      1->10 |       10 |        5.0 |         10 |
+-------+----------+------------+------------+----------+------------+------------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2 PER_NODE_LIMIT(1) where p_long=13]->(m)
RETURN m.@id, r.p_long, r.p_double, r.p_string, m.p_long, m.p_double, m.p_string;

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2 PER_NODE_LIMIT(1) {p_long: 13}]->(m)
RETURN m.@id, r.p_long, r.p_double, r.p_string, m.p_long, m.p_double, m.p_string;

MATCH (n where @id in (10,11,12))-[r where p_long>120]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    11 |        node2 |    11->111 |      122 |   111 |        node3 |
|    11 |        node2 |    11->112 |      123 |   112 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
|    12 |        node2 |    12->121 |      133 |   121 |        node3 |
|    12 |        node2 |    12->122 |      134 |   122 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r PER_NODE_LIMIT(1) where p_long>120]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2 where p_long=13 PER_NODE_LIMIT(1)]->(m)
RETURN m.@id, r.p_long, r.p_double, r.p_string, m.p_long, m.p_double, m.p_string;
+-------+----------+------------+------------+----------+------------+------------+
| m.@id | r.p_long | r.p_double | r.p_string | m.p_long | m.p_double | m.p_string |
+-------+----------+------------+------------+----------+------------+------------+
|    12 |       13 |        6.5 |      1->12 |       12 |        6.0 |         12 |
+-------+----------+------------+------------+----------+------------+------------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2 {p_long: 13} PER_NODE_LIMIT(1)]->(m)
RETURN m.@id, r.p_long, r.p_double, r.p_string, m.p_long, m.p_double, m.p_string;
+-------+----------+------------+------------+----------+------------+------------+
| m.@id | r.p_long | r.p_double | r.p_string | m.p_long | m.p_double | m.p_string |
+-------+----------+------------+------------+----------+------------+------------+
|    12 |       13 |        6.5 |      1->12 |       12 |        6.0 |         12 |
+-------+----------+------------+------------+----------+------------+------------+

MATCH (n where @id in (10,11,12))-[r where p_long>120 PER_NODE_LIMIT(0)]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;

MATCH (n where @id in (10,11,12))-[r where p_long>120 PER_NODE_LIMIT(1)]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r where p_long>120 PER_NODE_LIMIT(2)]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    11 |        node2 |    11->111 |      122 |   111 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
|    12 |        node2 |    12->121 |      133 |   121 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r where p_long>120 PER_NODE_LIMIT(3)]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    11 |        node2 |    11->111 |      122 |   111 |        node3 |
|    11 |        node2 |    11->112 |      123 |   112 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
|    12 |        node2 |    12->121 |      133 |   121 |        node3 |
|    12 |        node2 |    12->122 |      134 |   122 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r where p_long>120 PER_NODE_LIMIT(4)]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    11 |        node2 |    11->111 |      122 |   111 |        node3 |
|    11 |        node2 |    11->112 |      123 |   112 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
|    12 |        node2 |    12->121 |      133 |   121 |        node3 |
|    12 |        node2 |    12->122 |      134 |   122 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r PER_NODE_LIMIT(2) where p_long>120]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    11 |        node2 |    11->111 |      122 |   111 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
|    12 |        node2 |    12->121 |      133 |   121 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r PER_NODE_LIMIT(2) where p_long>120 PER_NODE_LIMIT(1)]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r PER_NODE_LIMIT(2) {@src_id:11} PER_NODE_LIMIT(1)]->(m)
RETURN m.@id, r.p_long, r.p_double, r.p_string, m.p_long, m.p_double, m.p_string;
+-------+----------+------------+------------+----------+------------+------------+
| m.@id | r.p_long | r.p_double | r.p_string | m.p_long | m.p_double | m.p_string |
+-------+----------+------------+------------+----------+------------+------------+
|   110 |      121 |       60.5 |    11->110 |      110 |       55.0 |        110 |
+-------+----------+------------+------------+----------+------------+------------+

MATCH (n:node1 {@id:1})-[r:edge_n1_n2 per_node_limit 4]->(m:node2)
RETURN r.@src_id, r.p_long, m.@id;
+-----------+----------+-------+
| r.@src_id | r.p_long | m.@id |
+-----------+----------+-------+
|         1 |       11 |    10 |
|         1 |       12 |    11 |
|         1 |       13 |    12 |
+-----------+----------+-------+

MATCH (n:node1 {@id:1})-[r:edge_n1_n2 per_node_limit 3]->(m:node2)
RETURN r.@src_id, r.p_long, m.@id;
+-----------+----------+-------+
| r.@src_id | r.p_long | m.@id |
+-----------+----------+-------+
|         1 |       11 |    10 |
|         1 |       12 |    11 |
|         1 |       13 |    12 |
+-----------+----------+-------+

MATCH (n:node1 {@id:1})-[r:edge_n1_n2 per_node_limit 2]->(m:node2)
RETURN r.@src_id, r.p_long, m.@id;
+-----------+----------+-------+
| r.@src_id | r.p_long | m.@id |
+-----------+----------+-------+
|         1 |       11 |    10 |
|         1 |       12 |    11 |
+-----------+----------+-------+

MATCH (n:node1 {@id:1})-[r:edge_n1_n2 per_node_limit 1]->(m:node2)
RETURN r.@src_id, r.p_long, m.@id;
+-----------+----------+-------+
| r.@src_id | r.p_long | m.@id |
+-----------+----------+-------+
|         1 |       11 |    10 |
+-----------+----------+-------+

MATCH (n:node1 {@id:1})-[r:edge_n1_n2 per_node_limit 0]->(m:node2)
RETURN r.@src_id, r.p_long, m.@id;

MATCH (n:node1 where @id = 1)-[r:edge_n1_n2 where @timestamp = 0 and @dst_id = 10]->(m)
RETURN n.@id, r.@timestamp, m.@id;
+-------+--------------+-------+
| n.@id | r.@timestamp | m.@id |
+-------+--------------+-------+
|     1 |            0 |    10 |
+-------+--------------+-------+

MATCH (n:node1 where @id = 1)-[r:edge_n1_n2 PER_NODE_LIMIT 10 where @timestamp = 0 and @dst_id = 10]->(m)
RETURN n.@id, r.@timestamp, m.@id;
+-------+--------------+-------+
| n.@id | r.@timestamp | m.@id |
+-------+--------------+-------+
|     1 |            0 |    10 |
+-------+--------------+-------+

MATCH (n:node1 where @id = 1)-[r:edge_n1_n2 PER_NODE_LIMIT(10) where @timestamp = 0 and @dst_id = 10]->(m)
RETURN n.@id, r.@timestamp, m.@id;
+-------+--------------+-------+
| n.@id | r.@timestamp | m.@id |
+-------+--------------+-------+
|     1 |            0 |    10 |
+-------+--------------+-------+

MATCH (n:node1 where @id = 1)-[r:edge_n1_n2 PER_NODE_LIMIT 0 where @timestamp = 0 and @dst_id = 10]->(m)
RETURN n.@id, r.@timestamp, m.@id;

MATCH (n:node1 where @id = 1)-[r:edge_n1_n2 PER_NODE_LIMIT(0) where @timestamp = 0 and @dst_id = 10]->(m)
RETURN n.@id, r.@timestamp, m.@id;

MATCH (n where @id in (10,11,12))-[r PER_NODE_LIMIT(1) where p_long < 135]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    10 |        node2 |    10->100 |      110 |   100 |        node3 |
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r where p_long < 135]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    10 |        node2 |    10->100 |      110 |   100 |        node3 |
|    10 |        node2 |    10->101 |      111 |   101 |        node3 |
|    10 |        node2 |    10->102 |      112 |   102 |        node3 |
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    11 |        node2 |    11->111 |      122 |   111 |        node3 |
|    11 |        node2 |    11->112 |      123 |   112 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
|    12 |        node2 |    12->121 |      133 |   121 |        node3 |
|    12 |        node2 |    12->122 |      134 |   122 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

MATCH (n where @id in (10,11,12))-[r PER_NODE_LIMIT(1) where p_long < 135 ]->(m)
RETURN n.@id, n.@node_type, r.p_string, r.p_long, m.@id, m.@node_type ORDER BY n.@id;
+-------+--------------+------------+----------+-------+--------------+
| n.@id | n.@node_type | r.p_string | r.p_long | m.@id | m.@node_type |
+-------+--------------+------------+----------+-------+--------------+
|    10 |        node2 |    10->100 |      110 |   100 |        node3 |
|    11 |        node2 |    11->110 |      121 |   110 |        node3 |
|    12 |        node2 |    12->120 |      132 |   120 |        node3 |
+-------+--------------+------------+----------+-------+--------------+

--error 3005
MATCH (n where @id in [1])-[ ]->(m) RETURN n.@id,r1.ep_string, m.@id;

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m)
RETURN n.p_long, r.p_long, r.p_double, m.p_long;
+----------+----------+------------+----------+
| n.p_long | r.p_long | r.p_double | m.p_long |
+----------+----------+------------+----------+
|        1 |       11 |        5.5 |       10 |
|        1 |       12 |        6.0 |       11 |
|        1 |       13 |        6.5 |       12 |
+----------+----------+------------+----------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m) WHERE 1 > 0
RETURN n.p_long, r.p_long, r.p_double, m.p_long;
+----------+----------+------------+----------+
| n.p_long | r.p_long | r.p_double | m.p_long |
+----------+----------+------------+----------+
|        1 |       11 |        5.5 |       10 |
|        1 |       12 |        6.0 |       11 |
|        1 |       13 |        6.5 |       12 |
+----------+----------+------------+----------+

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m) WHERE 1 = 0
RETURN n.p_long, r.p_long, r.p_double, m.p_long;

MATCH(n:node1 {@id: 1})-[r:edge_n1_n2]->(m) WHERE r.p_long > 12 or m.p_long = 10
RETURN n.p_long, r.p_long, r.p_double, m.p_long;
+----------+----------+------------+----------+
| n.p_long | r.p_long | r.p_double | m.p_long |
+----------+----------+------------+----------+
|        1 |       11 |        5.5 |       10 |
|        1 |       13 |        6.5 |       12 |
+----------+----------+------------+----------+

MATCH(n:node1 {@id: 1}) -[r:edge_n1_n2]->(m)
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
|        1 |    12 |
+----------+-------+

MATCH(n:node1 {@id: 1}) -[r:edge_n1_n2] ->(m)
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
|        1 |    12 |
+----------+-------+

MATCH(n:node1 {@id: 1}) - [r:edge_n1_n2] ->(m)
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
|        1 |    12 |
+----------+-------+

MATCH(n:node1 {@id: 1}) - [r:edge_n1_n2] -> (m)
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
|        1 |    12 |
+----------+-------+

MATCH(n:node1 {@id: 1}) - [r:edge_n1_n2] -> (m )
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
|        1 |    12 |
+----------+-------+

MATCH(n:node1 {@id: 1}) - [r:edge_n1_n2] -> ( m )
RETURN n.p_long, m.@id;
+----------+-------+
| n.p_long | m.@id |
+----------+-------+
|        1 |    10 |
|        1 |    11 |
|        1 |    12 |
+----------+-------+

MATCH(n:node1 where @id=1) where n.@id is null
RETURN n.p_long;

MATCH(n:node1 where @id=1) where n.@id is not null
RETURN n.p_long;
+----------+
| n.p_long |
+----------+
|        1 |
+----------+

match p = (n:node1 where @id = 1)-[]->()<-[]-(n)
return p;
+------------------------------------------------------------------+
|                                                                p |
+------------------------------------------------------------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1) |
+------------------------------------------------------------------+

match p = (n:node1 where @id = 1)-[]->()-[]-(n)
return p;
+------------------------------------------------------------------+
|                                                                p |
+------------------------------------------------------------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1) |
+------------------------------------------------------------------+

match p = (n:node1 where @id = 1)-[]->()<-[]-(n)-[]->()
return p;
+----------------------------------------------------------------------------------------------+
|                                                                                            p |
+----------------------------------------------------------------------------------------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(12:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(12:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(12:node2) |
+----------------------------------------------------------------------------------------------+

match p = (n:node1 where @id = 1)-[]->()-[]-(n)-[]-()
return p;
+----------------------------------------------------------------------------------------------+
|                                                                                            p |
+----------------------------------------------------------------------------------------------+
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(10:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(12:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(11:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(12:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(10:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(11:node2) |
| (1:node1)-[:edge_n1_n2|0]->(12:node2)<-[:edge_n1_n2|0]-(1:node1)-[:edge_n1_n2|0]->(12:node2) |
+----------------------------------------------------------------------------------------------+

--error 8000
match (n:node#1 where @id = 1)
return n;

match (n:node1 where @id = 1)-[r]->(m)
return r.@center_id, r.@other_id;
+--------------+-------------+
| r.@center_id | r.@other_id |
+--------------+-------------+
|            1 |          10 |
|            1 |          11 |
|            1 |          12 |
+--------------+-------------+

match (n:node1 where @id = 10)<-[r]-(m)
return r.@center_id, r.@other_id;
+--------------+-------------+
| r.@center_id | r.@other_id |
+--------------+-------------+
|           10 |           1 |
+--------------+-------------+

match (n:node1 where @id = 1)-[r]-(m)
return r.@center_id, r.@other_id;
+--------------+-------------+
| r.@center_id | r.@other_id |
+--------------+-------------+
|            1 |          10 |
|            1 |          11 |
|            1 |          12 |
+--------------+-------------+

match (n:node1 where @id = 1)-[r]->{1, 2}(m)
return r.@center_id, r.@other_id;
+--------------+-------------+
| r.@center_id | r.@other_id |
+--------------+-------------+
|          [1] |        [10] |
|          [1] |        [11] |
|          [1] |        [12] |
|       [1,10] |    [10,100] |
|       [1,10] |    [10,101] |
|       [1,10] |    [10,102] |
|       [1,12] |    [12,120] |
|       [1,12] |    [12,121] |
|       [1,12] |    [12,122] |
|       [1,11] |    [11,110] |
|       [1,11] |    [11,111] |
|       [1,11] |    [11,112] |
+--------------+-------------+

match (n:node1 where @id = 10)<-[r]-{1, 2}(m)
return r.@center_id, r.@other_id;
+--------------+-------------+
| r.@center_id | r.@other_id |
+--------------+-------------+
|         [10] |         [1] |
+--------------+-------------+

match (n:node1 where @id = 1)-[r]-{1, 2}(m)
return r.@center_id, r.@other_id;
+--------------+-------------+
| r.@center_id | r.@other_id |
+--------------+-------------+
|          [1] |        [10] |
|          [1] |        [11] |
|          [1] |        [12] |
|       [1,10] |    [10,100] |
|       [1,10] |    [10,101] |
|       [1,10] |    [10,102] |
|       [1,10] |      [10,1] |
|       [1,12] |    [12,120] |
|       [1,12] |    [12,121] |
|       [1,12] |    [12,122] |
|       [1,12] |      [12,1] |
|       [1,11] |    [11,110] |
|       [1,11] |    [11,111] |
|       [1,11] |    [11,112] |
|       [1,11] |      [11,1] |
+--------------+-------------+

match (n:node1 where @id = 1)-[r]-{1, 3}(m)
return r.@center_id, r.@other_id;
+--------------+-------------+
| r.@center_id | r.@other_id |
+--------------+-------------+
|          [1] |        [10] |
|          [1] |        [11] |
|          [1] |        [12] |
|       [1,10] |    [10,100] |
|       [1,10] |    [10,101] |
|       [1,10] |    [10,102] |
|       [1,10] |      [10,1] |
|       [1,12] |    [12,120] |
|       [1,12] |    [12,121] |
|       [1,12] |    [12,122] |
|       [1,12] |      [12,1] |
|       [1,11] |    [11,110] |
|       [1,11] |    [11,111] |
|       [1,11] |    [11,112] |
|       [1,11] |      [11,1] |
|   [1,12,120] | [12,120,12] |
|   [1,10,100] | [10,100,10] |
|   [1,11,110] | [11,110,11] |
|   [1,12,122] | [12,122,12] |
|   [1,10,102] | [10,102,10] |
|   [1,11,112] | [11,112,11] |
|   [1,10,101] | [10,101,10] |
|   [1,12,121] | [12,121,12] |
|     [1,10,1] |   [10,1,10] |
|     [1,12,1] |   [12,1,10] |
|     [1,11,1] |   [11,1,10] |
|     [1,10,1] |   [10,1,11] |
|     [1,12,1] |   [12,1,11] |
|     [1,11,1] |   [11,1,11] |
|     [1,10,1] |   [10,1,12] |
|     [1,12,1] |   [12,1,12] |
|     [1,11,1] |   [11,1,12] |
|   [1,11,111] | [11,111,11] |
+--------------+-------------+
