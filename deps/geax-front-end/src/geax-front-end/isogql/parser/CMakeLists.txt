set(GqlParser_SRC
    AntlrGqlParser.cpp
)

# Antlr4_LcypherParser_INPUT - the ANTLR input used for the macro
# Antlr4_LcypherParser_OUTPUTS - the outputs generated by ANTLR
# Antlr4_LcypherParser_CXX_OUTPUTS - the C++ outputs generated by ANTLR
# Antlr4_LcypherParser_OUTPUT_DIR - the output directory for ANTLR

# include_directories(${GLOBAL_INCLUDE_DIRS})
# message("Antlr4_runtime_INCLUDE_DIR : ${Antlr4_runtime_INCLUDE_DIR}")
# include_directories(${Antlr4_RUNTIME_INCLUDE_DIR})

antlr4_target(GqlLexer GqlLexer.g4 LEXER
             PACKAGE parser
             OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../../../../include/geax-front-end/isogql/parser
             COMPILE_FLAGS -Werror)
antlr4_target(GqlParser GqlParser.g4 PARSER VISITOR
             PACKAGE parser
             OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../../../../include/geax-front-end/isogql/parser
             DEPENDS_ANTLR GqlLexer
             COMPILE_FLAGS -Werror -lib ${Antlr4_GqlLexer_OUTPUT_DIR})
add_library(isogql_parser
        ${Antlr4_GqlLexer_CXX_OUTPUTS}
        ${Antlr4_GqlParser_CXX_OUTPUTS}
        ${GqlParser_SRC})
target_compile_features(isogql_parser PRIVATE cxx_std_17)
target_link_libraries(isogql_parser
    PRIVATE
    PUBLIC
        Antlr4::runtime
)
if (GEAX_INSTALL)
    install(TARGETS isogql_parser
        LIBRARY DESTINATION lib
    )
endif()
