// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft.proto

#include "raft.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_raft_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfChangeSingle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Entry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Snapshot;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SnapshotMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Message;
}  // namespace protobuf_raft_2eproto
namespace raftpb {
class EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entry>
      _instance;
} _Entry_default_instance_;
class SnapshotMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotMetadata>
      _instance;
} _SnapshotMetadata_default_instance_;
class SnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Snapshot>
      _instance;
} _Snapshot_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message>
      _instance;
} _Message_default_instance_;
class HardStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HardState>
      _instance;
} _HardState_default_instance_;
class ConfStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfState>
      _instance;
} _ConfState_default_instance_;
class ConfChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfChange>
      _instance;
} _ConfChange_default_instance_;
class ConfChangeSingleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfChangeSingle>
      _instance;
} _ConfChangeSingle_default_instance_;
class ConfChangeV2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfChangeV2>
      _instance;
} _ConfChangeV2_default_instance_;
}  // namespace raftpb
namespace protobuf_raft_2eproto {
static void InitDefaultsEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_Entry_default_instance_;
    new (ptr) ::raftpb::Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntry}, {}};

static void InitDefaultsSnapshotMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_SnapshotMetadata_default_instance_;
    new (ptr) ::raftpb::SnapshotMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::SnapshotMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SnapshotMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSnapshotMetadata}, {
      &protobuf_raft_2eproto::scc_info_ConfState.base,}};

static void InitDefaultsSnapshot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_Snapshot_default_instance_;
    new (ptr) ::raftpb::Snapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::Snapshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Snapshot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSnapshot}, {
      &protobuf_raft_2eproto::scc_info_SnapshotMetadata.base,}};

static void InitDefaultsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_Message_default_instance_;
    new (ptr) ::raftpb::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::Message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Message =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMessage}, {
      &protobuf_raft_2eproto::scc_info_Entry.base,
      &protobuf_raft_2eproto::scc_info_Snapshot.base,}};

static void InitDefaultsHardState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_HardState_default_instance_;
    new (ptr) ::raftpb::HardState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::HardState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HardState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHardState}, {}};

static void InitDefaultsConfState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_ConfState_default_instance_;
    new (ptr) ::raftpb::ConfState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::ConfState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfState}, {}};

static void InitDefaultsConfChange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_ConfChange_default_instance_;
    new (ptr) ::raftpb::ConfChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::ConfChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfChange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfChange}, {}};

static void InitDefaultsConfChangeSingle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_ConfChangeSingle_default_instance_;
    new (ptr) ::raftpb::ConfChangeSingle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::ConfChangeSingle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfChangeSingle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfChangeSingle}, {}};

static void InitDefaultsConfChangeV2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raftpb::_ConfChangeV2_default_instance_;
    new (ptr) ::raftpb::ConfChangeV2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raftpb::ConfChangeV2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfChangeV2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfChangeV2}, {
      &protobuf_raft_2eproto::scc_info_ConfChangeSingle.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SnapshotMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Snapshot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HardState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfChange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfChangeSingle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfChangeV2.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Entry, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Entry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Entry, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Entry, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::SnapshotMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::SnapshotMetadata, conf_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::SnapshotMetadata, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::SnapshotMetadata, term_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Snapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Snapshot, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Snapshot, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, logterm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, commit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, vote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, snapshot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, reject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, rejecthint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::Message, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::HardState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::HardState, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::HardState, vote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::HardState, commit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfState, voters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfState, learners_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfState, voters_outgoing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfState, learners_next_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfState, auto_leave_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChange, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChange, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChange, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChange, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChangeSingle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChangeSingle, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChangeSingle, node_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChangeV2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChangeV2, transition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChangeV2, changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raftpb::ConfChangeV2, context_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::raftpb::Entry)},
  { 9, -1, sizeof(::raftpb::SnapshotMetadata)},
  { 17, -1, sizeof(::raftpb::Snapshot)},
  { 24, -1, sizeof(::raftpb::Message)},
  { 43, -1, sizeof(::raftpb::HardState)},
  { 51, -1, sizeof(::raftpb::ConfState)},
  { 61, -1, sizeof(::raftpb::ConfChange)},
  { 70, -1, sizeof(::raftpb::ConfChangeSingle)},
  { 77, -1, sizeof(::raftpb::ConfChangeV2)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_SnapshotMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_Snapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_Message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_HardState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_ConfState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_ConfChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_ConfChangeSingle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raftpb::_ConfChangeV2_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "raft.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nraft.proto\022\006raftpb\"S\n\005Entry\022\014\n\004Term\030\002 "
      "\001(\004\022\r\n\005Index\030\003 \001(\004\022\037\n\004Type\030\001 \001(\0162\021.raftp"
      "b.EntryType\022\014\n\004Data\030\004 \001(\014\"V\n\020SnapshotMet"
      "adata\022%\n\nconf_state\030\001 \001(\0132\021.raftpb.ConfS"
      "tate\022\r\n\005index\030\002 \001(\004\022\014\n\004term\030\003 \001(\004\"D\n\010Sna"
      "pshot\022\014\n\004data\030\001 \001(\014\022*\n\010metadata\030\002 \001(\0132\030."
      "raftpb.SnapshotMetadata\"\257\002\n\007Message\022!\n\004t"
      "ype\030\001 \001(\0162\023.raftpb.MessageType\022\n\n\002to\030\002 \001"
      "(\004\022\014\n\004from\030\003 \001(\004\022\014\n\004term\030\004 \001(\004\022\017\n\007logTer"
      "m\030\005 \001(\004\022\r\n\005index\030\006 \001(\004\022\036\n\007entries\030\007 \003(\0132"
      "\r.raftpb.Entry\022\016\n\006commit\030\010 \001(\004\022\014\n\004vote\030\r"
      " \001(\004\022\"\n\010snapshot\030\t \001(\0132\020.raftpb.Snapshot"
      "\022\016\n\006reject\030\n \001(\010\022\022\n\nrejectHint\030\013 \001(\004\022\017\n\007"
      "context\030\014 \001(\014\022\"\n\tresponses\030\016 \003(\0132\017.raftp"
      "b.Message\"7\n\tHardState\022\014\n\004term\030\001 \001(\004\022\014\n\004"
      "vote\030\002 \001(\004\022\016\n\006commit\030\003 \001(\004\"q\n\tConfState\022"
      "\016\n\006voters\030\001 \003(\004\022\020\n\010learners\030\002 \003(\004\022\027\n\017vot"
      "ers_outgoing\030\003 \003(\004\022\025\n\rlearners_next\030\004 \003("
      "\004\022\022\n\nauto_leave\030\005 \001(\010\"`\n\nConfChange\022$\n\004t"
      "ype\030\002 \001(\0162\026.raftpb.ConfChangeType\022\017\n\007nod"
      "e_id\030\003 \001(\004\022\017\n\007context\030\004 \001(\014\022\n\n\002id\030\001 \001(\004\""
      "I\n\020ConfChangeSingle\022$\n\004type\030\001 \001(\0162\026.raft"
      "pb.ConfChangeType\022\017\n\007node_id\030\002 \001(\004\"|\n\014Co"
      "nfChangeV2\0220\n\ntransition\030\001 \001(\0162\034.raftpb."
      "ConfChangeTransition\022)\n\007changes\030\002 \003(\0132\030."
      "raftpb.ConfChangeSingle\022\017\n\007context\030\003 \001(\014"
      "*H\n\tEntryType\022\017\n\013EntryNormal\020\000\022\023\n\017EntryC"
      "onfChange\020\001\022\025\n\021EntryConfChangeV2\020\002*\306\003\n\013M"
      "essageType\022\n\n\006MsgHup\020\000\022\013\n\007MsgBeat\020\001\022\013\n\007M"
      "sgProp\020\002\022\n\n\006MsgApp\020\003\022\016\n\nMsgAppResp\020\004\022\013\n\007"
      "MsgVote\020\005\022\017\n\013MsgVoteResp\020\006\022\013\n\007MsgSnap\020\007\022"
      "\020\n\014MsgHeartbeat\020\010\022\024\n\020MsgHeartbeatResp\020\t\022"
      "\022\n\016MsgUnreachable\020\n\022\021\n\rMsgSnapStatus\020\013\022\022"
      "\n\016MsgCheckQuorum\020\014\022\025\n\021MsgTransferLeader\020"
      "\r\022\021\n\rMsgTimeoutNow\020\016\022\020\n\014MsgReadIndex\020\017\022\024"
      "\n\020MsgReadIndexResp\020\020\022\016\n\nMsgPreVote\020\021\022\022\n\016"
      "MsgPreVoteResp\020\022\022\024\n\020MsgStorageAppend\020\023\022\030"
      "\n\024MsgStorageAppendResp\020\024\022\023\n\017MsgStorageAp"
      "ply\020\025\022\027\n\023MsgStorageApplyResp\020\026\022\023\n\017MsgFor"
      "getLeader\020\027*\202\001\n\024ConfChangeTransition\022\034\n\030"
      "ConfChangeTransitionAuto\020\000\022%\n!ConfChange"
      "TransitionJointImplicit\020\001\022%\n!ConfChangeT"
      "ransitionJointExplicit\020\002*y\n\016ConfChangeTy"
      "pe\022\025\n\021ConfChangeAddNode\020\000\022\030\n\024ConfChangeR"
      "emoveNode\020\001\022\030\n\024ConfChangeUpdateNode\020\002\022\034\n"
      "\030ConfChangeAddLearnerNode\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1835);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "raft.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_raft_2eproto
namespace raftpb {
const ::google::protobuf::EnumDescriptor* EntryType_descriptor() {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_raft_2eproto::file_level_enum_descriptors[0];
}
bool EntryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_raft_2eproto::file_level_enum_descriptors[1];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ConfChangeTransition_descriptor() {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_raft_2eproto::file_level_enum_descriptors[2];
}
bool ConfChangeTransition_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ConfChangeType_descriptor() {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_raft_2eproto::file_level_enum_descriptors[3];
}
bool ConfChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Entry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entry::kTermFieldNumber;
const int Entry::kIndexFieldNumber;
const int Entry::kTypeFieldNumber;
const int Entry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entry::Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.Entry)
}
Entry::Entry(const Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&term_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:raftpb.Entry)
}

void Entry::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&term_)) + sizeof(type_));
}

Entry::~Entry() {
  // @@protoc_insertion_point(destructor:raftpb.Entry)
  SharedDtor();
}

void Entry::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Entry::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entry& Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_Entry.base);
  return *internal_default_instance();
}


void Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&term_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raftpb.EntryType Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::raftpb::EntryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Term = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.Entry)
  return false;
#undef DO_
}

void Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.EntryType Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 Term = 2;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->term(), output);
  }

  // uint64 Index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->index(), output);
  }

  // bytes Data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.Entry)
}

::google::protobuf::uint8* Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.EntryType Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 Term = 2;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->term(), target);
  }

  // uint64 Index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->index(), target);
  }

  // bytes Data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.Entry)
  return target;
}

size_t Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes Data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint64 Term = 2;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->term());
  }

  // uint64 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  // .raftpb.EntryType Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.Entry)
    MergeFrom(*source);
  }
}

void Entry::MergeFrom(const Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entry::CopyFrom(const Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entry::IsInitialized() const {
  return true;
}

void Entry::Swap(Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entry::InternalSwap(Entry* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(term_, other->term_);
  swap(index_, other->index_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Entry::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotMetadata::InitAsDefaultInstance() {
  ::raftpb::_SnapshotMetadata_default_instance_._instance.get_mutable()->conf_state_ = const_cast< ::raftpb::ConfState*>(
      ::raftpb::ConfState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotMetadata::kConfStateFieldNumber;
const int SnapshotMetadata::kIndexFieldNumber;
const int SnapshotMetadata::kTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotMetadata::SnapshotMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_SnapshotMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.SnapshotMetadata)
}
SnapshotMetadata::SnapshotMetadata(const SnapshotMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conf_state()) {
    conf_state_ = new ::raftpb::ConfState(*from.conf_state_);
  } else {
    conf_state_ = NULL;
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&term_) -
    reinterpret_cast<char*>(&index_)) + sizeof(term_));
  // @@protoc_insertion_point(copy_constructor:raftpb.SnapshotMetadata)
}

void SnapshotMetadata::SharedCtor() {
  ::memset(&conf_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&conf_state_)) + sizeof(term_));
}

SnapshotMetadata::~SnapshotMetadata() {
  // @@protoc_insertion_point(destructor:raftpb.SnapshotMetadata)
  SharedDtor();
}

void SnapshotMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete conf_state_;
}

void SnapshotMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SnapshotMetadata::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotMetadata& SnapshotMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_SnapshotMetadata.base);
  return *internal_default_instance();
}


void SnapshotMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.SnapshotMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && conf_state_ != NULL) {
    delete conf_state_;
  }
  conf_state_ = NULL;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&term_) -
      reinterpret_cast<char*>(&index_)) + sizeof(term_));
  _internal_metadata_.Clear();
}

bool SnapshotMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.SnapshotMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raftpb.ConfState conf_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conf_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 term = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.SnapshotMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.SnapshotMetadata)
  return false;
#undef DO_
}

void SnapshotMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.SnapshotMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.ConfState conf_state = 1;
  if (this->has_conf_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_conf_state(), output);
  }

  // uint64 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->index(), output);
  }

  // uint64 term = 3;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->term(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.SnapshotMetadata)
}

::google::protobuf::uint8* SnapshotMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.SnapshotMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.ConfState conf_state = 1;
  if (this->has_conf_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_conf_state(), deterministic, target);
  }

  // uint64 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->index(), target);
  }

  // uint64 term = 3;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->term(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.SnapshotMetadata)
  return target;
}

size_t SnapshotMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.SnapshotMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .raftpb.ConfState conf_state = 1;
  if (this->has_conf_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conf_state_);
  }

  // uint64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  // uint64 term = 3;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->term());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SnapshotMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.SnapshotMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.SnapshotMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.SnapshotMetadata)
    MergeFrom(*source);
  }
}

void SnapshotMetadata::MergeFrom(const SnapshotMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.SnapshotMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conf_state()) {
    mutable_conf_state()->::raftpb::ConfState::MergeFrom(from.conf_state());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
}

void SnapshotMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.SnapshotMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotMetadata::CopyFrom(const SnapshotMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.SnapshotMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotMetadata::IsInitialized() const {
  return true;
}

void SnapshotMetadata::Swap(SnapshotMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotMetadata::InternalSwap(SnapshotMetadata* other) {
  using std::swap;
  swap(conf_state_, other->conf_state_);
  swap(index_, other->index_);
  swap(term_, other->term_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SnapshotMetadata::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Snapshot::InitAsDefaultInstance() {
  ::raftpb::_Snapshot_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::raftpb::SnapshotMetadata*>(
      ::raftpb::SnapshotMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Snapshot::kDataFieldNumber;
const int Snapshot::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Snapshot::Snapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_Snapshot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.Snapshot)
}
Snapshot::Snapshot(const Snapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::raftpb::SnapshotMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:raftpb.Snapshot)
}

void Snapshot::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_ = NULL;
}

Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:raftpb.Snapshot)
  SharedDtor();
}

void Snapshot::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void Snapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Snapshot::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Snapshot& Snapshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_Snapshot.base);
  return *internal_default_instance();
}


void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  _internal_metadata_.Clear();
}

bool Snapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.Snapshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raftpb.SnapshotMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.Snapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.Snapshot)
  return false;
#undef DO_
}

void Snapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // .raftpb.SnapshotMetadata metadata = 2;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.Snapshot)
}

::google::protobuf::uint8* Snapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // .raftpb.SnapshotMetadata metadata = 2;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_metadata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.Snapshot)
  return target;
}

size_t Snapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.Snapshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .raftpb.SnapshotMetadata metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Snapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const Snapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Snapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.Snapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.Snapshot)
    MergeFrom(*source);
  }
}

void Snapshot::MergeFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::raftpb::SnapshotMetadata::MergeFrom(from.metadata());
  }
}

void Snapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Snapshot::IsInitialized() const {
  return true;
}

void Snapshot::Swap(Snapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Snapshot::InternalSwap(Snapshot* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metadata_, other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Snapshot::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::raftpb::_Message_default_instance_._instance.get_mutable()->snapshot_ = const_cast< ::raftpb::Snapshot*>(
      ::raftpb::Snapshot::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kTypeFieldNumber;
const int Message::kToFieldNumber;
const int Message::kFromFieldNumber;
const int Message::kTermFieldNumber;
const int Message::kLogTermFieldNumber;
const int Message::kIndexFieldNumber;
const int Message::kEntriesFieldNumber;
const int Message::kCommitFieldNumber;
const int Message::kVoteFieldNumber;
const int Message::kSnapshotFieldNumber;
const int Message::kRejectFieldNumber;
const int Message::kRejectHintFieldNumber;
const int Message::kContextFieldNumber;
const int Message::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_Message.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context().size() > 0) {
    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  if (from.has_snapshot()) {
    snapshot_ = new ::raftpb::Snapshot(*from.snapshot_);
  } else {
    snapshot_ = NULL;
  }
  ::memcpy(&to_, &from.to_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_) -
    reinterpret_cast<char*>(&to_)) + sizeof(vote_));
  // @@protoc_insertion_point(copy_constructor:raftpb.Message)
}

void Message::SharedCtor() {
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&snapshot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_) -
      reinterpret_cast<char*>(&snapshot_)) + sizeof(vote_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:raftpb.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete snapshot_;
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_Message.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  responses_.Clear();
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && snapshot_ != NULL) {
    delete snapshot_;
  }
  snapshot_ = NULL;
  ::memset(&to_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_) -
      reinterpret_cast<char*>(&to_)) + sizeof(vote_));
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.Message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raftpb.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::raftpb::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 logTerm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logterm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .raftpb.Entry entries = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 commit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raftpb.Snapshot snapshot = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_snapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reject = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 rejectHint = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rejecthint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes context = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 vote = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .raftpb.Message responses = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 to = 2;
  if (this->to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->to(), output);
  }

  // uint64 from = 3;
  if (this->from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->from(), output);
  }

  // uint64 term = 4;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->term(), output);
  }

  // uint64 logTerm = 5;
  if (this->logterm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->logterm(), output);
  }

  // uint64 index = 6;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->index(), output);
  }

  // repeated .raftpb.Entry entries = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->entries(static_cast<int>(i)),
      output);
  }

  // uint64 commit = 8;
  if (this->commit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->commit(), output);
  }

  // .raftpb.Snapshot snapshot = 9;
  if (this->has_snapshot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_snapshot(), output);
  }

  // bool reject = 10;
  if (this->reject() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->reject(), output);
  }

  // uint64 rejectHint = 11;
  if (this->rejecthint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->rejecthint(), output);
  }

  // bytes context = 12;
  if (this->context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->context(), output);
  }

  // uint64 vote = 13;
  if (this->vote() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->vote(), output);
  }

  // repeated .raftpb.Message responses = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 to = 2;
  if (this->to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->to(), target);
  }

  // uint64 from = 3;
  if (this->from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->from(), target);
  }

  // uint64 term = 4;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->term(), target);
  }

  // uint64 logTerm = 5;
  if (this->logterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->logterm(), target);
  }

  // uint64 index = 6;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->index(), target);
  }

  // repeated .raftpb.Entry entries = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->entries(static_cast<int>(i)), deterministic, target);
  }

  // uint64 commit = 8;
  if (this->commit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->commit(), target);
  }

  // .raftpb.Snapshot snapshot = 9;
  if (this->has_snapshot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_snapshot(), deterministic, target);
  }

  // bool reject = 10;
  if (this->reject() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->reject(), target);
  }

  // uint64 rejectHint = 11;
  if (this->rejecthint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->rejecthint(), target);
  }

  // bytes context = 12;
  if (this->context().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->context(), target);
  }

  // uint64 vote = 13;
  if (this->vote() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->vote(), target);
  }

  // repeated .raftpb.Message responses = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .raftpb.Entry entries = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // repeated .raftpb.Message responses = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  // bytes context = 12;
  if (this->context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->context());
  }

  // .raftpb.Snapshot snapshot = 9;
  if (this->has_snapshot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *snapshot_);
  }

  // uint64 to = 2;
  if (this->to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->to());
  }

  // uint64 from = 3;
  if (this->from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->from());
  }

  // uint64 term = 4;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->term());
  }

  // uint64 logTerm = 5;
  if (this->logterm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logterm());
  }

  // .raftpb.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool reject = 10;
  if (this->reject() != 0) {
    total_size += 1 + 1;
  }

  // uint64 index = 6;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  // uint64 commit = 8;
  if (this->commit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit());
  }

  // uint64 rejectHint = 11;
  if (this->rejecthint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rejecthint());
  }

  // uint64 vote = 13;
  if (this->vote() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->vote());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  responses_.MergeFrom(from.responses_);
  if (from.context().size() > 0) {

    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  if (from.has_snapshot()) {
    mutable_snapshot()->::raftpb::Snapshot::MergeFrom(from.snapshot());
  }
  if (from.to() != 0) {
    set_to(from.to());
  }
  if (from.from() != 0) {
    set_from(from.from());
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.logterm() != 0) {
    set_logterm(from.logterm());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.reject() != 0) {
    set_reject(from.reject());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.commit() != 0) {
    set_commit(from.commit());
  }
  if (from.rejecthint() != 0) {
    set_rejecthint(from.rejecthint());
  }
  if (from.vote() != 0) {
    set_vote(from.vote());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  context_.Swap(&other->context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(snapshot_, other->snapshot_);
  swap(to_, other->to_);
  swap(from_, other->from_);
  swap(term_, other->term_);
  swap(logterm_, other->logterm_);
  swap(type_, other->type_);
  swap(reject_, other->reject_);
  swap(index_, other->index_);
  swap(commit_, other->commit_);
  swap(rejecthint_, other->rejecthint_);
  swap(vote_, other->vote_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HardState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HardState::kTermFieldNumber;
const int HardState::kVoteFieldNumber;
const int HardState::kCommitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HardState::HardState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_HardState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.HardState)
}
HardState::HardState(const HardState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&commit_) -
    reinterpret_cast<char*>(&term_)) + sizeof(commit_));
  // @@protoc_insertion_point(copy_constructor:raftpb.HardState)
}

void HardState::SharedCtor() {
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_) -
      reinterpret_cast<char*>(&term_)) + sizeof(commit_));
}

HardState::~HardState() {
  // @@protoc_insertion_point(destructor:raftpb.HardState)
  SharedDtor();
}

void HardState::SharedDtor() {
}

void HardState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HardState::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HardState& HardState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_HardState.base);
  return *internal_default_instance();
}


void HardState::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.HardState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_) -
      reinterpret_cast<char*>(&term_)) + sizeof(commit_));
  _internal_metadata_.Clear();
}

bool HardState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.HardState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 vote = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 commit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.HardState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.HardState)
  return false;
#undef DO_
}

void HardState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.HardState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 term = 1;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->term(), output);
  }

  // uint64 vote = 2;
  if (this->vote() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->vote(), output);
  }

  // uint64 commit = 3;
  if (this->commit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->commit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.HardState)
}

::google::protobuf::uint8* HardState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.HardState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 term = 1;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->term(), target);
  }

  // uint64 vote = 2;
  if (this->vote() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->vote(), target);
  }

  // uint64 commit = 3;
  if (this->commit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->commit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.HardState)
  return target;
}

size_t HardState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.HardState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 term = 1;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->term());
  }

  // uint64 vote = 2;
  if (this->vote() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->vote());
  }

  // uint64 commit = 3;
  if (this->commit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HardState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.HardState)
  GOOGLE_DCHECK_NE(&from, this);
  const HardState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HardState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.HardState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.HardState)
    MergeFrom(*source);
  }
}

void HardState::MergeFrom(const HardState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.HardState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.vote() != 0) {
    set_vote(from.vote());
  }
  if (from.commit() != 0) {
    set_commit(from.commit());
  }
}

void HardState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.HardState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HardState::CopyFrom(const HardState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.HardState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HardState::IsInitialized() const {
  return true;
}

void HardState::Swap(HardState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HardState::InternalSwap(HardState* other) {
  using std::swap;
  swap(term_, other->term_);
  swap(vote_, other->vote_);
  swap(commit_, other->commit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HardState::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfState::kVotersFieldNumber;
const int ConfState::kLearnersFieldNumber;
const int ConfState::kVotersOutgoingFieldNumber;
const int ConfState::kLearnersNextFieldNumber;
const int ConfState::kAutoLeaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfState::ConfState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_ConfState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.ConfState)
}
ConfState::ConfState(const ConfState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      voters_(from.voters_),
      learners_(from.learners_),
      voters_outgoing_(from.voters_outgoing_),
      learners_next_(from.learners_next_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auto_leave_ = from.auto_leave_;
  // @@protoc_insertion_point(copy_constructor:raftpb.ConfState)
}

void ConfState::SharedCtor() {
  auto_leave_ = false;
}

ConfState::~ConfState() {
  // @@protoc_insertion_point(destructor:raftpb.ConfState)
  SharedDtor();
}

void ConfState::SharedDtor() {
}

void ConfState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfState::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfState& ConfState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_ConfState.base);
  return *internal_default_instance();
}


void ConfState::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.ConfState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  voters_.Clear();
  learners_.Clear();
  voters_outgoing_.Clear();
  learners_next_.Clear();
  auto_leave_ = false;
  _internal_metadata_.Clear();
}

bool ConfState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.ConfState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 voters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_voters())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_voters())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 learners = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_learners())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_learners())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 voters_outgoing = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_voters_outgoing())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_voters_outgoing())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 learners_next = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_learners_next())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_learners_next())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool auto_leave = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &auto_leave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.ConfState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.ConfState)
  return false;
#undef DO_
}

void ConfState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.ConfState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 voters = 1;
  if (this->voters_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _voters_cached_byte_size_));
  }
  for (int i = 0, n = this->voters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->voters(i), output);
  }

  // repeated uint64 learners = 2;
  if (this->learners_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _learners_cached_byte_size_));
  }
  for (int i = 0, n = this->learners_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->learners(i), output);
  }

  // repeated uint64 voters_outgoing = 3;
  if (this->voters_outgoing_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _voters_outgoing_cached_byte_size_));
  }
  for (int i = 0, n = this->voters_outgoing_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->voters_outgoing(i), output);
  }

  // repeated uint64 learners_next = 4;
  if (this->learners_next_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _learners_next_cached_byte_size_));
  }
  for (int i = 0, n = this->learners_next_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->learners_next(i), output);
  }

  // bool auto_leave = 5;
  if (this->auto_leave() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->auto_leave(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.ConfState)
}

::google::protobuf::uint8* ConfState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.ConfState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 voters = 1;
  if (this->voters_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _voters_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->voters_, target);
  }

  // repeated uint64 learners = 2;
  if (this->learners_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _learners_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->learners_, target);
  }

  // repeated uint64 voters_outgoing = 3;
  if (this->voters_outgoing_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _voters_outgoing_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->voters_outgoing_, target);
  }

  // repeated uint64 learners_next = 4;
  if (this->learners_next_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _learners_next_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->learners_next_, target);
  }

  // bool auto_leave = 5;
  if (this->auto_leave() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->auto_leave(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.ConfState)
  return target;
}

size_t ConfState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.ConfState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 voters = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->voters_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _voters_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 learners = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->learners_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _learners_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 voters_outgoing = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->voters_outgoing_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _voters_outgoing_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 learners_next = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->learners_next_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _learners_next_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool auto_leave = 5;
  if (this->auto_leave() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.ConfState)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.ConfState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.ConfState)
    MergeFrom(*source);
  }
}

void ConfState::MergeFrom(const ConfState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.ConfState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  voters_.MergeFrom(from.voters_);
  learners_.MergeFrom(from.learners_);
  voters_outgoing_.MergeFrom(from.voters_outgoing_);
  learners_next_.MergeFrom(from.learners_next_);
  if (from.auto_leave() != 0) {
    set_auto_leave(from.auto_leave());
  }
}

void ConfState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.ConfState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfState::CopyFrom(const ConfState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.ConfState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfState::IsInitialized() const {
  return true;
}

void ConfState::Swap(ConfState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfState::InternalSwap(ConfState* other) {
  using std::swap;
  voters_.InternalSwap(&other->voters_);
  learners_.InternalSwap(&other->learners_);
  voters_outgoing_.InternalSwap(&other->voters_outgoing_);
  learners_next_.InternalSwap(&other->learners_next_);
  swap(auto_leave_, other->auto_leave_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfState::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfChange::kTypeFieldNumber;
const int ConfChange::kNodeIdFieldNumber;
const int ConfChange::kContextFieldNumber;
const int ConfChange::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfChange::ConfChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_ConfChange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.ConfChange)
}
ConfChange::ConfChange(const ConfChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context().size() > 0) {
    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:raftpb.ConfChange)
}

void ConfChange::SharedCtor() {
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

ConfChange::~ConfChange() {
  // @@protoc_insertion_point(destructor:raftpb.ConfChange)
  SharedDtor();
}

void ConfChange::SharedDtor() {
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfChange::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfChange& ConfChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_ConfChange.base);
  return *internal_default_instance();
}


void ConfChange::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.ConfChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ConfChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.ConfChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raftpb.ConfChangeType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::raftpb::ConfChangeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 node_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes context = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.ConfChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.ConfChange)
  return false;
#undef DO_
}

void ConfChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.ConfChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .raftpb.ConfChangeType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // uint64 node_id = 3;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->node_id(), output);
  }

  // bytes context = 4;
  if (this->context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->context(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.ConfChange)
}

::google::protobuf::uint8* ConfChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.ConfChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .raftpb.ConfChangeType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // uint64 node_id = 3;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->node_id(), target);
  }

  // bytes context = 4;
  if (this->context().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->context(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.ConfChange)
  return target;
}

size_t ConfChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.ConfChange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes context = 4;
  if (this->context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->context());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 node_id = 3;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->node_id());
  }

  // .raftpb.ConfChangeType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.ConfChange)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.ConfChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.ConfChange)
    MergeFrom(*source);
  }
}

void ConfChange::MergeFrom(const ConfChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.ConfChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.context().size() > 0) {

    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ConfChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.ConfChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfChange::CopyFrom(const ConfChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.ConfChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfChange::IsInitialized() const {
  return true;
}

void ConfChange::Swap(ConfChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfChange::InternalSwap(ConfChange* other) {
  using std::swap;
  context_.Swap(&other->context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(node_id_, other->node_id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfChange::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfChangeSingle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfChangeSingle::kTypeFieldNumber;
const int ConfChangeSingle::kNodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfChangeSingle::ConfChangeSingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_ConfChangeSingle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.ConfChangeSingle)
}
ConfChangeSingle::ConfChangeSingle(const ConfChangeSingle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&node_id_, &from.node_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&node_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:raftpb.ConfChangeSingle)
}

void ConfChangeSingle::SharedCtor() {
  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(type_));
}

ConfChangeSingle::~ConfChangeSingle() {
  // @@protoc_insertion_point(destructor:raftpb.ConfChangeSingle)
  SharedDtor();
}

void ConfChangeSingle::SharedDtor() {
}

void ConfChangeSingle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfChangeSingle::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfChangeSingle& ConfChangeSingle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_ConfChangeSingle.base);
  return *internal_default_instance();
}


void ConfChangeSingle::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.ConfChangeSingle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ConfChangeSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.ConfChangeSingle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raftpb.ConfChangeType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::raftpb::ConfChangeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 node_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.ConfChangeSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.ConfChangeSingle)
  return false;
#undef DO_
}

void ConfChangeSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.ConfChangeSingle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.ConfChangeType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 node_id = 2;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->node_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.ConfChangeSingle)
}

::google::protobuf::uint8* ConfChangeSingle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.ConfChangeSingle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.ConfChangeType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 node_id = 2;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->node_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.ConfChangeSingle)
  return target;
}

size_t ConfChangeSingle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.ConfChangeSingle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 node_id = 2;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->node_id());
  }

  // .raftpb.ConfChangeType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfChangeSingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.ConfChangeSingle)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfChangeSingle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfChangeSingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.ConfChangeSingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.ConfChangeSingle)
    MergeFrom(*source);
  }
}

void ConfChangeSingle::MergeFrom(const ConfChangeSingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.ConfChangeSingle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ConfChangeSingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.ConfChangeSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfChangeSingle::CopyFrom(const ConfChangeSingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.ConfChangeSingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfChangeSingle::IsInitialized() const {
  return true;
}

void ConfChangeSingle::Swap(ConfChangeSingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfChangeSingle::InternalSwap(ConfChangeSingle* other) {
  using std::swap;
  swap(node_id_, other->node_id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfChangeSingle::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfChangeV2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfChangeV2::kTransitionFieldNumber;
const int ConfChangeV2::kChangesFieldNumber;
const int ConfChangeV2::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfChangeV2::ConfChangeV2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_raft_2eproto::scc_info_ConfChangeV2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raftpb.ConfChangeV2)
}
ConfChangeV2::ConfChangeV2(const ConfChangeV2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      changes_(from.changes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context().size() > 0) {
    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  transition_ = from.transition_;
  // @@protoc_insertion_point(copy_constructor:raftpb.ConfChangeV2)
}

void ConfChangeV2::SharedCtor() {
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transition_ = 0;
}

ConfChangeV2::~ConfChangeV2() {
  // @@protoc_insertion_point(destructor:raftpb.ConfChangeV2)
  SharedDtor();
}

void ConfChangeV2::SharedDtor() {
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfChangeV2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfChangeV2::descriptor() {
  ::protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfChangeV2& ConfChangeV2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_raft_2eproto::scc_info_ConfChangeV2.base);
  return *internal_default_instance();
}


void ConfChangeV2::Clear() {
// @@protoc_insertion_point(message_clear_start:raftpb.ConfChangeV2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  changes_.Clear();
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transition_ = 0;
  _internal_metadata_.Clear();
}

bool ConfChangeV2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raftpb.ConfChangeV2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raftpb.ConfChangeTransition transition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transition(static_cast< ::raftpb::ConfChangeTransition >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .raftpb.ConfChangeSingle changes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raftpb.ConfChangeV2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raftpb.ConfChangeV2)
  return false;
#undef DO_
}

void ConfChangeV2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raftpb.ConfChangeV2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.ConfChangeTransition transition = 1;
  if (this->transition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->transition(), output);
  }

  // repeated .raftpb.ConfChangeSingle changes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->changes(static_cast<int>(i)),
      output);
  }

  // bytes context = 3;
  if (this->context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->context(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raftpb.ConfChangeV2)
}

::google::protobuf::uint8* ConfChangeV2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raftpb.ConfChangeV2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raftpb.ConfChangeTransition transition = 1;
  if (this->transition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->transition(), target);
  }

  // repeated .raftpb.ConfChangeSingle changes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->changes(static_cast<int>(i)), deterministic, target);
  }

  // bytes context = 3;
  if (this->context().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->context(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftpb.ConfChangeV2)
  return target;
}

size_t ConfChangeV2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftpb.ConfChangeV2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .raftpb.ConfChangeSingle changes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->changes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->changes(static_cast<int>(i)));
    }
  }

  // bytes context = 3;
  if (this->context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->context());
  }

  // .raftpb.ConfChangeTransition transition = 1;
  if (this->transition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transition());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfChangeV2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raftpb.ConfChangeV2)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfChangeV2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfChangeV2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raftpb.ConfChangeV2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raftpb.ConfChangeV2)
    MergeFrom(*source);
  }
}

void ConfChangeV2::MergeFrom(const ConfChangeV2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raftpb.ConfChangeV2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changes_.MergeFrom(from.changes_);
  if (from.context().size() > 0) {

    context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
  }
  if (from.transition() != 0) {
    set_transition(from.transition());
  }
}

void ConfChangeV2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raftpb.ConfChangeV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfChangeV2::CopyFrom(const ConfChangeV2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftpb.ConfChangeV2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfChangeV2::IsInitialized() const {
  return true;
}

void ConfChangeV2::Swap(ConfChangeV2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfChangeV2::InternalSwap(ConfChangeV2* other) {
  using std::swap;
  CastToBase(&changes_)->InternalSwap(CastToBase(&other->changes_));
  context_.Swap(&other->context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transition_, other->transition_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfChangeV2::GetMetadata() const {
  protobuf_raft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_raft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace raftpb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::Entry* Arena::CreateMaybeMessage< ::raftpb::Entry >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::SnapshotMetadata* Arena::CreateMaybeMessage< ::raftpb::SnapshotMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::SnapshotMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::Snapshot* Arena::CreateMaybeMessage< ::raftpb::Snapshot >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::Snapshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::Message* Arena::CreateMaybeMessage< ::raftpb::Message >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::Message >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::HardState* Arena::CreateMaybeMessage< ::raftpb::HardState >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::HardState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::ConfState* Arena::CreateMaybeMessage< ::raftpb::ConfState >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::ConfState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::ConfChange* Arena::CreateMaybeMessage< ::raftpb::ConfChange >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::ConfChange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::ConfChangeSingle* Arena::CreateMaybeMessage< ::raftpb::ConfChangeSingle >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::ConfChangeSingle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raftpb::ConfChangeV2* Arena::CreateMaybeMessage< ::raftpb::ConfChangeV2 >(Arena* arena) {
  return Arena::CreateInternal< ::raftpb::ConfChangeV2 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
