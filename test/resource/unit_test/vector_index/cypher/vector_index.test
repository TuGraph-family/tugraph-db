CALL db.createVertexLabelByJson('{"label":"person","primary":"id","type":"VERTEX","detach_property":true,"properties":[{"name":"id","type":"INT32","optional":false},{"name":"name","type":"STRING","optional":false,"index":false},{"name":"embedding1","type":"FLOAT_VECTOR","optional":false}, {"name":"embedding2","type":"FLOAT_VECTOR","optional":false}]}');
CALL db.addVertexVectorIndex('person','embedding1', {dimension:4});
CALL db.addVertexVectorIndex('person','embedding2', {dimension:4});
CALL db.addVertexVectorIndex('person','name', {dimension:4});
CALL db.showVertexVectorIndex();
CREATE (n:person {id:1, name:'name1', embedding1: [1.0,1.0,1.0,1.0], embedding2: [11.0,11.0,11.0,11.0]});
CREATE (n:person {id:2, name:'name2', embedding1: [2.0,2.0,2.0,2.0], embedding2: [12.0,12.0,12.0,12.0]});
CALL db.upsertVertex('person', [{id:3, name:'name3', embedding1: [3.0,3.0,3.0,3.0], embedding2: [13.0,13.0,13.0,13.0]}, {id:4, name:'name4', embedding1: [4.0,4.0,4.0,4.0], embedding2: [14.0,14.0,14.0,14.0]}]);
CALL db.vertexVectorKnnSearch('person','embedding1',[1,2,3,4], {top_k:2, hnsw_ef_search:10});
CALL db.vertexVectorKnnSearch('person','embedding1',[1,2,3,4], {top_k:2, hnsw_ef_search:10}) yield node return node.id;
CALL db.vertexVectorKnnSearch('person','embedding1',[1,2,3,4], {top_k:20, hnsw_ef_search:100}) yield node return node.id;
CALL db.vertexVectorKnnSearch('person','embedding2',[1,2,3,4], {top_k:2, hnsw_ef_search:10}) yield node return node.id;
CALL db.upsertVertex('person', [{id:1, embedding1: [33.0,33.0,33.0,33.0]}]);
CALL db.vertexVectorKnnSearch('person','embedding1',[1,2,3,4], {top_k:2, hnsw_ef_search:10}) yield node return node.id;
match(n:person {id:2}) delete n;
CALL db.vertexVectorKnnSearch('person','embedding1',[1,2,3,4], {top_k:2, hnsw_ef_search:10}) yield node return node.id;
CALL db.vertexVectorRangeSearch('person','embedding1', [1.0,2.0,3.0,4.0], {radius:10.0, hnsw_ef_search:10}) yield node,distance return node.id, distance;
CALL db.alterLabelDelFields('vertex', 'person', ['embedding1']);
CALL db.showVertexVectorIndex();
CALL db.vertexVectorKnnSearch('person','embedding1',[1,2,3,4], {top_k:2, hnsw_ef_search:10}) yield node return node.id;
CALL db.vertexVectorKnnSearch('person','embedding2',[1,2,3,4], {top_k:2, hnsw_ef_search:10}) yield node return node.id;
CALL db.vertexVectorRangeSearch('person','embedding2', [1.0,2.0,3.0,4.0], {radius:10.0, hnsw_ef_search:10}) yield node,distance return node.id, distance;

CALL db.createVertexLabelByJson('{"label":"student","primary":"id","type":"VERTEX","detach_property":true,"properties":[{"name":"id","type":"INT32","optional":false},{"name":"name","type":"STRING","optional":false,"index":false},{"name":"embedding","type":"FLOAT_VECTOR","optional":false}]}');
CALL db.addVertexVectorIndex('student','embedding', {dimension:4});
CREATE (n:student {id:1, name:'name1', embedding: [1.0,1.0,1.0,1.0]});
CREATE (n:student {id:2, name:'name2', embedding: [2.0,2.0,2.0,2.0]});
CREATE (n:student {id:3, name:'name3', embedding: [3.0,3.0,3.0,3.0]});
CALL db.vertexVectorRangeSearch('student','embedding', [1.0,2.0,3.0,4.0], {radius:10.0, hnsw_ef_search:10}) yield node,distance return node.id, distance;
CALL db.vertexVectorRangeSearch('student','embedding', [1.0,2.0,3.0,4.0], {radius:10.0, hnsw_ef_search:10, limit:1}) yield node,distance return node.id, distance;

CALL db.createVertexLabelByJson('{"label":"Chunk","primary":"id","type":"VERTEX","detach_property":true,"properties":[{"name":"id","type":"INT32","optional":false},{"name":"embedding","type":"FLOAT_VECTOR","optional":true}]}');
CALL db.addVertexVectorIndex('Chunk','embedding', {dimension:4});
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.upsertVertex('Chunk', [{id:1},{id:2}]);
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.upsertVertex('Chunk', [{id:1, embedding:[0.1,0.1,0.1,0.1]},{id:2, embedding:[-0.2,-0.2,-0.2,-0.2]}]);
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.vertexVectorKnnSearch('Chunk','embedding',[1,2,3,4], {top_k:10, hnsw_ef_search:10});
CALL db.upsertVertex('Chunk', [{id:1, embedding:[0.1,0.1,0.1,0.1]},{id:2, embedding:[-0.2,-0.2,-0.2,-0.2]}, {id:3, embedding:[0.3,0.3,0.3,0.3]}]);
CALL db.vertexVectorKnnSearch('Chunk','embedding',[1,2,3,4], {top_k:10, hnsw_ef_search:10});
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.upsertVertex('Chunk', [{id:1, embedding:[1.1,1.1,1.1,1.1]},{id:2, embedding:[-1.2,-1.2,-1.2,-1.2]}, {id:3, embedding:[1.3,1.3,1.3,1.3]}]);
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.vertexVectorKnnSearch('Chunk','embedding',[1,2,3,4], {top_k:10, hnsw_ef_search:10});
CALL db.upsertVertex('Chunk', [{id:1, embedding:null},{id:2, embedding:[-1.2,-1.2,-1.2,-1.2]}, {id:3, embedding:null}]);
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.vertexVectorKnnSearch('Chunk','embedding',[1,2,3,4], {top_k:10, hnsw_ef_search:10});
CALL db.vertexVectorRangeSearch('Chunk','embedding', [1,2,3,4], {radius:100.0, hnsw_ef_search:10}) yield node,distance return node.id, distance;

CALL db.showVertexVectorIndex() yield label_name, field_name, elements_num, deleted_ids_num return label_name, field_name, elements_num, deleted_ids_num;
CALL db.dropAllVertex();
CALL db.showVertexVectorIndex() yield label_name, field_name, elements_num, deleted_ids_num return label_name, field_name, elements_num, deleted_ids_num;
CALL db.createVertexLabelByJson('{"label":"Chunk","primary":"id","type":"VERTEX","detach_property":true,"properties":[{"name":"id","type":"INT32","optional":false},{"name":"embedding","type":"FLOAT_VECTOR","optional":true}]}');
CALL db.addVertexVectorIndex('Chunk','embedding', {dimension:4});
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.upsertVertex('Chunk', [{id:1},{id:2}]);
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;
CALL db.upsertVertex('Chunk', [{id:1, embedding:[0.1,0.1,0.1,0.1]},{id:2, embedding:[-0.2,-0.2,-0.2,-0.2]}]);
CALL db.showVertexVectorIndex() yield label_name, elements_num, deleted_ids_num where label_name = 'Chunk' return label_name, elements_num, deleted_ids_num;

CALL db.dropAllVertex();
CALL db.showVertexVectorIndex() yield label_name, field_name, elements_num, deleted_ids_num return label_name, field_name, elements_num, deleted_ids_num;
Create(n1:Chunk {id:1, embedding:[0.1,0.1,0.1,0.1]}) Create(n2:Chunk {id:1, embedding:[0.2,0.2,0.2,0.2]});
CALL db.showVertexVectorIndex() yield label_name, field_name, elements_num, deleted_ids_num return label_name, field_name, elements_num, deleted_ids_num;