MATCH (n:Person) RETURN properties(n) LIMIT 2;
MATCH p=(n:Person)-[e*..2]->(m) RETURN properties(p) LIMIT 2;
MATCH (vanessa:Person {name:'Vanessa Redgrave'})-[relatedTo]-(n) RETURN id(vanessa),type(relatedTo),label(n);
MATCH (vanessa:Person {name:'Vanessa Redgrave'})-[r]->() RETURN startNode(r),endNode(r);
MATCH (vanessa:Person {name:'Vanessa Redgrave'})-[r]->(n) RETURN properties(n);
MATCH (vanessa:Person {name:'Vanessa Redgrave'})-[r]->(n) RETURN properties(r);
MATCH (a) WHERE a.name = 'Vanessa Redgrave' RETURN label(a), labels(a);
MATCH (a) WHERE a.name = 'Vanessa Redgrave' RETURN keys(a);
MATCH (a:Person {name:'Vanessa Redgrave'}) RETURN a,-2,9.78,"im a string";
MATCH (a:Person {name:'Vanessa Redgrave'}) RETURN a,abs(-2),ceil(0.1),floor(0.9),tointeger(rand()),round(3.141592),sign(-17),sign(0.1);
RETURN toInteger(2.0),toInteger(2.3),toInteger('3');
RETURN toBoolean(true),toBoolean('True');
RETURN toFloat(2),toFloat(2.3),toFloat('3'),toFloat('2.019');
RETURN toString(2),toString(2.3),toString(true),toString('haha');
RETURN size('hello world!');
MATCH (n:Person) WHERE size(n.name) > 15 RETURN n.name,size(n.name);
WITH ['one','two','three'] AS coll RETURN size(coll);
WITH ['one','two','three'] AS coll RETURN head(coll);
WITH ['one','two','three'] AS coll RETURN last(coll);
WITH ['one','two','three'] AS coll UNWIND coll AS x RETURN collect(x);
WITH ['one','two','three'] AS coll UNWIND coll AS x WITH collect(x) AS reColl RETURN head(reColl);
MATCH (n:Person) RETURN sum(n.birthyear);
MATCH (n:Person) RETURN label(n),sum(n.birthyear);
MATCH (n:Person) RETURN n.name,sum(n.birthyear);
MATCH (n:Person) RETURN n.name,label(n),sum(n.birthyear);
MATCH (n:Person {name:'Natasha Richardson'})--(m:Person) RETURN m.name,sum(m.birthyear);
MATCH (n:Person) RETURN count(n);
MATCH (n:Person) RETURN avg(n.birthyear);
MATCH (n:Person) RETURN max(n.birthyear),min(n.birthyear),sum(n.birthyear);
OPTIONAL MATCH (n:City {name:'London'})-[r]->() RETURN count(r);
OPTIONAL MATCH (n:City {name:'London'})-[r]->() RETURN count(*);
MATCH (n:Person) RETURN count(n) AS num_person;
match (city:City {name:'New York'}) return id(city) as cityId, coalesce(city.name, city.cname) as cityName;
RETURN coalesce(null);
RETURN coalesce(2021);
RETURN coalesce(2021, null);
RETURN coalesce(null, null);
MATCH (n) RETURN coalesce(n.birthyear, n.name);
RETURN abs('haha');
RETURN ceil('haha');
RETURN floor('haha');
RETURN round('haha');
RETURN sign('haha');
RETURN toboolean('haha');
RETURN tofloat('haha');
RETURN tointeger('haha');