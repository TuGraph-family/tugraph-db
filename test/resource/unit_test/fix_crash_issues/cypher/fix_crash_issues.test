MATCH (n:Person {name:'Liam Neeson'}) WITH n AS aa RETURN aa.name;
MATCH (n:Person {name:'Liam Neeson'})-[e]->(m) WITH e AS aa RETURN aa;
MATCH (n:Person {name:'Liam Neeson'}) SET n.birthyear=2052 RETURN n.birthyear;
MATCH (n:Person {name:'Liam Neeson'}),(m:Person {name:'Richard Harris'}) SET n.birthyear=2152 RETURN n.birthyear,m.birthyear /*2152,1930*/;
MATCH (n:Person {name:'Liam Neeson'}),(m:Person {name:'Richard Harris'}) SET n.birthyear=2252,m.birthyear=2230 RETURN n.birthyear,m.birthyear /*2252,2230*/;
MERGE (z3:Person {name:'zhang3'}) ON CREATE SET z3.birthyear=2021 ON MATCH SET z3.birthyear=2022 WITH z3 MERGE (z4:Person {name:'zhang4'}) ON CREATE SET z4.birthyear=2021 ON MATCH SET z4.birthyear=2022 WITH z3,z4 CREATE (z3)-[:HAS_CHILD]->(z4);
MATCH (z3:Person {name:'zhang3'})-[r]->(z4:Person {name:'zhang4'}) RETURN r;
MERGE (z3:Person {name:'zhang3'}) ON CREATE SET z3.birthyear=2021 ON MATCH SET z3.birthyear=2022 WITH z3 MERGE (z4:Person {name:'zhang4'}) ON CREATE SET z4.birthyear=2021 ON MATCH SET z4.birthyear=2022 WITH z3,z4 CREATE (z3)-[r:HAS_CHILD]->(z4) RETURN z3,z4,r;
MATCH (z3:Person {name:'zhang3'})-[r]->(z4:Person {name:'zhang4'}) RETURN r;
MATCH (m:City) RETURN collect(m.name) + [1,2];
WITH [1,2] AS nn MATCH (m:City) RETURN collect(m.name) + nn;
MATCH (n:City) WITH collect(n.name) AS nn MATCH (m:City) RETURN collect(m.name) + nn;
MATCH (n:Person) RETURN -n.birthyear LIMIT 3;
MATCH (n:Person) RETURN -sum(n.birthyear) /*-27241*/;
MATCH (n) -[r:HAS_CHILD * 2 ]->(m) RETURN n,m ;
MATCH (n) -[r:HAS_CHILD * .. ]->(m) RETURN n,m ;
WITH '1' as s UNWIND ['a','b'] as k RETURN s,k;
WITH '1' as s UNWIND ['a','b']+s as k RETURN s,k;
MATCH (n:Person)-[]->(m:Film) WITH n.name AS nname, collect(id(m)) AS mc MATCH (n:Person {name: nname})<-[]-(o) WITH n.name AS nname, mc, collect(id(o)) AS oc UNWIND mc+oc AS c RETURN c;
MATCH (m:Person)-[r:BORN_IN]->(n:City) WHERE n.name = 'London' and r.weight >= 1 and r.weight <= 100 RETURN sum(r.weight);
MATCH (n:City) RETURN collect(n.name) + n.name;
MATCH (n:Person) RETURN NOT n.nam;
MATCH (n:Person) RETURN -n.name;
REMOVE a.name;
SET a :MyLabel;
MATCH (n:Person) WITH n,n.name RETURN n.name;
WITH * MERGE(n:Person) RETURN n;
RETURN * UNION RETURN *;
RETURN * UNION RETURN 1 AS a;
RETURN 2 AS b UNION RETURN 1 AS a;
RETURN 2 AS b UNION RETURN 1 AS a, 3 AS c;
DELETE [];
DELETE [x in [1, 2, 3] | x];
DELETE TRUE;
MERGE (n:null {id: 2909}) RETURN n;
MATCH (n:Person {name:'Liam Neeson'}), (m:Person {name:'Liam Neeson'}), (o:Person {name:'Liam Neeson'}) WHERE custom.myadd('asd')='1' RETURN 1;
MATCH (movie)<-[r]-(n) WITH n,n MATCH (n1) RETURN n1 LIMIT 1;
MATCH (movie)<-[r]-(n) return n,n limit 1;
MATCH (n) RETURN n LIMIT 5;
CALL db.vertexLabels;
CALL dbms.graph.listGraphs();
MATCH p=(n)-[e]->(m) RETURN p LIMIT 5;
