MATCH (n:Person {name:'Vanessa Redgrave'})-[:ACTED_IN]->(m) RETURN n,m.title;
MATCH (:Person {name:'Vanessa Redgrave'})-[:ACTED_IN]->(movie) return movie.title;
MATCH (a:Person {name:'Vanessa Redgrave'})-[relatedTo]-(b) RETURN b,relatedTo;
MATCH (a:Person {name:'Vanessa Redgrave'})-[:HAS_CHILD]-(b) RETURN b.name;
MATCH (m:Film {title:'Batman Begins'})<-[:DIRECTED]-(directors) RETURN directors.name;
MATCH (n:Person {name:'Vanessa Redgrave'})-[]-(neighbors) RETURN neighbors;
MATCH (n:Person {name:'Lindsay Lohan'})-[:ACTED_IN]->(m)<-[:ACTED_IN]-(coActors) RETURN coActors.name;
MATCH (n:Person {name:'Vanessa Redgrave'})-[]->()<-[]-(m) RETURN m;
MATCH (n:Person {name:'Vanessa Redgrave'})-[]->()<-[]-(m) RETURN DISTINCT m;
MATCH (na)-[]->(nb)-[]->(nc) RETURN na,nb,nc;
MATCH (na:Person)-[:HAS_CHILD]->(nb)-[:MARRIED]->(nc) RETURN na,nb,nc;
MATCH (m:Film {title:'Camelot'})<-[r:ACTED_IN]-(n) RETURN n.name,r.charactername;
MATCH (n)-[relatedTo]->(vanessa:Person {name:'Vanessa Redgrave'}) RETURN n,relatedTo;
MATCH (n)<-[relatedTo]-(vanessa:Person {name:'Vanessa Redgrave'}) RETURN n,relatedTo;
MATCH (a:Person {name:'Vanessa Redgrave'})-[]->(b:Person) RETURN b.name;
MATCH (a:Person {name:'Vanessa Redgrave'})-[]-(b:Person) RETURN b.name;
MATCH (a:Person {name:'Vanessa Redgrave'})-[]-(b) WHERE b:Person RETURN b.name;
MATCH (a:Person {name:'Vanessa Redgrave'})-[]-(b) WHERE b:Person AND b.birthyear >= 1910 RETURN b.name;
MATCH (a:Person {name:'Vanessa Redgrave'})-[]-(b) WHERE b:Person OR b:City RETURN b.name;
MATCH (n:Person {name:'Lindsay Lohan'})-[:ACTED_IN]->(m)<-[:ACTED_IN]-(coActors)-[:BORN_IN]->(city) RETURN coActors.name,city.name;
MATCH (a)-->(b)-->(c)<--(d) USING JOIN ON c WHERE a.uid > 1 AND d.uid > 2 AND b.uid < 3 AND c.uid < 4 RETURN d;
MATCH (a)-->(b)-->(c)<--(d) WHERE a.uid > 1 AND d.uid > 2 AND b.uid < 3 AND c.uid < 4 RETURN d;
MATCH (a)-->(b)-->(c)<--(d) WHERE a.uid > d.uid AND b.uid < c.uid RETURN d;
MATCH (a)-->(b)-->(c)<--(d) WHERE a.uid > d.uid AND b.uid < c.uid AND a.uid > b.uid RETURN d;
MATCH (n:Person)-[b:BORN_IN]->(m) WHERE b.weight < 20.18 RETURN m;
MATCH (n:Person)-[b:BORN_IN]->(m) WHERE b.weight < 20.18 AND m.name <> 'Houston' RETURN m;
MATCH (n:Person)-[a:ACTED_IN]->(m) WHERE n.name = a.title RETURN n;
MATCH (n:Person)-[a:ACTED_IN]->(m) WHERE a.role = "Iron Man" RETURN n;
MATCH (n:Person)-[a:ACTED_IN]->(m) WHERE n.name = "Vanessa Redgrave" RETURN n;
MATCH (n:Person)-[a:ACTED_IN]->(m) WHERE m.title = "Camelot" RETURN n;
MATCH (n:Person)-[a:ACTED_IN]->(m) WHERE n.name = a.title AND m.title = "Camelot" RETURN n;
MATCH (n:Person)-[a:ACTED_IN]->(m) WHERE n.name =  "Vanessa Redgrave" AND m.title = a.title RETURN n;
MATCH (n:Person)-[b:BORN_IN]->(m) WHERE b.weight < 19.2 OR b.weight > 20.6 RETURN m;
MATCH (n:Person)-[b:BORN_IN]->(m) WHERE (b.weight + b.weight) < 38.4 OR b.weight > 20.6 RETURN m;
MATCH (a)-[e]->(b) WHERE a.name='Liam Neeson' and b.title<>'' and (e.charactername='Henri Ducard' or e.relation = '') RETURN a,e,b;
MATCH (a) WHERE a.name IN ['Dennis Quaid', 'Christopher Nolan'] WITH a MATCH (b) WHERE b.name IN ['London'] RETURN a, b;
MATCH (a) WHERE a.name IN ['Dennis Quaid', 'Christopher Nolan'] WITH a MATCH (b) WHERE b.name IN ['London', 'Beijing', 'Houston'] RETURN a, b;
MATCH (n:Person) WHERE n.name = 'Vanessa Redgrave' OR NOT n.name <> 'Dennis Quaid' RETURN n.name;
MATCH (n:Person {name:'Vanessa Redgrave'})-[:BORN_IN|ACTED_IN]->(m) RETURN m;
MATCH (n:Person {name:'Michael Redgrave'})<-[:MARRIED|HAS_CHILD]-(m) RETURN m;
MATCH (n:Person {name:'Vanessa Redgrave'})-[:BORN_IN|HAS_CHILD]-(m) RETURN m;
MATCH (n:Person {name:'Vanessa Redgrave'})--(m:Person) WHERE m.birthyear > n.birthyear RETURN m;
MATCH (n:Person {name:'Vanessa Redgrave'})--(m:Person) WHERE n.birthyear > m.birthyear RETURN m;
MATCH (n:Person {name:'Natasha Richardson'})-[:HAS_CHILD]->(m) RETURN m;
MATCH (n:Person {name:'Natasha Richardson'})<-[:HAS_CHILD]-(m) RETURN m;
MATCH (n:Person {name:'Natasha Richardson'})-[:HAS_CHILD]-(m) RETURN m;
match (a)-->(b)-->(c)<--(d) where not ((not (a.birthyear>d.birthyear and b.birthyear<c.birthyear)) and (not a.birthyear>b.birthyear)) return d;
MATCH (n:Person{name:'Vanessa Redgrave'}),(m:Person{name: 'Michael Redgrave'}) WHERE n.birthyear > 1960 and m.birthyear < 2000 RETURN n.name LIMIT 1;
MATCH (n:Person) RETURN count(n);
MATCH (n:Person) WHERE n.birthyear > 1900 AND n.birthyear < 2000 RETURN count(n);
MATCH (n:Person) RETURN n.birthyear, count(n);
MATCH (f:Film)<-[:ACTED_IN]-(p:Person)-[:BORN_IN]->(c:City) RETURN c.name, count(f) AS sum ORDER BY sum DESC;
MATCH p=(n1)-[r1]->(n2)-[r2]->(m:Person) return count(p);
MATCH p1=(n1)-[r1]->(n2)-[r2]->(m1:City),p2=(n3)-[r3]->(m2:Film) return count(p1);
MATCH p1=(n1)-[r1]->(n2)-[r2]->(m1:City) with count(p1) as cp match p1=(n1)-[r1]->(m1:Film) return count(p1);