MATCH (s)<-[r:BORN_IN]-(d)
RETURN s,r,r.weight,d
ORDER BY r.weight
LIMIT 2;
with '123dfd\\fd45a\'bcd' as a return a;
with "123dfd\\fd\"45a'bcd" as a return a;
optional MATCH (n:City {name:'London'})-[r]->(m) RETURN n.name,r,m;
MATCH (n:Person)-[r:BORN_IN {reg_time:datetime('2023-05-01 14:00:00')}]->(m) RETURN r;
MATCH (n:Person)<-[r:BORN_IN {reg_time:datetime('2023-05-01 14:00:00')}]-(m) RETURN r;
MATCH (n:Person)-[r:BORN_IN {reg_time:datetime('2023-05-01 14:00:00')}]->(m) where r.weight > 20 RETURN r;
MATCH (n:Person)-[r:BORN_IN {reg_time:datetime('2023-05-01 14:00:00')}]->(m) where r.weight < 20 RETURN r;
MATCH (n:Person)-[r:ACTED_IN {charactername:'Henri Ducard'}]->(m) RETURN r;
MATCH (n:Person)<-[r:ACTED_IN {charactername:'Henri Ducard'}]-(m) RETURN r;
MATCH (p:Person) RETURN p.name ORDER BY p.birthyear DESC LIMIT 5;
MATCH (p:Person) RETURN p ORDER BY p.birthyear DESC LIMIT 5;
WITH [
    {a: 'Camelot', b: 'Vanessa Redgrave'},
    {a: "Batman Begins", b: "Liam Neeson"},
    {a: "Batman Begins", b: "Christopher Nolan"}
] AS pairs
UNWIND pairs AS pair
MATCH (n1:Film {title: pair.a})<-[r]-(n2:Person {name: pair.b})
RETURN r;
WITH 'Vanessa Redgrave' as names, 'Camelot' as films MATCH (n1:Film {title: films})<-[r]-(n2:Person {name: names}) RETURN r;
WITH {a: 'Camelot', b: 'Vanessa Redgrave'} as pair MATCH (n1:Film {title: pair.a})<-[r]-(n2:Person {name: pair.b}) RETURN r;
create(n:Person {name:'ðŸ˜Ž'}) return n;
